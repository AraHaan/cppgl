
#ifndef __gl41_h_
#define __gl41_h_
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include "gl41_defines.h"

static void* get_proc(const char *namez);

#ifdef _WIN32
#include <windows.h>
static HMODULE libGL;

typedef void* (APIENTRYP PFNWGLGETPROCADDRESSPROC_PRIVATE)(const char*);
PFNWGLGETPROCADDRESSPROC_PRIVATE cppglGetProcAddressPtr;

static
int open_gl(void) {
    libGL = LoadLibraryW(L"opengl32.dll");
    if(libGL != NULL) {
        cppglGetProcAddressPtr = (PFNWGLGETPROCADDRESSPROC_PRIVATE)GetProcAddress(
                libGL, "wglGetProcAddress");
        return cppglGetProcAddressPtr != NULL;
    }

    return 0;
}

static
void close_gl(void) {
    if(libGL != NULL) {
        FreeLibrary(libGL);
        libGL = NULL;
    }
}
#else
#include <dlfcn.h>
static void* libGL;

#ifndef __APPLE__
typedef void* (APIENTRYP PFNGLXGETPROCADDRESSPROC_PRIVATE)(const char*);
PFNGLXGETPROCADDRESSPROC_PRIVATE cppglGetProcAddressPtr;
#endif

static
int open_gl(void) {
#ifdef __APPLE__
    static const char *NAMES[] = {
        "../Frameworks/OpenGL.framework/OpenGL",
        "/Library/Frameworks/OpenGL.framework/OpenGL",
        "/System/Library/Frameworks/OpenGL.framework/OpenGL",
        "/System/Library/Frameworks/OpenGL.framework/Versions/Current/OpenGL"
    };
#else
    static const char *NAMES[] = {"libGL.so.1", "libGL.so"};
#endif

    unsigned int index = 0;
    for(index = 0; index < (sizeof(NAMES) / sizeof(NAMES[0])); index++) {
        libGL = dlopen(NAMES[index], RTLD_NOW | RTLD_GLOBAL);

        if(libGL != NULL) {
#ifdef __APPLE__
            return 1;
#else
            cppglGetProcAddressPtr = (PFNGLXGETPROCADDRESSPROC_PRIVATE)dlsym(libGL,
                "glXGetProcAddressARB");
            return cppglGetProcAddressPtr != NULL;
#endif
        }
    }

    return 0;
}

static
void close_gl() {
    if(libGL != NULL) {
        dlclose(libGL);
        libGL = NULL;
    }
}
#endif

static
void* get_proc(const char *namez) {
    void* result = NULL;
    if(libGL == NULL) return NULL;

#ifndef __APPLE__
    if(cppglGetProcAddressPtr != NULL) {
        result = cppglGetProcAddressPtr(namez);
    }
#endif
    if(result == NULL) {
#ifdef _WIN32
        result = (void*)GetProcAddress(libGL, namez);
#else
        result = dlsym(libGL, namez);
#endif
    }

    return result;
}

int cppglLoadGL(void) {
    int status = 0;

    if(open_gl()) {
        status = cppglLoadGLLoader(&get_proc);
        close_gl();
    }

    return status;
}

struct cppglGLversionStruct GLVersion;

#if defined(GL_ES_VERSION_3_0) || defined(GL_VERSION_3_0)
#define _CPPGL_IS_SOME_NEW_VERSION 1
#endif

static int max_loaded_major;
static int max_loaded_minor;

static const char *exts = NULL;
static int num_exts_i = 0;
static const char **exts_i = NULL;

static int get_exts(void) {
#ifdef _CPPGL_IS_SOME_NEW_VERSION
    if(max_loaded_major < 3) {
#endif
        exts = (const char *)glGetString(GL_EXTENSIONS);
#ifdef _CPPGL_IS_SOME_NEW_VERSION
    } else {
        int index;

        num_exts_i = 0;
        glGetIntegerv(GL_NUM_EXTENSIONS, &num_exts_i);
        if (num_exts_i > 0) {
            exts_i = (const char **)realloc((void *)exts_i, num_exts_i * sizeof *exts_i);
        }

        if (exts_i == NULL) {
            return 0;
        }

        for(index = 0; index < num_exts_i; index++) {
            exts_i[index] = (const char*)glGetStringi(GL_EXTENSIONS, index);
        }
    }
#endif
    return 1;
}

static void free_exts(void) {
    if (exts_i != NULL) {
        free((char **)exts_i);
        exts_i = NULL;
    }
}

static int has_ext(const char *ext) {
#ifdef _CPPGL_IS_SOME_NEW_VERSION
    if(max_loaded_major < 3) {
#endif
        const char *extensions;
        const char *loc;
        const char *terminator;
        extensions = exts;
        if(extensions == NULL || ext == NULL) {
            return 0;
        }

        while(1) {
            loc = strstr(extensions, ext);
            if(loc == NULL) {
                return 0;
            }

            terminator = loc + strlen(ext);
            if((loc == extensions || *(loc - 1) == ' ') &&
                (*terminator == ' ' || *terminator == '\0')) {
                return 1;
            }
            extensions = terminator;
        }
#ifdef _CPPGL_IS_SOME_NEW_VERSION
    } else {
        int index;

        for(index = 0; index < num_exts_i; index++) {
            const char *e = exts_i[index];

            if(strcmp(e, ext) == 0) {
                return 1;
            }
        }
    }
#endif

    return 0;
}
int CPPGL_GL_VERSION_1_0;
int CPPGL_GL_VERSION_1_1;
int CPPGL_GL_VERSION_1_2;
int CPPGL_GL_VERSION_1_3;
int CPPGL_GL_VERSION_1_4;
int CPPGL_GL_VERSION_1_5;
int CPPGL_GL_VERSION_2_0;
int CPPGL_GL_VERSION_2_1;
int CPPGL_GL_VERSION_3_0;
int CPPGL_GL_VERSION_3_1;
int CPPGL_GL_VERSION_3_2;
int CPPGL_GL_VERSION_3_3;
int CPPGL_GL_VERSION_4_0;
int CPPGL_GL_VERSION_4_1;
PFNGLCOPYTEXIMAGE1DPROC cppgl_glCopyTexImage1D;
PFNGLVERTEXATTRIBI3UIPROC cppgl_glVertexAttribI3ui;
PFNGLWINDOWPOS2SPROC cppgl_glWindowPos2s;
PFNGLWINDOWPOS2IPROC cppgl_glWindowPos2i;
PFNGLWINDOWPOS2FPROC cppgl_glWindowPos2f;
PFNGLWINDOWPOS2DPROC cppgl_glWindowPos2d;
PFNGLVERTEX2FVPROC cppgl_glVertex2fv;
PFNGLINDEXIPROC cppgl_glIndexi;
PFNGLFRAMEBUFFERRENDERBUFFERPROC cppgl_glFramebufferRenderbuffer;
PFNGLUNIFORMSUBROUTINESUIVPROC cppgl_glUniformSubroutinesuiv;
PFNGLRECTDVPROC cppgl_glRectdv;
PFNGLCOMPRESSEDTEXSUBIMAGE3DPROC cppgl_glCompressedTexSubImage3D;
PFNGLEVALCOORD2DPROC cppgl_glEvalCoord2d;
PFNGLEVALCOORD2FPROC cppgl_glEvalCoord2f;
PFNGLGETDOUBLEI_VPROC cppgl_glGetDoublei_v;
PFNGLINDEXDPROC cppgl_glIndexd;
PFNGLVERTEXATTRIB1SVPROC cppgl_glVertexAttrib1sv;
PFNGLINDEXFPROC cppgl_glIndexf;
PFNGLBINDSAMPLERPROC cppgl_glBindSampler;
PFNGLLINEWIDTHPROC cppgl_glLineWidth;
PFNGLCOLORP3UIVPROC cppgl_glColorP3uiv;
PFNGLGETINTEGERI_VPROC cppgl_glGetIntegeri_v;
PFNGLGETMAPFVPROC cppgl_glGetMapfv;
PFNGLINDEXSPROC cppgl_glIndexs;
PFNGLCOMPILESHADERPROC cppgl_glCompileShader;
PFNGLGETTRANSFORMFEEDBACKVARYINGPROC cppgl_glGetTransformFeedbackVarying;
PFNGLWINDOWPOS2IVPROC cppgl_glWindowPos2iv;
PFNGLINDEXFVPROC cppgl_glIndexfv;
PFNGLFOGIVPROC cppgl_glFogiv;
PFNGLSTENCILMASKSEPARATEPROC cppgl_glStencilMaskSeparate;
PFNGLRASTERPOS2FVPROC cppgl_glRasterPos2fv;
PFNGLLIGHTMODELIVPROC cppgl_glLightModeliv;
PFNGLDEPTHRANGEFPROC cppgl_glDepthRangef;
PFNGLCOLOR4UIPROC cppgl_glColor4ui;
PFNGLSECONDARYCOLOR3FVPROC cppgl_glSecondaryColor3fv;
PFNGLMULTITEXCOORDP3UIPROC cppgl_glMultiTexCoordP3ui;
PFNGLFOGFVPROC cppgl_glFogfv;
PFNGLVERTEXP4UIPROC cppgl_glVertexP4ui;
PFNGLENABLEIPROC cppgl_glEnablei;
PFNGLPROGRAMUNIFORM3DVPROC cppgl_glProgramUniform3dv;
PFNGLVERTEX4IVPROC cppgl_glVertex4iv;
PFNGLEVALCOORD1FVPROC cppgl_glEvalCoord1fv;
PFNGLWINDOWPOS2SVPROC cppgl_glWindowPos2sv;
PFNGLVERTEXATTRIBP4UIPROC cppgl_glVertexAttribP4ui;
PFNGLCREATESHADERPROC cppgl_glCreateShader;
PFNGLISBUFFERPROC cppgl_glIsBuffer;
PFNGLGETMULTISAMPLEFVPROC cppgl_glGetMultisamplefv;
PFNGLPROGRAMUNIFORMMATRIX2DVPROC cppgl_glProgramUniformMatrix2dv;
PFNGLGENRENDERBUFFERSPROC cppgl_glGenRenderbuffers;
PFNGLCOPYTEXSUBIMAGE2DPROC cppgl_glCopyTexSubImage2D;
PFNGLCOMPRESSEDTEXIMAGE2DPROC cppgl_glCompressedTexImage2D;
PFNGLVERTEXATTRIB1FPROC cppgl_glVertexAttrib1f;
PFNGLBLENDFUNCSEPARATEPROC cppgl_glBlendFuncSeparate;
PFNGLVERTEX4FVPROC cppgl_glVertex4fv;
PFNGLMINSAMPLESHADINGPROC cppgl_glMinSampleShading;
PFNGLBINDTEXTUREPROC cppgl_glBindTexture;
PFNGLVERTEXATTRIB1SPROC cppgl_glVertexAttrib1s;
PFNGLTEXCOORD2FVPROC cppgl_glTexCoord2fv;
PFNGLSAMPLEMASKIPROC cppgl_glSampleMaski;
PFNGLVERTEXP2UIPROC cppgl_glVertexP2ui;
PFNGLDRAWRANGEELEMENTSBASEVERTEXPROC cppgl_glDrawRangeElementsBaseVertex;
PFNGLTEXCOORD4FVPROC cppgl_glTexCoord4fv;
PFNGLUNIFORMMATRIX3X2FVPROC cppgl_glUniformMatrix3x2fv;
PFNGLPOINTSIZEPROC cppgl_glPointSize;
PFNGLVERTEXATTRIB2DVPROC cppgl_glVertexAttrib2dv;
PFNGLDELETEPROGRAMPROC cppgl_glDeleteProgram;
PFNGLCOLOR4BVPROC cppgl_glColor4bv;
PFNGLRASTERPOS2FPROC cppgl_glRasterPos2f;
PFNGLRASTERPOS2DPROC cppgl_glRasterPos2d;
PFNGLLOADIDENTITYPROC cppgl_glLoadIdentity;
PFNGLRASTERPOS2IPROC cppgl_glRasterPos2i;
PFNGLRENDERBUFFERSTORAGEPROC cppgl_glRenderbufferStorage;
PFNGLUNIFORMMATRIX4X3FVPROC cppgl_glUniformMatrix4x3fv;
PFNGLCOLOR3BPROC cppgl_glColor3b;
PFNGLCLEARBUFFERFVPROC cppgl_glClearBufferfv;
PFNGLEDGEFLAGPROC cppgl_glEdgeFlag;
PFNGLDELETESAMPLERSPROC cppgl_glDeleteSamplers;
PFNGLVERTEX3DPROC cppgl_glVertex3d;
PFNGLVERTEX3FPROC cppgl_glVertex3f;
PFNGLVERTEX3IPROC cppgl_glVertex3i;
PFNGLCOLOR3IPROC cppgl_glColor3i;
PFNGLUNIFORM3DPROC cppgl_glUniform3d;
PFNGLUNIFORM3FPROC cppgl_glUniform3f;
PFNGLVERTEXATTRIB4UBVPROC cppgl_glVertexAttrib4ubv;
PFNGLCOLOR3SPROC cppgl_glColor3s;
PFNGLVERTEX3SPROC cppgl_glVertex3s;
PFNGLTEXCOORDP2UIPROC cppgl_glTexCoordP2ui;
PFNGLCOLORMASKIPROC cppgl_glColorMaski;
PFNGLCLEARBUFFERFIPROC cppgl_glClearBufferfi;
PFNGLDRAWARRAYSINDIRECTPROC cppgl_glDrawArraysIndirect;
PFNGLTEXCOORD1IVPROC cppgl_glTexCoord1iv;
PFNGLBLITFRAMEBUFFERPROC cppgl_glBlitFramebuffer;
PFNGLPAUSETRANSFORMFEEDBACKPROC cppgl_glPauseTransformFeedback;
PFNGLMULTITEXCOORDP2UIPROC cppgl_glMultiTexCoordP2ui;
PFNGLPROGRAMUNIFORMMATRIX3X2DVPROC cppgl_glProgramUniformMatrix3x2dv;
PFNGLPROGRAMUNIFORMMATRIX3X2FVPROC cppgl_glProgramUniformMatrix3x2fv;
PFNGLGETSAMPLERPARAMETERIIVPROC cppgl_glGetSamplerParameterIiv;
PFNGLGETFRAGDATAINDEXPROC cppgl_glGetFragDataIndex;
PFNGLVERTEXATTRIBL4DPROC cppgl_glVertexAttribL4d;
PFNGLVERTEXATTRIB3FPROC cppgl_glVertexAttrib3f;
PFNGLPROGRAMUNIFORMMATRIX4FVPROC cppgl_glProgramUniformMatrix4fv;
PFNGLVERTEX2IVPROC cppgl_glVertex2iv;
PFNGLCOLOR3SVPROC cppgl_glColor3sv;
PFNGLGETVERTEXATTRIBDVPROC cppgl_glGetVertexAttribdv;
PFNGLACTIVESHADERPROGRAMPROC cppgl_glActiveShaderProgram;
PFNGLUNIFORMMATRIX3X4FVPROC cppgl_glUniformMatrix3x4fv;
PFNGLUNIFORMMATRIX3DVPROC cppgl_glUniformMatrix3dv;
PFNGLNORMALPOINTERPROC cppgl_glNormalPointer;
PFNGLTEXCOORDP3UIVPROC cppgl_glTexCoordP3uiv;
PFNGLVERTEX4SVPROC cppgl_glVertex4sv;
PFNGLPASSTHROUGHPROC cppgl_glPassThrough;
PFNGLMULTITEXCOORDP4UIPROC cppgl_glMultiTexCoordP4ui;
PFNGLFOGIPROC cppgl_glFogi;
PFNGLBEGINPROC cppgl_glBegin;
PFNGLEVALCOORD2DVPROC cppgl_glEvalCoord2dv;
PFNGLCOLOR3UBVPROC cppgl_glColor3ubv;
PFNGLVERTEXPOINTERPROC cppgl_glVertexPointer;
PFNGLSECONDARYCOLOR3UIVPROC cppgl_glSecondaryColor3uiv;
PFNGLDELETEFRAMEBUFFERSPROC cppgl_glDeleteFramebuffers;
PFNGLDRAWARRAYSPROC cppgl_glDrawArrays;
PFNGLUNIFORM1UIPROC cppgl_glUniform1ui;
PFNGLMULTITEXCOORD1DPROC cppgl_glMultiTexCoord1d;
PFNGLMULTITEXCOORD1FPROC cppgl_glMultiTexCoord1f;
PFNGLPROGRAMPARAMETERIPROC cppgl_glProgramParameteri;
PFNGLLIGHTFVPROC cppgl_glLightfv;
PFNGLTEXCOORDP3UIPROC cppgl_glTexCoordP3ui;
PFNGLVERTEXATTRIB3DPROC cppgl_glVertexAttrib3d;
PFNGLCLEARPROC cppgl_glClear;
PFNGLMULTITEXCOORD1IPROC cppgl_glMultiTexCoord1i;
PFNGLGETACTIVEUNIFORMNAMEPROC cppgl_glGetActiveUniformName;
PFNGLMULTITEXCOORD1SPROC cppgl_glMultiTexCoord1s;
PFNGLISENABLEDPROC cppgl_glIsEnabled;
PFNGLSTENCILOPPROC cppgl_glStencilOp;
PFNGLGETQUERYOBJECTUIVPROC cppgl_glGetQueryObjectuiv;
PFNGLFRAMEBUFFERTEXTURE2DPROC cppgl_glFramebufferTexture2D;
PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC cppgl_glGetFramebufferAttachmentParameteriv;
PFNGLTRANSLATEFPROC cppgl_glTranslatef;
PFNGLVERTEXATTRIB4NUBPROC cppgl_glVertexAttrib4Nub;
PFNGLTRANSLATEDPROC cppgl_glTranslated;
PFNGLTEXCOORD3SVPROC cppgl_glTexCoord3sv;
PFNGLGETFRAGDATALOCATIONPROC cppgl_glGetFragDataLocation;
PFNGLTEXIMAGE1DPROC cppgl_glTexImage1D;
PFNGLVERTEXP3UIVPROC cppgl_glVertexP3uiv;
PFNGLTEXPARAMETERIVPROC cppgl_glTexParameteriv;
PFNGLSECONDARYCOLOR3BVPROC cppgl_glSecondaryColor3bv;
PFNGLGETMATERIALFVPROC cppgl_glGetMaterialfv;
PFNGLGETTEXIMAGEPROC cppgl_glGetTexImage;
PFNGLFOGCOORDFVPROC cppgl_glFogCoordfv;
PFNGLPIXELMAPUIVPROC cppgl_glPixelMapuiv;
PFNGLGETSHADERINFOLOGPROC cppgl_glGetShaderInfoLog;
PFNGLGETQUERYOBJECTI64VPROC cppgl_glGetQueryObjecti64v;
PFNGLGENFRAMEBUFFERSPROC cppgl_glGenFramebuffers;
PFNGLINDEXSVPROC cppgl_glIndexsv;
PFNGLPROGRAMUNIFORMMATRIX3X4DVPROC cppgl_glProgramUniformMatrix3x4dv;
PFNGLGETATTACHEDSHADERSPROC cppgl_glGetAttachedShaders;
PFNGLISRENDERBUFFERPROC cppgl_glIsRenderbuffer;
PFNGLVERTEX3IVPROC cppgl_glVertex3iv;
PFNGLBITMAPPROC cppgl_glBitmap;
PFNGLPROGRAMUNIFORM1UIVPROC cppgl_glProgramUniform1uiv;
PFNGLMATERIALIPROC cppgl_glMateriali;
PFNGLISVERTEXARRAYPROC cppgl_glIsVertexArray;
PFNGLDISABLEVERTEXATTRIBARRAYPROC cppgl_glDisableVertexAttribArray;
PFNGLPROGRAMUNIFORM2IVPROC cppgl_glProgramUniform2iv;
PFNGLGETQUERYIVPROC cppgl_glGetQueryiv;
PFNGLTEXCOORD4FPROC cppgl_glTexCoord4f;
PFNGLTEXCOORD4DPROC cppgl_glTexCoord4d;
PFNGLGETSAMPLERPARAMETERFVPROC cppgl_glGetSamplerParameterfv;
PFNGLTEXCOORD4IPROC cppgl_glTexCoord4i;
PFNGLMATERIALFPROC cppgl_glMaterialf;
PFNGLTEXCOORD4SPROC cppgl_glTexCoord4s;
PFNGLPROGRAMUNIFORMMATRIX4X2DVPROC cppgl_glProgramUniformMatrix4x2dv;
PFNGLGETUNIFORMINDICESPROC cppgl_glGetUniformIndices;
PFNGLISSHADERPROC cppgl_glIsShader;
PFNGLMULTITEXCOORD2SPROC cppgl_glMultiTexCoord2s;
PFNGLVERTEXATTRIBI4UBVPROC cppgl_glVertexAttribI4ubv;
PFNGLVERTEX3DVPROC cppgl_glVertex3dv;
PFNGLGETINTEGER64VPROC cppgl_glGetInteger64v;
PFNGLPOINTPARAMETERIVPROC cppgl_glPointParameteriv;
PFNGLENABLEPROC cppgl_glEnable;
PFNGLGETACTIVEUNIFORMSIVPROC cppgl_glGetActiveUniformsiv;
PFNGLCOLOR4FVPROC cppgl_glColor4fv;
PFNGLTEXCOORD1FVPROC cppgl_glTexCoord1fv;
PFNGLBLENDEQUATIONIPROC cppgl_glBlendEquationi;
PFNGLTEXCOORD2SVPROC cppgl_glTexCoord2sv;
PFNGLVERTEXATTRIB4DVPROC cppgl_glVertexAttrib4dv;
PFNGLMULTITEXCOORD1DVPROC cppgl_glMultiTexCoord1dv;
PFNGLMULTITEXCOORD2IPROC cppgl_glMultiTexCoord2i;
PFNGLTEXCOORD3FVPROC cppgl_glTexCoord3fv;
PFNGLSECONDARYCOLOR3USVPROC cppgl_glSecondaryColor3usv;
PFNGLTEXGENFPROC cppgl_glTexGenf;
PFNGLMULTITEXCOORDP3UIVPROC cppgl_glMultiTexCoordP3uiv;
PFNGLVERTEXATTRIBP3UIPROC cppgl_glVertexAttribP3ui;
PFNGLVERTEXATTRIBL1DVPROC cppgl_glVertexAttribL1dv;
PFNGLMULTITEXCOORDP1UIPROC cppgl_glMultiTexCoordP1ui;
PFNGLPROGRAMUNIFORM3UIPROC cppgl_glProgramUniform3ui;
PFNGLGETPOINTERVPROC cppgl_glGetPointerv;
PFNGLPOLYGONOFFSETPROC cppgl_glPolygonOffset;
PFNGLGETUNIFORMUIVPROC cppgl_glGetUniformuiv;
PFNGLNORMAL3FVPROC cppgl_glNormal3fv;
PFNGLSECONDARYCOLOR3SPROC cppgl_glSecondaryColor3s;
PFNGLDEPTHRANGEPROC cppgl_glDepthRange;
PFNGLFRUSTUMPROC cppgl_glFrustum;
PFNGLMULTITEXCOORD4SVPROC cppgl_glMultiTexCoord4sv;
PFNGLDRAWBUFFERPROC cppgl_glDrawBuffer;
PFNGLPUSHMATRIXPROC cppgl_glPushMatrix;
PFNGLRASTERPOS3FVPROC cppgl_glRasterPos3fv;
PFNGLORTHOPROC cppgl_glOrtho;
PFNGLDRAWELEMENTSINSTANCEDPROC cppgl_glDrawElementsInstanced;
PFNGLWINDOWPOS3SVPROC cppgl_glWindowPos3sv;
PFNGLVERTEXATTRIBL4DVPROC cppgl_glVertexAttribL4dv;
PFNGLPROGRAMUNIFORM1IPROC cppgl_glProgramUniform1i;
PFNGLUNIFORM2DVPROC cppgl_glUniform2dv;
PFNGLPROGRAMUNIFORM1DPROC cppgl_glProgramUniform1d;
PFNGLPROGRAMUNIFORM1FPROC cppgl_glProgramUniform1f;
PFNGLCLEARINDEXPROC cppgl_glClearIndex;
PFNGLMAP1DPROC cppgl_glMap1d;
PFNGLMAP1FPROC cppgl_glMap1f;
PFNGLFLUSHPROC cppgl_glFlush;
PFNGLGETRENDERBUFFERPARAMETERIVPROC cppgl_glGetRenderbufferParameteriv;
PFNGLBEGINQUERYINDEXEDPROC cppgl_glBeginQueryIndexed;
PFNGLPROGRAMUNIFORM3IVPROC cppgl_glProgramUniform3iv;
PFNGLINDEXIVPROC cppgl_glIndexiv;
PFNGLRASTERPOS3SVPROC cppgl_glRasterPos3sv;
PFNGLGETVERTEXATTRIBPOINTERVPROC cppgl_glGetVertexAttribPointerv;
PFNGLPIXELZOOMPROC cppgl_glPixelZoom;
PFNGLFENCESYNCPROC cppgl_glFenceSync;
PFNGLDELETEVERTEXARRAYSPROC cppgl_glDeleteVertexArrays;
PFNGLCOLORP3UIPROC cppgl_glColorP3ui;
PFNGLVERTEXATTRIB3SVPROC cppgl_glVertexAttrib3sv;
PFNGLBEGINCONDITIONALRENDERPROC cppgl_glBeginConditionalRender;
PFNGLGETSHADERPRECISIONFORMATPROC cppgl_glGetShaderPrecisionFormat;
PFNGLVALIDATEPROGRAMPIPELINEPROC cppgl_glValidateProgramPipeline;
PFNGLDRAWELEMENTSBASEVERTEXPROC cppgl_glDrawElementsBaseVertex;
PFNGLGETTEXLEVELPARAMETERIVPROC cppgl_glGetTexLevelParameteriv;
PFNGLLIGHTIPROC cppgl_glLighti;
PFNGLMULTITEXCOORDP4UIVPROC cppgl_glMultiTexCoordP4uiv;
PFNGLLIGHTFPROC cppgl_glLightf;
PFNGLGETATTRIBLOCATIONPROC cppgl_glGetAttribLocation;
PFNGLSTENCILFUNCSEPARATEPROC cppgl_glStencilFuncSeparate;
PFNGLGENSAMPLERSPROC cppgl_glGenSamplers;
PFNGLCLAMPCOLORPROC cppgl_glClampColor;
PFNGLUNIFORM4IVPROC cppgl_glUniform4iv;
PFNGLCLEARSTENCILPROC cppgl_glClearStencil;
PFNGLTEXCOORDP1UIVPROC cppgl_glTexCoordP1uiv;
PFNGLMULTITEXCOORD3FVPROC cppgl_glMultiTexCoord3fv;
PFNGLGETPIXELMAPUIVPROC cppgl_glGetPixelMapuiv;
PFNGLGENTEXTURESPROC cppgl_glGenTextures;
PFNGLTEXCOORD4IVPROC cppgl_glTexCoord4iv;
PFNGLDRAWTRANSFORMFEEDBACKPROC cppgl_glDrawTransformFeedback;
PFNGLUNIFORM1DVPROC cppgl_glUniform1dv;
PFNGLGETTEXPARAMETERIUIVPROC cppgl_glGetTexParameterIuiv;
PFNGLINDEXPOINTERPROC cppgl_glIndexPointer;
PFNGLVERTEXATTRIB4NBVPROC cppgl_glVertexAttrib4Nbv;
PFNGLISSYNCPROC cppgl_glIsSync;
PFNGLVERTEX2FPROC cppgl_glVertex2f;
PFNGLVERTEX2DPROC cppgl_glVertex2d;
PFNGLDELETERENDERBUFFERSPROC cppgl_glDeleteRenderbuffers;
PFNGLUNIFORM2IPROC cppgl_glUniform2i;
PFNGLMAPGRID2DPROC cppgl_glMapGrid2d;
PFNGLMAPGRID2FPROC cppgl_glMapGrid2f;
PFNGLTEXCOORDP4UIPROC cppgl_glTexCoordP4ui;
PFNGLVERTEX2IPROC cppgl_glVertex2i;
PFNGLVERTEXATTRIBPOINTERPROC cppgl_glVertexAttribPointer;
PFNGLPROGRAMUNIFORM1UIPROC cppgl_glProgramUniform1ui;
PFNGLFRAMEBUFFERTEXTURELAYERPROC cppgl_glFramebufferTextureLayer;
PFNGLVERTEX2SPROC cppgl_glVertex2s;
PFNGLNORMAL3BVPROC cppgl_glNormal3bv;
PFNGLVERTEXATTRIB4NUIVPROC cppgl_glVertexAttrib4Nuiv;
PFNGLFLUSHMAPPEDBUFFERRANGEPROC cppgl_glFlushMappedBufferRange;
PFNGLPROGRAMUNIFORM2FVPROC cppgl_glProgramUniform2fv;
PFNGLUNIFORMMATRIX2X3DVPROC cppgl_glUniformMatrix2x3dv;
PFNGLPROGRAMUNIFORMMATRIX4DVPROC cppgl_glProgramUniformMatrix4dv;
PFNGLSECONDARYCOLOR3SVPROC cppgl_glSecondaryColor3sv;
PFNGLPROGRAMUNIFORMMATRIX2X4DVPROC cppgl_glProgramUniformMatrix2x4dv;
PFNGLVERTEX3SVPROC cppgl_glVertex3sv;
PFNGLGENQUERIESPROC cppgl_glGenQueries;
PFNGLGETPIXELMAPFVPROC cppgl_glGetPixelMapfv;
PFNGLTEXENVFPROC cppgl_glTexEnvf;
PFNGLVERTEXATTRIBP1UIPROC cppgl_glVertexAttribP1ui;
PFNGLTEXSUBIMAGE3DPROC cppgl_glTexSubImage3D;
PFNGLGETINTEGER64I_VPROC cppgl_glGetInteger64i_v;
PFNGLFOGCOORDDPROC cppgl_glFogCoordd;
PFNGLFOGCOORDFPROC cppgl_glFogCoordf;
PFNGLCOPYTEXIMAGE2DPROC cppgl_glCopyTexImage2D;
PFNGLTEXENVIPROC cppgl_glTexEnvi;
PFNGLMULTITEXCOORD1IVPROC cppgl_glMultiTexCoord1iv;
PFNGLISENABLEDIPROC cppgl_glIsEnabledi;
PFNGLSECONDARYCOLORP3UIPROC cppgl_glSecondaryColorP3ui;
PFNGLVERTEXATTRIBI2IPROC cppgl_glVertexAttribI2i;
PFNGLBINDFRAGDATALOCATIONINDEXEDPROC cppgl_glBindFragDataLocationIndexed;
PFNGLMULTITEXCOORD2DVPROC cppgl_glMultiTexCoord2dv;
PFNGLUNIFORM2IVPROC cppgl_glUniform2iv;
PFNGLVERTEXATTRIB1FVPROC cppgl_glVertexAttrib1fv;
PFNGLUNIFORM4UIVPROC cppgl_glUniform4uiv;
PFNGLMATRIXMODEPROC cppgl_glMatrixMode;
PFNGLFEEDBACKBUFFERPROC cppgl_glFeedbackBuffer;
PFNGLPROGRAMUNIFORM2DVPROC cppgl_glProgramUniform2dv;
PFNGLENDQUERYINDEXEDPROC cppgl_glEndQueryIndexed;
PFNGLGETMAPIVPROC cppgl_glGetMapiv;
PFNGLFRAMEBUFFERTEXTURE1DPROC cppgl_glFramebufferTexture1D;
PFNGLUNIFORM4DPROC cppgl_glUniform4d;
PFNGLGETSHADERIVPROC cppgl_glGetShaderiv;
PFNGLMULTITEXCOORD2DPROC cppgl_glMultiTexCoord2d;
PFNGLMULTITEXCOORD2FPROC cppgl_glMultiTexCoord2f;
PFNGLPROGRAMUNIFORMMATRIX3FVPROC cppgl_glProgramUniformMatrix3fv;
PFNGLBINDFRAGDATALOCATIONPROC cppgl_glBindFragDataLocation;
PFNGLSCISSORARRAYVPROC cppgl_glScissorArrayv;
PFNGLPRIORITIZETEXTURESPROC cppgl_glPrioritizeTextures;
PFNGLCALLLISTPROC cppgl_glCallList;
PFNGLPATCHPARAMETERFVPROC cppgl_glPatchParameterfv;
PFNGLSECONDARYCOLOR3UBVPROC cppgl_glSecondaryColor3ubv;
PFNGLGETDOUBLEVPROC cppgl_glGetDoublev;
PFNGLMULTITEXCOORD3IVPROC cppgl_glMultiTexCoord3iv;
PFNGLVERTEXATTRIB1DPROC cppgl_glVertexAttrib1d;
PFNGLUNIFORM4DVPROC cppgl_glUniform4dv;
PFNGLLIGHTMODELFPROC cppgl_glLightModelf;
PFNGLGETUNIFORMIVPROC cppgl_glGetUniformiv;
PFNGLVERTEX2SVPROC cppgl_glVertex2sv;
PFNGLLIGHTMODELIPROC cppgl_glLightModeli;
PFNGLWINDOWPOS3IVPROC cppgl_glWindowPos3iv;
PFNGLMULTITEXCOORDP1UIVPROC cppgl_glMultiTexCoordP1uiv;
PFNGLUNIFORM3FVPROC cppgl_glUniform3fv;
PFNGLPIXELSTOREIPROC cppgl_glPixelStorei;
PFNGLGETPROGRAMPIPELINEINFOLOGPROC cppgl_glGetProgramPipelineInfoLog;
PFNGLCALLLISTSPROC cppgl_glCallLists;
PFNGLPROGRAMUNIFORMMATRIX3X4FVPROC cppgl_glProgramUniformMatrix3x4fv;
PFNGLMAPBUFFERPROC cppgl_glMapBuffer;
PFNGLSECONDARYCOLOR3DPROC cppgl_glSecondaryColor3d;
PFNGLTEXCOORD3IPROC cppgl_glTexCoord3i;
PFNGLMULTITEXCOORD4FVPROC cppgl_glMultiTexCoord4fv;
PFNGLRASTERPOS3IPROC cppgl_glRasterPos3i;
PFNGLSECONDARYCOLOR3BPROC cppgl_glSecondaryColor3b;
PFNGLRASTERPOS3DPROC cppgl_glRasterPos3d;
PFNGLRASTERPOS3FPROC cppgl_glRasterPos3f;
PFNGLCOMPRESSEDTEXIMAGE3DPROC cppgl_glCompressedTexImage3D;
PFNGLTEXCOORD3FPROC cppgl_glTexCoord3f;
PFNGLDELETESYNCPROC cppgl_glDeleteSync;
PFNGLTEXCOORD3DPROC cppgl_glTexCoord3d;
PFNGLUNIFORMMATRIX4DVPROC cppgl_glUniformMatrix4dv;
PFNGLTEXIMAGE2DMULTISAMPLEPROC cppgl_glTexImage2DMultisample;
PFNGLGETVERTEXATTRIBIVPROC cppgl_glGetVertexAttribiv;
PFNGLUNIFORMMATRIX4X2DVPROC cppgl_glUniformMatrix4x2dv;
PFNGLMULTIDRAWELEMENTSPROC cppgl_glMultiDrawElements;
PFNGLVERTEXATTRIB3FVPROC cppgl_glVertexAttrib3fv;
PFNGLTEXCOORD3SPROC cppgl_glTexCoord3s;
PFNGLUNIFORM3IVPROC cppgl_glUniform3iv;
PFNGLRASTERPOS3SPROC cppgl_glRasterPos3s;
PFNGLPOLYGONMODEPROC cppgl_glPolygonMode;
PFNGLDRAWBUFFERSPROC cppgl_glDrawBuffers;
PFNGLGETACTIVEUNIFORMBLOCKIVPROC cppgl_glGetActiveUniformBlockiv;
PFNGLARETEXTURESRESIDENTPROC cppgl_glAreTexturesResident;
PFNGLPROGRAMUNIFORM2DPROC cppgl_glProgramUniform2d;
PFNGLPROGRAMUNIFORMMATRIX4X3DVPROC cppgl_glProgramUniformMatrix4x3dv;
PFNGLISLISTPROC cppgl_glIsList;
PFNGLPROGRAMUNIFORM4IVPROC cppgl_glProgramUniform4iv;
PFNGLRASTERPOS2SVPROC cppgl_glRasterPos2sv;
PFNGLRASTERPOS4SVPROC cppgl_glRasterPos4sv;
PFNGLCOLOR4SPROC cppgl_glColor4s;
PFNGLGETPROGRAMBINARYPROC cppgl_glGetProgramBinary;
PFNGLUSEPROGRAMPROC cppgl_glUseProgram;
PFNGLLINESTIPPLEPROC cppgl_glLineStipple;
PFNGLMULTITEXCOORD1SVPROC cppgl_glMultiTexCoord1sv;
PFNGLGETPROGRAMINFOLOGPROC cppgl_glGetProgramInfoLog;
PFNGLGETBUFFERPARAMETERIVPROC cppgl_glGetBufferParameteriv;
PFNGLMULTITEXCOORD2IVPROC cppgl_glMultiTexCoord2iv;
PFNGLUNIFORMMATRIX2X4FVPROC cppgl_glUniformMatrix2x4fv;
PFNGLBINDVERTEXARRAYPROC cppgl_glBindVertexArray;
PFNGLCOLOR4BPROC cppgl_glColor4b;
PFNGLSECONDARYCOLOR3FPROC cppgl_glSecondaryColor3f;
PFNGLCOLOR4FPROC cppgl_glColor4f;
PFNGLCOLOR4DPROC cppgl_glColor4d;
PFNGLCOLOR4IPROC cppgl_glColor4i;
PFNGLSAMPLERPARAMETERIIVPROC cppgl_glSamplerParameterIiv;
PFNGLMULTIDRAWELEMENTSBASEVERTEXPROC cppgl_glMultiDrawElementsBaseVertex;
PFNGLRASTERPOS3IVPROC cppgl_glRasterPos3iv;
PFNGLVERTEX2DVPROC cppgl_glVertex2dv;
PFNGLTEXCOORD4SVPROC cppgl_glTexCoord4sv;
PFNGLUNIFORM2UIVPROC cppgl_glUniform2uiv;
PFNGLCOMPRESSEDTEXSUBIMAGE1DPROC cppgl_glCompressedTexSubImage1D;
PFNGLFINISHPROC cppgl_glFinish;
PFNGLDEPTHRANGEINDEXEDPROC cppgl_glDepthRangeIndexed;
PFNGLGETBOOLEANVPROC cppgl_glGetBooleanv;
PFNGLDELETESHADERPROC cppgl_glDeleteShader;
PFNGLDRAWELEMENTSPROC cppgl_glDrawElements;
PFNGLRASTERPOS2SPROC cppgl_glRasterPos2s;
PFNGLGETMAPDVPROC cppgl_glGetMapdv;
PFNGLVERTEXATTRIB4NSVPROC cppgl_glVertexAttrib4Nsv;
PFNGLMATERIALFVPROC cppgl_glMaterialfv;
PFNGLVIEWPORTPROC cppgl_glViewport;
PFNGLUNIFORM1UIVPROC cppgl_glUniform1uiv;
PFNGLTRANSFORMFEEDBACKVARYINGSPROC cppgl_glTransformFeedbackVaryings;
PFNGLINDEXDVPROC cppgl_glIndexdv;
PFNGLCOPYTEXSUBIMAGE3DPROC cppgl_glCopyTexSubImage3D;
PFNGLTEXCOORD3IVPROC cppgl_glTexCoord3iv;
PFNGLVERTEXATTRIBI3IPROC cppgl_glVertexAttribI3i;
PFNGLCLEARDEPTHPROC cppgl_glClearDepth;
PFNGLVERTEXATTRIBI4USVPROC cppgl_glVertexAttribI4usv;
PFNGLTEXPARAMETERFPROC cppgl_glTexParameterf;
PFNGLTEXPARAMETERIPROC cppgl_glTexParameteri;
PFNGLGETACTIVESUBROUTINEUNIFORMIVPROC cppgl_glGetActiveSubroutineUniformiv;
PFNGLGETSHADERSOURCEPROC cppgl_glGetShaderSource;
PFNGLTEXBUFFERPROC cppgl_glTexBuffer;
PFNGLPOPNAMEPROC cppgl_glPopName;
PFNGLVALIDATEPROGRAMPROC cppgl_glValidateProgram;
PFNGLPIXELSTOREFPROC cppgl_glPixelStoref;
PFNGLUNIFORM3UIVPROC cppgl_glUniform3uiv;
PFNGLVIEWPORTINDEXEDFPROC cppgl_glViewportIndexedf;
PFNGLRASTERPOS4FVPROC cppgl_glRasterPos4fv;
PFNGLEVALCOORD1DVPROC cppgl_glEvalCoord1dv;
PFNGLMULTITEXCOORDP2UIVPROC cppgl_glMultiTexCoordP2uiv;
PFNGLGENPROGRAMPIPELINESPROC cppgl_glGenProgramPipelines;
PFNGLRECTIPROC cppgl_glRecti;
PFNGLCOLOR4UBPROC cppgl_glColor4ub;
PFNGLMULTTRANSPOSEMATRIXFPROC cppgl_glMultTransposeMatrixf;
PFNGLRECTFPROC cppgl_glRectf;
PFNGLRECTDPROC cppgl_glRectd;
PFNGLNORMAL3SVPROC cppgl_glNormal3sv;
PFNGLNEWLISTPROC cppgl_glNewList;
PFNGLPROGRAMUNIFORMMATRIX2X3DVPROC cppgl_glProgramUniformMatrix2x3dv;
PFNGLCOLOR4USPROC cppgl_glColor4us;
PFNGLVERTEXATTRIBP1UIVPROC cppgl_glVertexAttribP1uiv;
PFNGLLINKPROGRAMPROC cppgl_glLinkProgram;
PFNGLHINTPROC cppgl_glHint;
PFNGLRECTSPROC cppgl_glRects;
PFNGLTEXCOORD2DVPROC cppgl_glTexCoord2dv;
PFNGLRASTERPOS4IVPROC cppgl_glRasterPos4iv;
PFNGLPROGRAMUNIFORM2FPROC cppgl_glProgramUniform2f;
PFNGLGETSTRINGPROC cppgl_glGetString;
PFNGLVERTEXATTRIBP2UIVPROC cppgl_glVertexAttribP2uiv;
PFNGLEDGEFLAGVPROC cppgl_glEdgeFlagv;
PFNGLDETACHSHADERPROC cppgl_glDetachShader;
PFNGLPROGRAMUNIFORM3IPROC cppgl_glProgramUniform3i;
PFNGLSCALEFPROC cppgl_glScalef;
PFNGLENDQUERYPROC cppgl_glEndQuery;
PFNGLSCALEDPROC cppgl_glScaled;
PFNGLEDGEFLAGPOINTERPROC cppgl_glEdgeFlagPointer;
PFNGLUNIFORMMATRIX4X3DVPROC cppgl_glUniformMatrix4x3dv;
PFNGLDEPTHRANGEARRAYVPROC cppgl_glDepthRangeArrayv;
PFNGLCOPYPIXELSPROC cppgl_glCopyPixels;
PFNGLVERTEXATTRIBI2UIPROC cppgl_glVertexAttribI2ui;
PFNGLPOPATTRIBPROC cppgl_glPopAttrib;
PFNGLDELETETEXTURESPROC cppgl_glDeleteTextures;
PFNGLSTENCILOPSEPARATEPROC cppgl_glStencilOpSeparate;
PFNGLDELETEQUERIESPROC cppgl_glDeleteQueries;
PFNGLNORMALP3UIVPROC cppgl_glNormalP3uiv;
PFNGLVERTEXATTRIB4FPROC cppgl_glVertexAttrib4f;
PFNGLVERTEXATTRIB4DPROC cppgl_glVertexAttrib4d;
PFNGLVIEWPORTINDEXEDFVPROC cppgl_glViewportIndexedfv;
PFNGLINITNAMESPROC cppgl_glInitNames;
PFNGLGETBUFFERPARAMETERI64VPROC cppgl_glGetBufferParameteri64v;
PFNGLCOLOR3DVPROC cppgl_glColor3dv;
PFNGLVERTEXATTRIBI1IPROC cppgl_glVertexAttribI1i;
PFNGLGETTEXPARAMETERIVPROC cppgl_glGetTexParameteriv;
PFNGLWAITSYNCPROC cppgl_glWaitSync;
PFNGLPROGRAMUNIFORM1DVPROC cppgl_glProgramUniform1dv;
PFNGLVERTEXATTRIB4SPROC cppgl_glVertexAttrib4s;
PFNGLCOLORMATERIALPROC cppgl_glColorMaterial;
PFNGLSAMPLECOVERAGEPROC cppgl_glSampleCoverage;
PFNGLSAMPLERPARAMETERIPROC cppgl_glSamplerParameteri;
PFNGLSAMPLERPARAMETERFPROC cppgl_glSamplerParameterf;
PFNGLUNIFORM1FPROC cppgl_glUniform1f;
PFNGLGETVERTEXATTRIBFVPROC cppgl_glGetVertexAttribfv;
PFNGLUNIFORM1DPROC cppgl_glUniform1d;
PFNGLRENDERMODEPROC cppgl_glRenderMode;
PFNGLGETCOMPRESSEDTEXIMAGEPROC cppgl_glGetCompressedTexImage;
PFNGLWINDOWPOS2DVPROC cppgl_glWindowPos2dv;
PFNGLUNIFORM1IPROC cppgl_glUniform1i;
PFNGLGETACTIVEATTRIBPROC cppgl_glGetActiveAttrib;
PFNGLUNIFORM3IPROC cppgl_glUniform3i;
PFNGLPIXELTRANSFERIPROC cppgl_glPixelTransferi;
PFNGLTEXSUBIMAGE2DPROC cppgl_glTexSubImage2D;
PFNGLDISABLEPROC cppgl_glDisable;
PFNGLLOGICOPPROC cppgl_glLogicOp;
PFNGLEVALPOINT2PROC cppgl_glEvalPoint2;
PFNGLPIXELTRANSFERFPROC cppgl_glPixelTransferf;
PFNGLSECONDARYCOLOR3IPROC cppgl_glSecondaryColor3i;
PFNGLPROGRAMUNIFORM4UIVPROC cppgl_glProgramUniform4uiv;
PFNGLUNIFORM4UIPROC cppgl_glUniform4ui;
PFNGLCOLOR3FPROC cppgl_glColor3f;
PFNGLBINDFRAMEBUFFERPROC cppgl_glBindFramebuffer;
PFNGLGETTEXENVFVPROC cppgl_glGetTexEnvfv;
PFNGLRECTFVPROC cppgl_glRectfv;
PFNGLCULLFACEPROC cppgl_glCullFace;
PFNGLGETLIGHTFVPROC cppgl_glGetLightfv;
PFNGLCOLOR3DPROC cppgl_glColor3d;
PFNGLPROGRAMUNIFORM4IPROC cppgl_glProgramUniform4i;
PFNGLTEXGENDPROC cppgl_glTexGend;
PFNGLPROGRAMUNIFORM4FPROC cppgl_glProgramUniform4f;
PFNGLTEXGENIPROC cppgl_glTexGeni;
PFNGLPROGRAMUNIFORM4DPROC cppgl_glProgramUniform4d;
PFNGLMULTITEXCOORD3SPROC cppgl_glMultiTexCoord3s;
PFNGLGETSTRINGIPROC cppgl_glGetStringi;
PFNGLMULTITEXCOORD3IPROC cppgl_glMultiTexCoord3i;
PFNGLMULTITEXCOORD3FPROC cppgl_glMultiTexCoord3f;
PFNGLDRAWTRANSFORMFEEDBACKSTREAMPROC cppgl_glDrawTransformFeedbackStream;
PFNGLMULTITEXCOORD3DPROC cppgl_glMultiTexCoord3d;
PFNGLATTACHSHADERPROC cppgl_glAttachShader;
PFNGLFOGCOORDDVPROC cppgl_glFogCoorddv;
PFNGLUNIFORMMATRIX2X3FVPROC cppgl_glUniformMatrix2x3fv;
PFNGLGETTEXGENFVPROC cppgl_glGetTexGenfv;
PFNGLQUERYCOUNTERPROC cppgl_glQueryCounter;
PFNGLFOGCOORDPOINTERPROC cppgl_glFogCoordPointer;
PFNGLPROGRAMUNIFORMMATRIX3DVPROC cppgl_glProgramUniformMatrix3dv;
PFNGLPROVOKINGVERTEXPROC cppgl_glProvokingVertex;
PFNGLSHADERBINARYPROC cppgl_glShaderBinary;
PFNGLFRAMEBUFFERTEXTURE3DPROC cppgl_glFramebufferTexture3D;
PFNGLTEXGENIVPROC cppgl_glTexGeniv;
PFNGLRASTERPOS2DVPROC cppgl_glRasterPos2dv;
PFNGLSECONDARYCOLOR3DVPROC cppgl_glSecondaryColor3dv;
PFNGLCLIENTACTIVETEXTUREPROC cppgl_glClientActiveTexture;
PFNGLVERTEXATTRIBI4SVPROC cppgl_glVertexAttribI4sv;
PFNGLSECONDARYCOLOR3USPROC cppgl_glSecondaryColor3us;
PFNGLNORMALP3UIPROC cppgl_glNormalP3ui;
PFNGLTEXENVFVPROC cppgl_glTexEnvfv;
PFNGLREADBUFFERPROC cppgl_glReadBuffer;
PFNGLVIEWPORTARRAYVPROC cppgl_glViewportArrayv;
PFNGLTEXPARAMETERIUIVPROC cppgl_glTexParameterIuiv;
PFNGLDRAWARRAYSINSTANCEDPROC cppgl_glDrawArraysInstanced;
PFNGLGENERATEMIPMAPPROC cppgl_glGenerateMipmap;
PFNGLPROGRAMUNIFORMMATRIX2FVPROC cppgl_glProgramUniformMatrix2fv;
PFNGLWINDOWPOS3FVPROC cppgl_glWindowPos3fv;
PFNGLUNIFORMMATRIX3X4DVPROC cppgl_glUniformMatrix3x4dv;
PFNGLLIGHTMODELFVPROC cppgl_glLightModelfv;
PFNGLSAMPLERPARAMETERIVPROC cppgl_glSamplerParameteriv;
PFNGLDELETELISTSPROC cppgl_glDeleteLists;
PFNGLGETCLIPPLANEPROC cppgl_glGetClipPlane;
PFNGLVERTEX4DVPROC cppgl_glVertex4dv;
PFNGLTEXCOORD2DPROC cppgl_glTexCoord2d;
PFNGLPOPMATRIXPROC cppgl_glPopMatrix;
PFNGLTEXCOORD2FPROC cppgl_glTexCoord2f;
PFNGLCOLOR4IVPROC cppgl_glColor4iv;
PFNGLINDEXUBVPROC cppgl_glIndexubv;
PFNGLUNMAPBUFFERPROC cppgl_glUnmapBuffer;
PFNGLTEXCOORD2IPROC cppgl_glTexCoord2i;
PFNGLRASTERPOS4DPROC cppgl_glRasterPos4d;
PFNGLRASTERPOS4FPROC cppgl_glRasterPos4f;
PFNGLPROGRAMUNIFORM1IVPROC cppgl_glProgramUniform1iv;
PFNGLVERTEXATTRIB3SPROC cppgl_glVertexAttrib3s;
PFNGLTEXCOORD2SPROC cppgl_glTexCoord2s;
PFNGLBINDRENDERBUFFERPROC cppgl_glBindRenderbuffer;
PFNGLVERTEX3FVPROC cppgl_glVertex3fv;
PFNGLTEXCOORD4DVPROC cppgl_glTexCoord4dv;
PFNGLMATERIALIVPROC cppgl_glMaterialiv;
PFNGLVERTEXATTRIBP4UIVPROC cppgl_glVertexAttribP4uiv;
PFNGLGETPROGRAMSTAGEIVPROC cppgl_glGetProgramStageiv;
PFNGLISPROGRAMPROC cppgl_glIsProgram;
PFNGLVERTEXATTRIB4BVPROC cppgl_glVertexAttrib4bv;
PFNGLVERTEX4SPROC cppgl_glVertex4s;
PFNGLUNIFORMMATRIX3X2DVPROC cppgl_glUniformMatrix3x2dv;
PFNGLVERTEXATTRIB4FVPROC cppgl_glVertexAttrib4fv;
PFNGLNORMAL3DVPROC cppgl_glNormal3dv;
PFNGLISTRANSFORMFEEDBACKPROC cppgl_glIsTransformFeedback;
PFNGLUNIFORM4IPROC cppgl_glUniform4i;
PFNGLACTIVETEXTUREPROC cppgl_glActiveTexture;
PFNGLENABLEVERTEXATTRIBARRAYPROC cppgl_glEnableVertexAttribArray;
PFNGLROTATEDPROC cppgl_glRotated;
PFNGLISPROGRAMPIPELINEPROC cppgl_glIsProgramPipeline;
PFNGLROTATEFPROC cppgl_glRotatef;
PFNGLVERTEX4IPROC cppgl_glVertex4i;
PFNGLREADPIXELSPROC cppgl_glReadPixels;
PFNGLVERTEXATTRIBI3IVPROC cppgl_glVertexAttribI3iv;
PFNGLLOADNAMEPROC cppgl_glLoadName;
PFNGLUNIFORM4FPROC cppgl_glUniform4f;
PFNGLRENDERBUFFERSTORAGEMULTISAMPLEPROC cppgl_glRenderbufferStorageMultisample;
PFNGLGENVERTEXARRAYSPROC cppgl_glGenVertexArrays;
PFNGLSHADEMODELPROC cppgl_glShadeModel;
PFNGLMAPGRID1DPROC cppgl_glMapGrid1d;
PFNGLGETUNIFORMFVPROC cppgl_glGetUniformfv;
PFNGLMAPGRID1FPROC cppgl_glMapGrid1f;
PFNGLSAMPLERPARAMETERFVPROC cppgl_glSamplerParameterfv;
PFNGLVERTEXATTRIBLPOINTERPROC cppgl_glVertexAttribLPointer;
PFNGLDISABLECLIENTSTATEPROC cppgl_glDisableClientState;
PFNGLMULTITEXCOORD3SVPROC cppgl_glMultiTexCoord3sv;
PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXPROC cppgl_glDrawElementsInstancedBaseVertex;
PFNGLVERTEXATTRIBL2DVPROC cppgl_glVertexAttribL2dv;
PFNGLSECONDARYCOLORPOINTERPROC cppgl_glSecondaryColorPointer;
PFNGLALPHAFUNCPROC cppgl_glAlphaFunc;
PFNGLUNIFORM1IVPROC cppgl_glUniform1iv;
PFNGLCREATESHADERPROGRAMVPROC cppgl_glCreateShaderProgramv;
PFNGLGETACTIVESUBROUTINENAMEPROC cppgl_glGetActiveSubroutineName;
PFNGLMULTITEXCOORD4IVPROC cppgl_glMultiTexCoord4iv;
PFNGLVERTEXATTRIBL2DPROC cppgl_glVertexAttribL2d;
PFNGLGETQUERYOBJECTIVPROC cppgl_glGetQueryObjectiv;
PFNGLSTENCILFUNCPROC cppgl_glStencilFunc;
PFNGLMULTITEXCOORD1FVPROC cppgl_glMultiTexCoord1fv;
PFNGLUNIFORMBLOCKBINDINGPROC cppgl_glUniformBlockBinding;
PFNGLCOLOR4UIVPROC cppgl_glColor4uiv;
PFNGLRECTIVPROC cppgl_glRectiv;
PFNGLCOLORP4UIPROC cppgl_glColorP4ui;
PFNGLUSEPROGRAMSTAGESPROC cppgl_glUseProgramStages;
PFNGLRASTERPOS3DVPROC cppgl_glRasterPos3dv;
PFNGLEVALMESH2PROC cppgl_glEvalMesh2;
PFNGLEVALMESH1PROC cppgl_glEvalMesh1;
PFNGLTEXCOORDPOINTERPROC cppgl_glTexCoordPointer;
PFNGLPROGRAMUNIFORM3FPROC cppgl_glProgramUniform3f;
PFNGLPROGRAMUNIFORM3DPROC cppgl_glProgramUniform3d;
PFNGLVERTEXATTRIB4NUBVPROC cppgl_glVertexAttrib4Nubv;
PFNGLVERTEXATTRIBI4IVPROC cppgl_glVertexAttribI4iv;
PFNGLGETPROGRAMPIPELINEIVPROC cppgl_glGetProgramPipelineiv;
PFNGLEVALCOORD2FVPROC cppgl_glEvalCoord2fv;
PFNGLGETQUERYINDEXEDIVPROC cppgl_glGetQueryIndexediv;
PFNGLCOLOR4UBVPROC cppgl_glColor4ubv;
PFNGLLOADTRANSPOSEMATRIXDPROC cppgl_glLoadTransposeMatrixd;
PFNGLLOADTRANSPOSEMATRIXFPROC cppgl_glLoadTransposeMatrixf;
PFNGLVERTEXATTRIBI4IPROC cppgl_glVertexAttribI4i;
PFNGLRASTERPOS2IVPROC cppgl_glRasterPos2iv;
PFNGLGETBUFFERSUBDATAPROC cppgl_glGetBufferSubData;
PFNGLGETVERTEXATTRIBLDVPROC cppgl_glGetVertexAttribLdv;
PFNGLTEXENVIVPROC cppgl_glTexEnviv;
PFNGLBLENDEQUATIONSEPARATEPROC cppgl_glBlendEquationSeparate;
PFNGLVERTEXATTRIBI1UIPROC cppgl_glVertexAttribI1ui;
PFNGLGENBUFFERSPROC cppgl_glGenBuffers;
PFNGLSELECTBUFFERPROC cppgl_glSelectBuffer;
PFNGLGETSUBROUTINEINDEXPROC cppgl_glGetSubroutineIndex;
PFNGLVERTEXATTRIB2SVPROC cppgl_glVertexAttrib2sv;
PFNGLSCISSORINDEXEDVPROC cppgl_glScissorIndexedv;
PFNGLPUSHATTRIBPROC cppgl_glPushAttrib;
PFNGLVERTEXATTRIBIPOINTERPROC cppgl_glVertexAttribIPointer;
PFNGLBLENDFUNCPROC cppgl_glBlendFunc;
PFNGLCREATEPROGRAMPROC cppgl_glCreateProgram;
PFNGLTEXIMAGE3DPROC cppgl_glTexImage3D;
PFNGLISFRAMEBUFFERPROC cppgl_glIsFramebuffer;
PFNGLLIGHTIVPROC cppgl_glLightiv;
PFNGLPRIMITIVERESTARTINDEXPROC cppgl_glPrimitiveRestartIndex;
PFNGLTEXGENFVPROC cppgl_glTexGenfv;
PFNGLENDPROC cppgl_glEnd;
PFNGLDELETEBUFFERSPROC cppgl_glDeleteBuffers;
PFNGLBINDPROGRAMPIPELINEPROC cppgl_glBindProgramPipeline;
PFNGLSCISSORPROC cppgl_glScissor;
PFNGLTEXCOORDP4UIVPROC cppgl_glTexCoordP4uiv;
PFNGLCLIPPLANEPROC cppgl_glClipPlane;
PFNGLPUSHNAMEPROC cppgl_glPushName;
PFNGLTEXGENDVPROC cppgl_glTexGendv;
PFNGLINDEXUBPROC cppgl_glIndexub;
PFNGLVERTEXP2UIVPROC cppgl_glVertexP2uiv;
PFNGLSECONDARYCOLOR3IVPROC cppgl_glSecondaryColor3iv;
PFNGLRASTERPOS4IPROC cppgl_glRasterPos4i;
PFNGLMULTTRANSPOSEMATRIXDPROC cppgl_glMultTransposeMatrixd;
PFNGLCLEARCOLORPROC cppgl_glClearColor;
PFNGLVERTEXATTRIB4UIVPROC cppgl_glVertexAttrib4uiv;
PFNGLNORMAL3SPROC cppgl_glNormal3s;
PFNGLVERTEXATTRIB4NIVPROC cppgl_glVertexAttrib4Niv;
PFNGLPROGRAMUNIFORMMATRIX2X3FVPROC cppgl_glProgramUniformMatrix2x3fv;
PFNGLCLEARBUFFERIVPROC cppgl_glClearBufferiv;
PFNGLPOINTPARAMETERIPROC cppgl_glPointParameteri;
PFNGLPROGRAMUNIFORM4DVPROC cppgl_glProgramUniform4dv;
PFNGLCOLORP4UIVPROC cppgl_glColorP4uiv;
PFNGLBLENDCOLORPROC cppgl_glBlendColor;
PFNGLWINDOWPOS3DPROC cppgl_glWindowPos3d;
PFNGLPROGRAMUNIFORM3FVPROC cppgl_glProgramUniform3fv;
PFNGLVERTEXATTRIBI2UIVPROC cppgl_glVertexAttribI2uiv;
PFNGLSAMPLERPARAMETERIUIVPROC cppgl_glSamplerParameterIuiv;
PFNGLUNIFORM3UIPROC cppgl_glUniform3ui;
PFNGLPROGRAMUNIFORM3UIVPROC cppgl_glProgramUniform3uiv;
PFNGLCOLOR4DVPROC cppgl_glColor4dv;
PFNGLVERTEXATTRIBI4UIVPROC cppgl_glVertexAttribI4uiv;
PFNGLPOINTPARAMETERFVPROC cppgl_glPointParameterfv;
PFNGLRESUMETRANSFORMFEEDBACKPROC cppgl_glResumeTransformFeedback;
PFNGLUNIFORM2FVPROC cppgl_glUniform2fv;
PFNGLGETACTIVESUBROUTINEUNIFORMNAMEPROC cppgl_glGetActiveSubroutineUniformName;
PFNGLSECONDARYCOLOR3UBPROC cppgl_glSecondaryColor3ub;
PFNGLDRAWELEMENTSINDIRECTPROC cppgl_glDrawElementsIndirect;
PFNGLSECONDARYCOLOR3UIPROC cppgl_glSecondaryColor3ui;
PFNGLTEXCOORD3DVPROC cppgl_glTexCoord3dv;
PFNGLGETSAMPLERPARAMETERIUIVPROC cppgl_glGetSamplerParameterIuiv;
PFNGLBINDBUFFERRANGEPROC cppgl_glBindBufferRange;
PFNGLNORMAL3IVPROC cppgl_glNormal3iv;
PFNGLVERTEXATTRIBL3DVPROC cppgl_glVertexAttribL3dv;
PFNGLGETUNIFORMDVPROC cppgl_glGetUniformdv;
PFNGLWINDOWPOS3SPROC cppgl_glWindowPos3s;
PFNGLPOINTPARAMETERFPROC cppgl_glPointParameterf;
PFNGLCLEARDEPTHFPROC cppgl_glClearDepthf;
PFNGLGETVERTEXATTRIBIUIVPROC cppgl_glGetVertexAttribIuiv;
PFNGLWINDOWPOS3IPROC cppgl_glWindowPos3i;
PFNGLMULTITEXCOORD4SPROC cppgl_glMultiTexCoord4s;
PFNGLWINDOWPOS3FPROC cppgl_glWindowPos3f;
PFNGLGENTRANSFORMFEEDBACKSPROC cppgl_glGenTransformFeedbacks;
PFNGLCOLOR3USPROC cppgl_glColor3us;
PFNGLCOLOR3UIVPROC cppgl_glColor3uiv;
PFNGLVERTEXATTRIB4NUSVPROC cppgl_glVertexAttrib4Nusv;
PFNGLGETLIGHTIVPROC cppgl_glGetLightiv;
PFNGLDEPTHFUNCPROC cppgl_glDepthFunc;
PFNGLCOMPRESSEDTEXSUBIMAGE2DPROC cppgl_glCompressedTexSubImage2D;
PFNGLLISTBASEPROC cppgl_glListBase;
PFNGLMULTITEXCOORD4FPROC cppgl_glMultiTexCoord4f;
PFNGLCOLOR3UBPROC cppgl_glColor3ub;
PFNGLMULTITEXCOORD4DPROC cppgl_glMultiTexCoord4d;
PFNGLVERTEXATTRIBI4BVPROC cppgl_glVertexAttribI4bv;
PFNGLBLENDEQUATIONSEPARATEIPROC cppgl_glBlendEquationSeparatei;
PFNGLGETTEXPARAMETERFVPROC cppgl_glGetTexParameterfv;
PFNGLCOLOR3UIPROC cppgl_glColor3ui;
PFNGLMULTITEXCOORD4IPROC cppgl_glMultiTexCoord4i;
PFNGLGETPOLYGONSTIPPLEPROC cppgl_glGetPolygonStipple;
PFNGLCLIENTWAITSYNCPROC cppgl_glClientWaitSync;
PFNGLVERTEXATTRIBI4UIPROC cppgl_glVertexAttribI4ui;
PFNGLGETFLOATI_VPROC cppgl_glGetFloati_v;
PFNGLMULTITEXCOORD4DVPROC cppgl_glMultiTexCoord4dv;
PFNGLCOLORMASKPROC cppgl_glColorMask;
PFNGLTEXPARAMETERIIVPROC cppgl_glTexParameterIiv;
PFNGLBLENDEQUATIONPROC cppgl_glBlendEquation;
PFNGLGETUNIFORMLOCATIONPROC cppgl_glGetUniformLocation;
PFNGLGETSAMPLERPARAMETERIVPROC cppgl_glGetSamplerParameteriv;
PFNGLRASTERPOS4SPROC cppgl_glRasterPos4s;
PFNGLENDTRANSFORMFEEDBACKPROC cppgl_glEndTransformFeedback;
PFNGLVERTEXATTRIB4USVPROC cppgl_glVertexAttrib4usv;
PFNGLGETUNIFORMSUBROUTINEUIVPROC cppgl_glGetUniformSubroutineuiv;
PFNGLMULTITEXCOORD3DVPROC cppgl_glMultiTexCoord3dv;
PFNGLCOLOR4SVPROC cppgl_glColor4sv;
PFNGLPOPCLIENTATTRIBPROC cppgl_glPopClientAttrib;
PFNGLBEGINTRANSFORMFEEDBACKPROC cppgl_glBeginTransformFeedback;
PFNGLFOGFPROC cppgl_glFogf;
PFNGLVERTEXATTRIBI1IVPROC cppgl_glVertexAttribI1iv;
PFNGLPROGRAMBINARYPROC cppgl_glProgramBinary;
PFNGLISSAMPLERPROC cppgl_glIsSampler;
PFNGLVERTEXP3UIPROC cppgl_glVertexP3ui;
PFNGLVERTEXATTRIBDIVISORPROC cppgl_glVertexAttribDivisor;
PFNGLCOLOR3IVPROC cppgl_glColor3iv;
PFNGLCOMPRESSEDTEXIMAGE1DPROC cppgl_glCompressedTexImage1D;
PFNGLDELETETRANSFORMFEEDBACKSPROC cppgl_glDeleteTransformFeedbacks;
PFNGLCOPYTEXSUBIMAGE1DPROC cppgl_glCopyTexSubImage1D;
PFNGLTEXCOORD1IPROC cppgl_glTexCoord1i;
PFNGLCHECKFRAMEBUFFERSTATUSPROC cppgl_glCheckFramebufferStatus;
PFNGLTEXCOORD1DPROC cppgl_glTexCoord1d;
PFNGLTEXCOORD1FPROC cppgl_glTexCoord1f;
PFNGLENDCONDITIONALRENDERPROC cppgl_glEndConditionalRender;
PFNGLENABLECLIENTSTATEPROC cppgl_glEnableClientState;
PFNGLBINDATTRIBLOCATIONPROC cppgl_glBindAttribLocation;
PFNGLUNIFORMMATRIX4X2FVPROC cppgl_glUniformMatrix4x2fv;
PFNGLUNIFORMMATRIX2DVPROC cppgl_glUniformMatrix2dv;
PFNGLBLENDFUNCIPROC cppgl_glBlendFunci;
PFNGLMULTITEXCOORD2SVPROC cppgl_glMultiTexCoord2sv;
PFNGLVERTEXATTRIB1DVPROC cppgl_glVertexAttrib1dv;
PFNGLDRAWRANGEELEMENTSPROC cppgl_glDrawRangeElements;
PFNGLTEXCOORD1SPROC cppgl_glTexCoord1s;
PFNGLBINDBUFFERBASEPROC cppgl_glBindBufferBase;
PFNGLBUFFERSUBDATAPROC cppgl_glBufferSubData;
PFNGLVERTEXATTRIB4IVPROC cppgl_glVertexAttrib4iv;
PFNGLGENLISTSPROC cppgl_glGenLists;
PFNGLCOLOR3BVPROC cppgl_glColor3bv;
PFNGLMAPBUFFERRANGEPROC cppgl_glMapBufferRange;
PFNGLFRAMEBUFFERTEXTUREPROC cppgl_glFramebufferTexture;
PFNGLBLENDFUNCSEPARATEIPROC cppgl_glBlendFuncSeparatei;
PFNGLPROGRAMUNIFORMMATRIX4X2FVPROC cppgl_glProgramUniformMatrix4x2fv;
PFNGLVERTEXATTRIBL1DPROC cppgl_glVertexAttribL1d;
PFNGLGETTEXGENDVPROC cppgl_glGetTexGendv;
PFNGLMULTIDRAWARRAYSPROC cppgl_glMultiDrawArrays;
PFNGLENDLISTPROC cppgl_glEndList;
PFNGLSCISSORINDEXEDPROC cppgl_glScissorIndexed;
PFNGLVERTEXP4UIVPROC cppgl_glVertexP4uiv;
PFNGLUNIFORM2UIPROC cppgl_glUniform2ui;
PFNGLVERTEXATTRIBI2IVPROC cppgl_glVertexAttribI2iv;
PFNGLCOLOR3USVPROC cppgl_glColor3usv;
PFNGLWINDOWPOS2FVPROC cppgl_glWindowPos2fv;
PFNGLDISABLEIPROC cppgl_glDisablei;
PFNGLPROGRAMUNIFORMMATRIX2X4FVPROC cppgl_glProgramUniformMatrix2x4fv;
PFNGLINDEXMASKPROC cppgl_glIndexMask;
PFNGLPUSHCLIENTATTRIBPROC cppgl_glPushClientAttrib;
PFNGLSHADERSOURCEPROC cppgl_glShaderSource;
PFNGLGETACTIVEUNIFORMBLOCKNAMEPROC cppgl_glGetActiveUniformBlockName;
PFNGLVERTEXATTRIBI3UIVPROC cppgl_glVertexAttribI3uiv;
PFNGLRELEASESHADERCOMPILERPROC cppgl_glReleaseShaderCompiler;
PFNGLCLEARACCUMPROC cppgl_glClearAccum;
PFNGLGETSYNCIVPROC cppgl_glGetSynciv;
PFNGLPROGRAMUNIFORM2UIVPROC cppgl_glProgramUniform2uiv;
PFNGLTEXCOORDP2UIVPROC cppgl_glTexCoordP2uiv;
PFNGLPATCHPARAMETERIPROC cppgl_glPatchParameteri;
PFNGLPROGRAMUNIFORM2IPROC cppgl_glProgramUniform2i;
PFNGLUNIFORM2FPROC cppgl_glUniform2f;
PFNGLBEGINQUERYPROC cppgl_glBeginQuery;
PFNGLGETUNIFORMBLOCKINDEXPROC cppgl_glGetUniformBlockIndex;
PFNGLBINDBUFFERPROC cppgl_glBindBuffer;
PFNGLMAP2DPROC cppgl_glMap2d;
PFNGLMAP2FPROC cppgl_glMap2f;
PFNGLUNIFORM2DPROC cppgl_glUniform2d;
PFNGLVERTEX4DPROC cppgl_glVertex4d;
PFNGLUNIFORMMATRIX2FVPROC cppgl_glUniformMatrix2fv;
PFNGLTEXCOORD1SVPROC cppgl_glTexCoord1sv;
PFNGLBUFFERDATAPROC cppgl_glBufferData;
PFNGLEVALPOINT1PROC cppgl_glEvalPoint1;
PFNGLGETTEXPARAMETERIIVPROC cppgl_glGetTexParameterIiv;
PFNGLTEXCOORD1DVPROC cppgl_glTexCoord1dv;
PFNGLTEXCOORDP1UIPROC cppgl_glTexCoordP1ui;
PFNGLGETERRORPROC cppgl_glGetError;
PFNGLGETTEXENVIVPROC cppgl_glGetTexEnviv;
PFNGLGETPROGRAMIVPROC cppgl_glGetProgramiv;
PFNGLVERTEXATTRIBP2UIPROC cppgl_glVertexAttribP2ui;
PFNGLGETFLOATVPROC cppgl_glGetFloatv;
PFNGLTEXSUBIMAGE1DPROC cppgl_glTexSubImage1D;
PFNGLMULTITEXCOORD2FVPROC cppgl_glMultiTexCoord2fv;
PFNGLUNIFORMMATRIX2X4DVPROC cppgl_glUniformMatrix2x4dv;
PFNGLVERTEXATTRIB2FVPROC cppgl_glVertexAttrib2fv;
PFNGLEVALCOORD1DPROC cppgl_glEvalCoord1d;
PFNGLGETTEXLEVELPARAMETERFVPROC cppgl_glGetTexLevelParameterfv;
PFNGLEVALCOORD1FPROC cppgl_glEvalCoord1f;
PFNGLPIXELMAPFVPROC cppgl_glPixelMapfv;
PFNGLVERTEXATTRIBP3UIVPROC cppgl_glVertexAttribP3uiv;
PFNGLGETPIXELMAPUSVPROC cppgl_glGetPixelMapusv;
PFNGLSECONDARYCOLORP3UIVPROC cppgl_glSecondaryColorP3uiv;
PFNGLGETINTEGERVPROC cppgl_glGetIntegerv;
PFNGLACCUMPROC cppgl_glAccum;
PFNGLGETBUFFERPOINTERVPROC cppgl_glGetBufferPointerv;
PFNGLGETVERTEXATTRIBIIVPROC cppgl_glGetVertexAttribIiv;
PFNGLRASTERPOS4DVPROC cppgl_glRasterPos4dv;
PFNGLPROGRAMUNIFORM4FVPROC cppgl_glProgramUniform4fv;
PFNGLTEXCOORD2IVPROC cppgl_glTexCoord2iv;
PFNGLISQUERYPROC cppgl_glIsQuery;
PFNGLPROGRAMUNIFORM2UIPROC cppgl_glProgramUniform2ui;
PFNGLPROGRAMUNIFORM4UIPROC cppgl_glProgramUniform4ui;
PFNGLVERTEXATTRIB4SVPROC cppgl_glVertexAttrib4sv;
PFNGLWINDOWPOS3DVPROC cppgl_glWindowPos3dv;
PFNGLTEXIMAGE2DPROC cppgl_glTexImage2D;
PFNGLSTENCILMASKPROC cppgl_glStencilMask;
PFNGLDRAWPIXELSPROC cppgl_glDrawPixels;
PFNGLMULTMATRIXDPROC cppgl_glMultMatrixd;
PFNGLMULTMATRIXFPROC cppgl_glMultMatrixf;
PFNGLISTEXTUREPROC cppgl_glIsTexture;
PFNGLGETMATERIALIVPROC cppgl_glGetMaterialiv;
PFNGLUNIFORM1FVPROC cppgl_glUniform1fv;
PFNGLLOADMATRIXFPROC cppgl_glLoadMatrixf;
PFNGLLOADMATRIXDPROC cppgl_glLoadMatrixd;
PFNGLTEXPARAMETERFVPROC cppgl_glTexParameterfv;
PFNGLUNIFORMMATRIX3FVPROC cppgl_glUniformMatrix3fv;
PFNGLVERTEX4FPROC cppgl_glVertex4f;
PFNGLRECTSVPROC cppgl_glRectsv;
PFNGLCOLOR4USVPROC cppgl_glColor4usv;
PFNGLUNIFORM3DVPROC cppgl_glUniform3dv;
PFNGLPROGRAMUNIFORMMATRIX4X3FVPROC cppgl_glProgramUniformMatrix4x3fv;
PFNGLPOLYGONSTIPPLEPROC cppgl_glPolygonStipple;
PFNGLINTERLEAVEDARRAYSPROC cppgl_glInterleavedArrays;
PFNGLGETSUBROUTINEUNIFORMLOCATIONPROC cppgl_glGetSubroutineUniformLocation;
PFNGLNORMAL3IPROC cppgl_glNormal3i;
PFNGLNORMAL3FPROC cppgl_glNormal3f;
PFNGLNORMAL3DPROC cppgl_glNormal3d;
PFNGLNORMAL3BPROC cppgl_glNormal3b;
PFNGLPIXELMAPUSVPROC cppgl_glPixelMapusv;
PFNGLGETTEXGENIVPROC cppgl_glGetTexGeniv;
PFNGLARRAYELEMENTPROC cppgl_glArrayElement;
PFNGLCOPYBUFFERSUBDATAPROC cppgl_glCopyBufferSubData;
PFNGLVERTEXATTRIBI1UIVPROC cppgl_glVertexAttribI1uiv;
PFNGLVERTEXATTRIB2DPROC cppgl_glVertexAttrib2d;
PFNGLBINDTRANSFORMFEEDBACKPROC cppgl_glBindTransformFeedback;
PFNGLVERTEXATTRIB2FPROC cppgl_glVertexAttrib2f;
PFNGLVERTEXATTRIB3DVPROC cppgl_glVertexAttrib3dv;
PFNGLGETQUERYOBJECTUI64VPROC cppgl_glGetQueryObjectui64v;
PFNGLDEPTHMASKPROC cppgl_glDepthMask;
PFNGLVERTEXATTRIB2SPROC cppgl_glVertexAttrib2s;
PFNGLCOLOR3FVPROC cppgl_glColor3fv;
PFNGLTEXIMAGE3DMULTISAMPLEPROC cppgl_glTexImage3DMultisample;
PFNGLPROGRAMUNIFORM1FVPROC cppgl_glProgramUniform1fv;
PFNGLUNIFORMMATRIX4FVPROC cppgl_glUniformMatrix4fv;
PFNGLUNIFORM4FVPROC cppgl_glUniform4fv;
PFNGLGETACTIVEUNIFORMPROC cppgl_glGetActiveUniform;
PFNGLCOLORPOINTERPROC cppgl_glColorPointer;
PFNGLFRONTFACEPROC cppgl_glFrontFace;
PFNGLGETBOOLEANI_VPROC cppgl_glGetBooleani_v;
PFNGLVERTEXATTRIBL3DPROC cppgl_glVertexAttribL3d;
PFNGLDELETEPROGRAMPIPELINESPROC cppgl_glDeleteProgramPipelines;
PFNGLCLEARBUFFERUIVPROC cppgl_glClearBufferuiv;
int CPPGL_GL_SGIX_pixel_tiles;
int CPPGL_GL_EXT_post_depth_coverage;
int CPPGL_GL_APPLE_element_array;
int CPPGL_GL_AMD_multi_draw_indirect;
int CPPGL_GL_EXT_blend_subtract;
int CPPGL_GL_SGIX_tag_sample_buffer;
int CPPGL_GL_NV_point_sprite;
int CPPGL_GL_IBM_texture_mirrored_repeat;
int CPPGL_GL_APPLE_transform_hint;
int CPPGL_GL_ATI_separate_stencil;
int CPPGL_GL_NV_shader_atomic_int64;
int CPPGL_GL_NV_vertex_program2_option;
int CPPGL_GL_EXT_texture_buffer_object;
int CPPGL_GL_ARB_vertex_blend;
int CPPGL_GL_OVR_multiview;
int CPPGL_GL_NV_vertex_program2;
int CPPGL_GL_ARB_program_interface_query;
int CPPGL_GL_EXT_misc_attribute;
int CPPGL_GL_NV_multisample_coverage;
int CPPGL_GL_ARB_shading_language_packing;
int CPPGL_GL_EXT_texture_cube_map;
int CPPGL_GL_NV_viewport_array2;
int CPPGL_GL_ARB_texture_stencil8;
int CPPGL_GL_EXT_index_func;
int CPPGL_GL_OES_compressed_paletted_texture;
int CPPGL_GL_NV_depth_clamp;
int CPPGL_GL_NV_shader_buffer_load;
int CPPGL_GL_EXT_color_subtable;
int CPPGL_GL_SUNX_constant_data;
int CPPGL_GL_EXT_texture_compression_s3tc;
int CPPGL_GL_EXT_multi_draw_arrays;
int CPPGL_GL_ARB_shader_atomic_counters;
int CPPGL_GL_ARB_arrays_of_arrays;
int CPPGL_GL_NV_conditional_render;
int CPPGL_GL_EXT_texture_env_combine;
int CPPGL_GL_NV_fog_distance;
int CPPGL_GL_SGIX_async_histogram;
int CPPGL_GL_MESA_resize_buffers;
int CPPGL_GL_NV_light_max_exponent;
int CPPGL_GL_NV_texture_env_combine4;
int CPPGL_GL_ARB_texture_view;
int CPPGL_GL_ARB_texture_env_combine;
int CPPGL_GL_ARB_map_buffer_range;
int CPPGL_GL_EXT_convolution;
int CPPGL_GL_NV_compute_program5;
int CPPGL_GL_NV_vertex_attrib_integer_64bit;
int CPPGL_GL_EXT_paletted_texture;
int CPPGL_GL_ARB_texture_buffer_object;
int CPPGL_GL_ATI_pn_triangles;
int CPPGL_GL_SGIX_resample;
int CPPGL_GL_SGIX_flush_raster;
int CPPGL_GL_EXT_light_texture;
int CPPGL_GL_ARB_point_sprite;
int CPPGL_GL_SUN_convolution_border_modes;
int CPPGL_GL_NV_parameter_buffer_object2;
int CPPGL_GL_ARB_half_float_pixel;
int CPPGL_GL_NV_tessellation_program5;
int CPPGL_GL_REND_screen_coordinates;
int CPPGL_GL_EXT_shared_texture_palette;
int CPPGL_GL_EXT_packed_float;
int CPPGL_GL_OML_subsample;
int CPPGL_GL_SGIX_vertex_preclip;
int CPPGL_GL_SGIX_texture_scale_bias;
int CPPGL_GL_AMD_draw_buffers_blend;
int CPPGL_GL_APPLE_texture_range;
int CPPGL_GL_EXT_texture_array;
int CPPGL_GL_NV_texture_barrier;
int CPPGL_GL_ARB_texture_query_levels;
int CPPGL_GL_NV_texgen_emboss;
int CPPGL_GL_EXT_texture_swizzle;
int CPPGL_GL_ARB_texture_rg;
int CPPGL_GL_ARB_vertex_type_2_10_10_10_rev;
int CPPGL_GL_ARB_fragment_shader;
int CPPGL_GL_3DFX_tbuffer;
int CPPGL_GL_GREMEDY_frame_terminator;
int CPPGL_GL_ARB_blend_func_extended;
int CPPGL_GL_EXT_separate_shader_objects;
int CPPGL_GL_NV_texture_multisample;
int CPPGL_GL_ARB_shader_objects;
int CPPGL_GL_ARB_framebuffer_object;
int CPPGL_GL_ATI_envmap_bumpmap;
int CPPGL_GL_AMD_shader_explicit_vertex_parameter;
int CPPGL_GL_ARB_robust_buffer_access_behavior;
int CPPGL_GL_ARB_shader_stencil_export;
int CPPGL_GL_NV_texture_rectangle;
int CPPGL_GL_ARB_enhanced_layouts;
int CPPGL_GL_ARB_texture_rectangle;
int CPPGL_GL_SGI_texture_color_table;
int CPPGL_GL_NV_viewport_swizzle;
int CPPGL_GL_ATI_map_object_buffer;
int CPPGL_GL_ARB_robustness;
int CPPGL_GL_NV_pixel_data_range;
int CPPGL_GL_EXT_framebuffer_blit;
int CPPGL_GL_ARB_gpu_shader_fp64;
int CPPGL_GL_NV_command_list;
int CPPGL_GL_SGIX_depth_texture;
int CPPGL_GL_EXT_vertex_weighting;
int CPPGL_GL_GREMEDY_string_marker;
int CPPGL_GL_ARB_texture_compression_bptc;
int CPPGL_GL_EXT_subtexture;
int CPPGL_GL_EXT_pixel_transform_color_table;
int CPPGL_GL_EXT_texture_compression_rgtc;
int CPPGL_GL_ARB_shader_atomic_counter_ops;
int CPPGL_GL_SGIX_depth_pass_instrument;
int CPPGL_GL_EXT_gpu_program_parameters;
int CPPGL_GL_NV_evaluators;
int CPPGL_GL_SGIS_texture_filter4;
int CPPGL_GL_AMD_performance_monitor;
int CPPGL_GL_NV_geometry_shader4;
int CPPGL_GL_EXT_stencil_clear_tag;
int CPPGL_GL_NV_vertex_program1_1;
int CPPGL_GL_NV_present_video;
int CPPGL_GL_ARB_texture_compression_rgtc;
int CPPGL_GL_HP_convolution_border_modes;
int CPPGL_GL_EXT_shader_integer_mix;
int CPPGL_GL_SGIX_framezoom;
int CPPGL_GL_ARB_stencil_texturing;
int CPPGL_GL_ARB_shader_clock;
int CPPGL_GL_NV_shader_atomic_fp16_vector;
int CPPGL_GL_SGIX_fog_offset;
int CPPGL_GL_ARB_draw_elements_base_vertex;
int CPPGL_GL_INGR_interlace_read;
int CPPGL_GL_NV_transform_feedback;
int CPPGL_GL_NV_fragment_program;
int CPPGL_GL_AMD_stencil_operation_extended;
int CPPGL_GL_ARB_seamless_cubemap_per_texture;
int CPPGL_GL_ARB_instanced_arrays;
int CPPGL_GL_ARB_get_texture_sub_image;
int CPPGL_GL_NV_vertex_array_range2;
int CPPGL_GL_KHR_robustness;
int CPPGL_GL_AMD_sparse_texture;
int CPPGL_GL_ARB_clip_control;
int CPPGL_GL_NV_fragment_coverage_to_color;
int CPPGL_GL_NV_fence;
int CPPGL_GL_ARB_texture_buffer_range;
int CPPGL_GL_SUN_mesh_array;
int CPPGL_GL_ARB_vertex_attrib_binding;
int CPPGL_GL_ARB_framebuffer_no_attachments;
int CPPGL_GL_ARB_cl_event;
int CPPGL_GL_ARB_derivative_control;
int CPPGL_GL_NV_packed_depth_stencil;
int CPPGL_GL_OES_single_precision;
int CPPGL_GL_NV_primitive_restart;
int CPPGL_GL_SUN_global_alpha;
int CPPGL_GL_ARB_fragment_shader_interlock;
int CPPGL_GL_EXT_texture_object;
int CPPGL_GL_AMD_name_gen_delete;
int CPPGL_GL_NV_texture_compression_vtc;
int CPPGL_GL_NV_sample_mask_override_coverage;
int CPPGL_GL_NV_texture_shader3;
int CPPGL_GL_NV_texture_shader2;
int CPPGL_GL_EXT_texture;
int CPPGL_GL_ARB_buffer_storage;
int CPPGL_GL_AMD_shader_atomic_counter_ops;
int CPPGL_GL_APPLE_vertex_program_evaluators;
int CPPGL_GL_ARB_multi_bind;
int CPPGL_GL_ARB_explicit_uniform_location;
int CPPGL_GL_ARB_depth_buffer_float;
int CPPGL_GL_NV_path_rendering_shared_edge;
int CPPGL_GL_SGIX_shadow_ambient;
int CPPGL_GL_ARB_texture_cube_map;
int CPPGL_GL_AMD_vertex_shader_viewport_index;
int CPPGL_GL_SGIX_list_priority;
int CPPGL_GL_NV_vertex_buffer_unified_memory;
int CPPGL_GL_NV_uniform_buffer_unified_memory;
int CPPGL_GL_ARB_clear_texture;
int CPPGL_GL_ATI_texture_env_combine3;
int CPPGL_GL_ARB_map_buffer_alignment;
int CPPGL_GL_NV_blend_equation_advanced;
int CPPGL_GL_SGIS_sharpen_texture;
int CPPGL_GL_KHR_robust_buffer_access_behavior;
int CPPGL_GL_ARB_pipeline_statistics_query;
int CPPGL_GL_ARB_vertex_program;
int CPPGL_GL_ARB_texture_rgb10_a2ui;
int CPPGL_GL_OML_interlace;
int CPPGL_GL_ATI_pixel_format_float;
int CPPGL_GL_NV_clip_space_w_scaling;
int CPPGL_GL_ARB_vertex_buffer_object;
int CPPGL_GL_EXT_shadow_funcs;
int CPPGL_GL_ATI_text_fragment_shader;
int CPPGL_GL_NV_vertex_array_range;
int CPPGL_GL_SGIX_fragment_lighting;
int CPPGL_GL_AMD_shader_ballot;
int CPPGL_GL_NV_texture_expand_normal;
int CPPGL_GL_NV_framebuffer_multisample_coverage;
int CPPGL_GL_EXT_timer_query;
int CPPGL_GL_EXT_vertex_array_bgra;
int CPPGL_GL_NV_bindless_texture;
int CPPGL_GL_KHR_debug;
int CPPGL_GL_SGIS_texture_border_clamp;
int CPPGL_GL_ATI_vertex_attrib_array_object;
int CPPGL_GL_SGIX_clipmap;
int CPPGL_GL_EXT_geometry_shader4;
int CPPGL_GL_ARB_shader_texture_image_samples;
int CPPGL_GL_MESA_ycbcr_texture;
int CPPGL_GL_MESAX_texture_stack;
int CPPGL_GL_AMD_seamless_cubemap_per_texture;
int CPPGL_GL_EXT_bindable_uniform;
int CPPGL_GL_KHR_texture_compression_astc_hdr;
int CPPGL_GL_ARB_shader_ballot;
int CPPGL_GL_KHR_blend_equation_advanced;
int CPPGL_GL_ARB_fragment_program_shadow;
int CPPGL_GL_ATI_element_array;
int CPPGL_GL_AMD_texture_texture4;
int CPPGL_GL_SGIX_reference_plane;
int CPPGL_GL_EXT_stencil_two_side;
int CPPGL_GL_ARB_transform_feedback_overflow_query;
int CPPGL_GL_SGIX_texture_lod_bias;
int CPPGL_GL_KHR_no_error;
int CPPGL_GL_NV_explicit_multisample;
int CPPGL_GL_NV_stereo_view_rendering;
int CPPGL_GL_IBM_static_data;
int CPPGL_GL_EXT_clip_volume_hint;
int CPPGL_GL_EXT_texture_perturb_normal;
int CPPGL_GL_NV_fragment_program2;
int CPPGL_GL_NV_fragment_program4;
int CPPGL_GL_EXT_point_parameters;
int CPPGL_GL_PGI_misc_hints;
int CPPGL_GL_SGIX_subsample;
int CPPGL_GL_AMD_shader_stencil_export;
int CPPGL_GL_ARB_shader_texture_lod;
int CPPGL_GL_ARB_vertex_shader;
int CPPGL_GL_ARB_depth_clamp;
int CPPGL_GL_SGIS_texture_select;
int CPPGL_GL_NV_texture_shader;
int CPPGL_GL_ARB_tessellation_shader;
int CPPGL_GL_EXT_draw_buffers2;
int CPPGL_GL_ARB_vertex_attrib_64bit;
int CPPGL_GL_EXT_texture_filter_minmax;
int CPPGL_GL_WIN_specular_fog;
int CPPGL_GL_AMD_interleaved_elements;
int CPPGL_GL_ARB_fragment_program;
int CPPGL_GL_OML_resample;
int CPPGL_GL_APPLE_ycbcr_422;
int CPPGL_GL_SGIX_texture_add_env;
int CPPGL_GL_ARB_shadow_ambient;
int CPPGL_GL_ARB_texture_storage;
int CPPGL_GL_EXT_pixel_buffer_object;
int CPPGL_GL_ARB_copy_image;
int CPPGL_GL_SGIS_pixel_texture;
int CPPGL_GL_SGIS_generate_mipmap;
int CPPGL_GL_SGIX_instruments;
int CPPGL_GL_HP_texture_lighting;
int CPPGL_GL_ARB_shader_storage_buffer_object;
int CPPGL_GL_EXT_sparse_texture2;
int CPPGL_GL_EXT_blend_minmax;
int CPPGL_GL_MESA_pack_invert;
int CPPGL_GL_ARB_base_instance;
int CPPGL_GL_SGIX_convolution_accuracy;
int CPPGL_GL_PGI_vertex_hints;
int CPPGL_GL_AMD_transform_feedback4;
int CPPGL_GL_ARB_ES3_1_compatibility;
int CPPGL_GL_EXT_texture_integer;
int CPPGL_GL_ARB_texture_multisample;
int CPPGL_GL_ATI_vertex_streams;
int CPPGL_GL_AMD_gpu_shader_int64;
int CPPGL_GL_S3_s3tc;
int CPPGL_GL_ARB_query_buffer_object;
int CPPGL_GL_AMD_vertex_shader_tessellator;
int CPPGL_GL_ARB_invalidate_subdata;
int CPPGL_GL_EXT_index_material;
int CPPGL_GL_NV_blend_equation_advanced_coherent;
int CPPGL_GL_KHR_texture_compression_astc_sliced_3d;
int CPPGL_GL_INTEL_parallel_arrays;
int CPPGL_GL_ATI_draw_buffers;
int CPPGL_GL_EXT_cmyka;
int CPPGL_GL_SGIX_pixel_texture;
int CPPGL_GL_APPLE_specular_vector;
int CPPGL_GL_ARB_compatibility;
int CPPGL_GL_ARB_timer_query;
int CPPGL_GL_SGIX_interlace;
int CPPGL_GL_NV_parameter_buffer_object;
int CPPGL_GL_AMD_shader_trinary_minmax;
int CPPGL_GL_ARB_direct_state_access;
int CPPGL_GL_EXT_rescale_normal;
int CPPGL_GL_ARB_pixel_buffer_object;
int CPPGL_GL_ARB_uniform_buffer_object;
int CPPGL_GL_ARB_vertex_type_10f_11f_11f_rev;
int CPPGL_GL_ARB_texture_swizzle;
int CPPGL_GL_NV_transform_feedback2;
int CPPGL_GL_SGIX_async_pixel;
int CPPGL_GL_NV_fragment_program_option;
int CPPGL_GL_ARB_explicit_attrib_location;
int CPPGL_GL_EXT_blend_color;
int CPPGL_GL_NV_shader_thread_group;
int CPPGL_GL_EXT_stencil_wrap;
int CPPGL_GL_EXT_index_array_formats;
int CPPGL_GL_OVR_multiview2;
int CPPGL_GL_EXT_histogram;
int CPPGL_GL_EXT_polygon_offset;
int CPPGL_GL_SGIS_point_parameters;
int CPPGL_GL_SGIX_ycrcb;
int CPPGL_GL_EXT_direct_state_access;
int CPPGL_GL_ARB_cull_distance;
int CPPGL_GL_AMD_sample_positions;
int CPPGL_GL_NV_vertex_program;
int CPPGL_GL_NV_shader_thread_shuffle;
int CPPGL_GL_ARB_shader_precision;
int CPPGL_GL_EXT_vertex_shader;
int CPPGL_GL_EXT_blend_func_separate;
int CPPGL_GL_APPLE_fence;
int CPPGL_GL_OES_byte_coordinates;
int CPPGL_GL_ARB_transpose_matrix;
int CPPGL_GL_ARB_provoking_vertex;
int CPPGL_GL_EXT_fog_coord;
int CPPGL_GL_EXT_vertex_array;
int CPPGL_GL_ARB_half_float_vertex;
int CPPGL_GL_EXT_blend_equation_separate;
int CPPGL_GL_NV_framebuffer_mixed_samples;
int CPPGL_GL_NVX_conditional_render;
int CPPGL_GL_ARB_multi_draw_indirect;
int CPPGL_GL_EXT_raster_multisample;
int CPPGL_GL_NV_copy_image;
int CPPGL_GL_ARB_fragment_layer_viewport;
int CPPGL_GL_INTEL_framebuffer_CMAA;
int CPPGL_GL_ARB_transform_feedback2;
int CPPGL_GL_ARB_transform_feedback3;
int CPPGL_GL_SGIX_ycrcba;
int CPPGL_GL_EXT_debug_marker;
int CPPGL_GL_EXT_bgra;
int CPPGL_GL_ARB_sparse_texture_clamp;
int CPPGL_GL_EXT_pixel_transform;
int CPPGL_GL_ARB_conservative_depth;
int CPPGL_GL_ATI_fragment_shader;
int CPPGL_GL_ARB_vertex_array_object;
int CPPGL_GL_SUN_triangle_list;
int CPPGL_GL_EXT_texture_env_add;
int CPPGL_GL_EXT_packed_depth_stencil;
int CPPGL_GL_EXT_texture_mirror_clamp;
int CPPGL_GL_NV_multisample_filter_hint;
int CPPGL_GL_APPLE_float_pixels;
int CPPGL_GL_ARB_transform_feedback_instanced;
int CPPGL_GL_SGIX_async;
int CPPGL_GL_EXT_texture_compression_latc;
int CPPGL_GL_NV_robustness_video_memory_purge;
int CPPGL_GL_ARB_shading_language_100;
int CPPGL_GL_INTEL_performance_query;
int CPPGL_GL_ARB_texture_mirror_clamp_to_edge;
int CPPGL_GL_NV_gpu_shader5;
int CPPGL_GL_NV_bindless_multi_draw_indirect_count;
int CPPGL_GL_ARB_ES2_compatibility;
int CPPGL_GL_ARB_indirect_parameters;
int CPPGL_GL_EXT_window_rectangles;
int CPPGL_GL_NV_half_float;
int CPPGL_GL_ARB_ES3_2_compatibility;
int CPPGL_GL_ATI_texture_mirror_once;
int CPPGL_GL_IBM_rasterpos_clip;
int CPPGL_GL_SGIX_shadow;
int CPPGL_GL_EXT_polygon_offset_clamp;
int CPPGL_GL_NV_deep_texture3D;
int CPPGL_GL_ARB_shader_draw_parameters;
int CPPGL_GL_SGIX_calligraphic_fragment;
int CPPGL_GL_ARB_shader_bit_encoding;
int CPPGL_GL_EXT_compiled_vertex_array;
int CPPGL_GL_NV_depth_buffer_float;
int CPPGL_GL_NV_occlusion_query;
int CPPGL_GL_APPLE_flush_buffer_range;
int CPPGL_GL_ARB_imaging;
int CPPGL_GL_NV_shader_atomic_float;
int CPPGL_GL_ARB_draw_buffers_blend;
int CPPGL_GL_AMD_gcn_shader;
int CPPGL_GL_AMD_blend_minmax_factor;
int CPPGL_GL_EXT_texture_sRGB_decode;
int CPPGL_GL_ARB_shading_language_420pack;
int CPPGL_GL_ARB_shader_viewport_layer_array;
int CPPGL_GL_ATI_meminfo;
int CPPGL_GL_EXT_abgr;
int CPPGL_GL_AMD_pinned_memory;
int CPPGL_GL_EXT_texture_snorm;
int CPPGL_GL_SGIX_texture_coordinate_clamp;
int CPPGL_GL_ARB_clear_buffer_object;
int CPPGL_GL_ARB_multisample;
int CPPGL_GL_EXT_debug_label;
int CPPGL_GL_ARB_sample_shading;
int CPPGL_GL_NV_internalformat_sample_query;
int CPPGL_GL_INTEL_map_texture;
int CPPGL_GL_ARB_texture_env_crossbar;
int CPPGL_GL_EXT_422_pixels;
int CPPGL_GL_NV_conservative_raster_pre_snap_triangles;
int CPPGL_GL_ARB_compute_shader;
int CPPGL_GL_EXT_blend_logic_op;
int CPPGL_GL_IBM_cull_vertex;
int CPPGL_GL_IBM_vertex_array_lists;
int CPPGL_GL_ARB_color_buffer_float;
int CPPGL_GL_ARB_bindless_texture;
int CPPGL_GL_ARB_window_pos;
int CPPGL_GL_ARB_internalformat_query;
int CPPGL_GL_ARB_shadow;
int CPPGL_GL_ARB_texture_mirrored_repeat;
int CPPGL_GL_EXT_shader_image_load_store;
int CPPGL_GL_EXT_copy_texture;
int CPPGL_GL_NV_register_combiners2;
int CPPGL_GL_SGIX_ycrcb_subsample;
int CPPGL_GL_SGIX_ir_instrument1;
int CPPGL_GL_NV_draw_texture;
int CPPGL_GL_EXT_texture_shared_exponent;
int CPPGL_GL_EXT_draw_instanced;
int CPPGL_GL_NV_copy_depth_to_color;
int CPPGL_GL_ARB_viewport_array;
int CPPGL_GL_ARB_separate_shader_objects;
int CPPGL_GL_EXT_depth_bounds_test;
int CPPGL_GL_HP_image_transform;
int CPPGL_GL_ARB_texture_env_add;
int CPPGL_GL_NV_video_capture;
int CPPGL_GL_ARB_sampler_objects;
int CPPGL_GL_ARB_matrix_palette;
int CPPGL_GL_SGIS_texture_color_mask;
int CPPGL_GL_EXT_packed_pixels;
int CPPGL_GL_EXT_coordinate_frame;
int CPPGL_GL_ARB_texture_compression;
int CPPGL_GL_APPLE_aux_depth_stencil;
int CPPGL_GL_ARB_shader_subroutine;
int CPPGL_GL_EXT_framebuffer_sRGB;
int CPPGL_GL_ARB_texture_storage_multisample;
int CPPGL_GL_KHR_blend_equation_advanced_coherent;
int CPPGL_GL_EXT_vertex_attrib_64bit;
int CPPGL_GL_NV_shader_atomic_float64;
int CPPGL_GL_ARB_depth_texture;
int CPPGL_GL_NV_shader_buffer_store;
int CPPGL_GL_OES_query_matrix;
int CPPGL_GL_MESA_window_pos;
int CPPGL_GL_NV_fill_rectangle;
int CPPGL_GL_NV_shader_storage_buffer_object;
int CPPGL_GL_ARB_texture_query_lod;
int CPPGL_GL_ARB_copy_buffer;
int CPPGL_GL_ARB_shader_image_size;
int CPPGL_GL_NV_shader_atomic_counters;
int CPPGL_GL_APPLE_object_purgeable;
int CPPGL_GL_ARB_occlusion_query;
int CPPGL_GL_INGR_color_clamp;
int CPPGL_GL_SGI_color_table;
int CPPGL_GL_NV_gpu_program5_mem_extended;
int CPPGL_GL_ARB_texture_cube_map_array;
int CPPGL_GL_SGIX_scalebias_hint;
int CPPGL_GL_EXT_gpu_shader4;
int CPPGL_GL_NV_geometry_program4;
int CPPGL_GL_EXT_framebuffer_multisample_blit_scaled;
int CPPGL_GL_AMD_debug_output;
int CPPGL_GL_ARB_texture_border_clamp;
int CPPGL_GL_ARB_fragment_coord_conventions;
int CPPGL_GL_ARB_multitexture;
int CPPGL_GL_SGIX_polynomial_ffd;
int CPPGL_GL_EXT_provoking_vertex;
int CPPGL_GL_ARB_point_parameters;
int CPPGL_GL_ARB_shader_image_load_store;
int CPPGL_GL_ARB_conditional_render_inverted;
int CPPGL_GL_HP_occlusion_test;
int CPPGL_GL_ARB_ES3_compatibility;
int CPPGL_GL_ARB_texture_barrier;
int CPPGL_GL_ARB_texture_buffer_object_rgb32;
int CPPGL_GL_NV_bindless_multi_draw_indirect;
int CPPGL_GL_SGIX_texture_multi_buffer;
int CPPGL_GL_EXT_transform_feedback;
int CPPGL_GL_KHR_texture_compression_astc_ldr;
int CPPGL_GL_3DFX_multisample;
int CPPGL_GL_INTEL_fragment_shader_ordering;
int CPPGL_GL_ARB_texture_env_dot3;
int CPPGL_GL_NV_gpu_program4;
int CPPGL_GL_NV_gpu_program5;
int CPPGL_GL_NV_float_buffer;
int CPPGL_GL_SGIS_texture_edge_clamp;
int CPPGL_GL_ARB_framebuffer_sRGB;
int CPPGL_GL_SUN_slice_accum;
int CPPGL_GL_EXT_index_texture;
int CPPGL_GL_EXT_shader_image_load_formatted;
int CPPGL_GL_ARB_geometry_shader4;
int CPPGL_GL_EXT_separate_specular_color;
int CPPGL_GL_AMD_depth_clamp_separate;
int CPPGL_GL_NV_conservative_raster;
int CPPGL_GL_ARB_sparse_texture2;
int CPPGL_GL_SGIX_sprite;
int CPPGL_GL_ARB_get_program_binary;
int CPPGL_GL_AMD_occlusion_query_event;
int CPPGL_GL_SGIS_multisample;
int CPPGL_GL_EXT_framebuffer_object;
int CPPGL_GL_ARB_robustness_isolation;
int CPPGL_GL_ARB_vertex_array_bgra;
int CPPGL_GL_APPLE_vertex_array_range;
int CPPGL_GL_AMD_query_buffer_object;
int CPPGL_GL_NV_register_combiners;
int CPPGL_GL_ARB_draw_buffers;
int CPPGL_GL_EXT_texture_env_dot3;
int CPPGL_GL_ARB_debug_output;
int CPPGL_GL_SGI_color_matrix;
int CPPGL_GL_EXT_cull_vertex;
int CPPGL_GL_EXT_texture_sRGB;
int CPPGL_GL_APPLE_row_bytes;
int CPPGL_GL_NV_texgen_reflection;
int CPPGL_GL_IBM_multimode_draw_arrays;
int CPPGL_GL_APPLE_vertex_array_object;
int CPPGL_GL_3DFX_texture_compression_FXT1;
int CPPGL_GL_NV_fragment_shader_interlock;
int CPPGL_GL_AMD_conservative_depth;
int CPPGL_GL_ARB_texture_float;
int CPPGL_GL_ARB_compressed_texture_pixel_storage;
int CPPGL_GL_SGIS_detail_texture;
int CPPGL_GL_NV_geometry_shader_passthrough;
int CPPGL_GL_ARB_draw_instanced;
int CPPGL_GL_OES_read_format;
int CPPGL_GL_ATI_texture_float;
int CPPGL_GL_ARB_texture_gather;
int CPPGL_GL_AMD_vertex_shader_layer;
int CPPGL_GL_ARB_shading_language_include;
int CPPGL_GL_APPLE_client_storage;
int CPPGL_GL_WIN_phong_shading;
int CPPGL_GL_INGR_blend_func_separate;
int CPPGL_GL_NV_path_rendering;
int CPPGL_GL_NV_conservative_raster_dilate;
int CPPGL_GL_AMD_gpu_shader_half_float;
int CPPGL_GL_ARB_post_depth_coverage;
int CPPGL_GL_ARB_texture_non_power_of_two;
int CPPGL_GL_APPLE_rgb_422;
int CPPGL_GL_EXT_texture_lod_bias;
int CPPGL_GL_ARB_gpu_shader_int64;
int CPPGL_GL_ARB_seamless_cube_map;
int CPPGL_GL_ARB_shader_group_vote;
int CPPGL_GL_NV_vdpau_interop;
int CPPGL_GL_ARB_occlusion_query2;
int CPPGL_GL_ARB_internalformat_query2;
int CPPGL_GL_EXT_texture_filter_anisotropic;
int CPPGL_GL_SUN_vertex;
int CPPGL_GL_SGIX_igloo_interface;
int CPPGL_GL_SGIS_texture_lod;
int CPPGL_GL_NV_vertex_program3;
int CPPGL_GL_ARB_draw_indirect;
int CPPGL_GL_NV_vertex_program4;
int CPPGL_GL_AMD_transform_feedback3_lines_triangles;
int CPPGL_GL_SGIS_fog_function;
int CPPGL_GL_EXT_x11_sync_object;
int CPPGL_GL_ARB_sync;
int CPPGL_GL_NV_sample_locations;
int CPPGL_GL_ARB_compute_variable_group_size;
int CPPGL_GL_OES_fixed_point;
int CPPGL_GL_NV_blend_square;
int CPPGL_GL_EXT_framebuffer_multisample;
int CPPGL_GL_ARB_gpu_shader5;
int CPPGL_GL_SGIS_texture4D;
int CPPGL_GL_EXT_texture3D;
int CPPGL_GL_EXT_multisample;
int CPPGL_GL_EXT_secondary_color;
int CPPGL_GL_INTEL_conservative_rasterization;
int CPPGL_GL_ARB_texture_filter_minmax;
int CPPGL_GL_ATI_vertex_array_object;
int CPPGL_GL_ARB_parallel_shader_compile;
int CPPGL_GL_NVX_gpu_memory_info;
int CPPGL_GL_ARB_sparse_texture;
int CPPGL_GL_SGIS_point_line_texgen;
int CPPGL_GL_ARB_sample_locations;
int CPPGL_GL_ARB_sparse_buffer;
int CPPGL_GL_EXT_draw_range_elements;
int CPPGL_GL_SGIX_blend_alpha_minmax;
int CPPGL_GL_KHR_context_flush_control;
PFNGLTBUFFERMASK3DFXPROC cppgl_glTbufferMask3DFX;
PFNGLDEBUGMESSAGEENABLEAMDPROC cppgl_glDebugMessageEnableAMD;
PFNGLDEBUGMESSAGEINSERTAMDPROC cppgl_glDebugMessageInsertAMD;
PFNGLDEBUGMESSAGECALLBACKAMDPROC cppgl_glDebugMessageCallbackAMD;
PFNGLGETDEBUGMESSAGELOGAMDPROC cppgl_glGetDebugMessageLogAMD;
PFNGLBLENDFUNCINDEXEDAMDPROC cppgl_glBlendFuncIndexedAMD;
PFNGLBLENDFUNCSEPARATEINDEXEDAMDPROC cppgl_glBlendFuncSeparateIndexedAMD;
PFNGLBLENDEQUATIONINDEXEDAMDPROC cppgl_glBlendEquationIndexedAMD;
PFNGLBLENDEQUATIONSEPARATEINDEXEDAMDPROC cppgl_glBlendEquationSeparateIndexedAMD;
PFNGLUNIFORM1I64NVPROC cppgl_glUniform1i64NV;
PFNGLUNIFORM2I64NVPROC cppgl_glUniform2i64NV;
PFNGLUNIFORM3I64NVPROC cppgl_glUniform3i64NV;
PFNGLUNIFORM4I64NVPROC cppgl_glUniform4i64NV;
PFNGLUNIFORM1I64VNVPROC cppgl_glUniform1i64vNV;
PFNGLUNIFORM2I64VNVPROC cppgl_glUniform2i64vNV;
PFNGLUNIFORM3I64VNVPROC cppgl_glUniform3i64vNV;
PFNGLUNIFORM4I64VNVPROC cppgl_glUniform4i64vNV;
PFNGLUNIFORM1UI64NVPROC cppgl_glUniform1ui64NV;
PFNGLUNIFORM2UI64NVPROC cppgl_glUniform2ui64NV;
PFNGLUNIFORM3UI64NVPROC cppgl_glUniform3ui64NV;
PFNGLUNIFORM4UI64NVPROC cppgl_glUniform4ui64NV;
PFNGLUNIFORM1UI64VNVPROC cppgl_glUniform1ui64vNV;
PFNGLUNIFORM2UI64VNVPROC cppgl_glUniform2ui64vNV;
PFNGLUNIFORM3UI64VNVPROC cppgl_glUniform3ui64vNV;
PFNGLUNIFORM4UI64VNVPROC cppgl_glUniform4ui64vNV;
PFNGLGETUNIFORMI64VNVPROC cppgl_glGetUniformi64vNV;
PFNGLGETUNIFORMUI64VNVPROC cppgl_glGetUniformui64vNV;
PFNGLPROGRAMUNIFORM1I64NVPROC cppgl_glProgramUniform1i64NV;
PFNGLPROGRAMUNIFORM2I64NVPROC cppgl_glProgramUniform2i64NV;
PFNGLPROGRAMUNIFORM3I64NVPROC cppgl_glProgramUniform3i64NV;
PFNGLPROGRAMUNIFORM4I64NVPROC cppgl_glProgramUniform4i64NV;
PFNGLPROGRAMUNIFORM1I64VNVPROC cppgl_glProgramUniform1i64vNV;
PFNGLPROGRAMUNIFORM2I64VNVPROC cppgl_glProgramUniform2i64vNV;
PFNGLPROGRAMUNIFORM3I64VNVPROC cppgl_glProgramUniform3i64vNV;
PFNGLPROGRAMUNIFORM4I64VNVPROC cppgl_glProgramUniform4i64vNV;
PFNGLPROGRAMUNIFORM1UI64NVPROC cppgl_glProgramUniform1ui64NV;
PFNGLPROGRAMUNIFORM2UI64NVPROC cppgl_glProgramUniform2ui64NV;
PFNGLPROGRAMUNIFORM3UI64NVPROC cppgl_glProgramUniform3ui64NV;
PFNGLPROGRAMUNIFORM4UI64NVPROC cppgl_glProgramUniform4ui64NV;
PFNGLPROGRAMUNIFORM1UI64VNVPROC cppgl_glProgramUniform1ui64vNV;
PFNGLPROGRAMUNIFORM2UI64VNVPROC cppgl_glProgramUniform2ui64vNV;
PFNGLPROGRAMUNIFORM3UI64VNVPROC cppgl_glProgramUniform3ui64vNV;
PFNGLPROGRAMUNIFORM4UI64VNVPROC cppgl_glProgramUniform4ui64vNV;
PFNGLVERTEXATTRIBPARAMETERIAMDPROC cppgl_glVertexAttribParameteriAMD;
PFNGLMULTIDRAWARRAYSINDIRECTAMDPROC cppgl_glMultiDrawArraysIndirectAMD;
PFNGLMULTIDRAWELEMENTSINDIRECTAMDPROC cppgl_glMultiDrawElementsIndirectAMD;
PFNGLGENNAMESAMDPROC cppgl_glGenNamesAMD;
PFNGLDELETENAMESAMDPROC cppgl_glDeleteNamesAMD;
PFNGLISNAMEAMDPROC cppgl_glIsNameAMD;
PFNGLQUERYOBJECTPARAMETERUIAMDPROC cppgl_glQueryObjectParameteruiAMD;
PFNGLGETPERFMONITORGROUPSAMDPROC cppgl_glGetPerfMonitorGroupsAMD;
PFNGLGETPERFMONITORCOUNTERSAMDPROC cppgl_glGetPerfMonitorCountersAMD;
PFNGLGETPERFMONITORGROUPSTRINGAMDPROC cppgl_glGetPerfMonitorGroupStringAMD;
PFNGLGETPERFMONITORCOUNTERSTRINGAMDPROC cppgl_glGetPerfMonitorCounterStringAMD;
PFNGLGETPERFMONITORCOUNTERINFOAMDPROC cppgl_glGetPerfMonitorCounterInfoAMD;
PFNGLGENPERFMONITORSAMDPROC cppgl_glGenPerfMonitorsAMD;
PFNGLDELETEPERFMONITORSAMDPROC cppgl_glDeletePerfMonitorsAMD;
PFNGLSELECTPERFMONITORCOUNTERSAMDPROC cppgl_glSelectPerfMonitorCountersAMD;
PFNGLBEGINPERFMONITORAMDPROC cppgl_glBeginPerfMonitorAMD;
PFNGLENDPERFMONITORAMDPROC cppgl_glEndPerfMonitorAMD;
PFNGLGETPERFMONITORCOUNTERDATAAMDPROC cppgl_glGetPerfMonitorCounterDataAMD;
PFNGLSETMULTISAMPLEFVAMDPROC cppgl_glSetMultisamplefvAMD;
PFNGLTEXSTORAGESPARSEAMDPROC cppgl_glTexStorageSparseAMD;
PFNGLTEXTURESTORAGESPARSEAMDPROC cppgl_glTextureStorageSparseAMD;
PFNGLSTENCILOPVALUEAMDPROC cppgl_glStencilOpValueAMD;
PFNGLTESSELLATIONFACTORAMDPROC cppgl_glTessellationFactorAMD;
PFNGLTESSELLATIONMODEAMDPROC cppgl_glTessellationModeAMD;
PFNGLELEMENTPOINTERAPPLEPROC cppgl_glElementPointerAPPLE;
PFNGLDRAWELEMENTARRAYAPPLEPROC cppgl_glDrawElementArrayAPPLE;
PFNGLDRAWRANGEELEMENTARRAYAPPLEPROC cppgl_glDrawRangeElementArrayAPPLE;
PFNGLMULTIDRAWELEMENTARRAYAPPLEPROC cppgl_glMultiDrawElementArrayAPPLE;
PFNGLMULTIDRAWRANGEELEMENTARRAYAPPLEPROC cppgl_glMultiDrawRangeElementArrayAPPLE;
PFNGLGENFENCESAPPLEPROC cppgl_glGenFencesAPPLE;
PFNGLDELETEFENCESAPPLEPROC cppgl_glDeleteFencesAPPLE;
PFNGLSETFENCEAPPLEPROC cppgl_glSetFenceAPPLE;
PFNGLISFENCEAPPLEPROC cppgl_glIsFenceAPPLE;
PFNGLTESTFENCEAPPLEPROC cppgl_glTestFenceAPPLE;
PFNGLFINISHFENCEAPPLEPROC cppgl_glFinishFenceAPPLE;
PFNGLTESTOBJECTAPPLEPROC cppgl_glTestObjectAPPLE;
PFNGLFINISHOBJECTAPPLEPROC cppgl_glFinishObjectAPPLE;
PFNGLBUFFERPARAMETERIAPPLEPROC cppgl_glBufferParameteriAPPLE;
PFNGLFLUSHMAPPEDBUFFERRANGEAPPLEPROC cppgl_glFlushMappedBufferRangeAPPLE;
PFNGLOBJECTPURGEABLEAPPLEPROC cppgl_glObjectPurgeableAPPLE;
PFNGLOBJECTUNPURGEABLEAPPLEPROC cppgl_glObjectUnpurgeableAPPLE;
PFNGLGETOBJECTPARAMETERIVAPPLEPROC cppgl_glGetObjectParameterivAPPLE;
PFNGLTEXTURERANGEAPPLEPROC cppgl_glTextureRangeAPPLE;
PFNGLGETTEXPARAMETERPOINTERVAPPLEPROC cppgl_glGetTexParameterPointervAPPLE;
PFNGLBINDVERTEXARRAYAPPLEPROC cppgl_glBindVertexArrayAPPLE;
PFNGLDELETEVERTEXARRAYSAPPLEPROC cppgl_glDeleteVertexArraysAPPLE;
PFNGLGENVERTEXARRAYSAPPLEPROC cppgl_glGenVertexArraysAPPLE;
PFNGLISVERTEXARRAYAPPLEPROC cppgl_glIsVertexArrayAPPLE;
PFNGLVERTEXARRAYRANGEAPPLEPROC cppgl_glVertexArrayRangeAPPLE;
PFNGLFLUSHVERTEXARRAYRANGEAPPLEPROC cppgl_glFlushVertexArrayRangeAPPLE;
PFNGLVERTEXARRAYPARAMETERIAPPLEPROC cppgl_glVertexArrayParameteriAPPLE;
PFNGLENABLEVERTEXATTRIBAPPLEPROC cppgl_glEnableVertexAttribAPPLE;
PFNGLDISABLEVERTEXATTRIBAPPLEPROC cppgl_glDisableVertexAttribAPPLE;
PFNGLISVERTEXATTRIBENABLEDAPPLEPROC cppgl_glIsVertexAttribEnabledAPPLE;
PFNGLMAPVERTEXATTRIB1DAPPLEPROC cppgl_glMapVertexAttrib1dAPPLE;
PFNGLMAPVERTEXATTRIB1FAPPLEPROC cppgl_glMapVertexAttrib1fAPPLE;
PFNGLMAPVERTEXATTRIB2DAPPLEPROC cppgl_glMapVertexAttrib2dAPPLE;
PFNGLMAPVERTEXATTRIB2FAPPLEPROC cppgl_glMapVertexAttrib2fAPPLE;
PFNGLMEMORYBARRIERBYREGIONPROC cppgl_glMemoryBarrierByRegion;
PFNGLPRIMITIVEBOUNDINGBOXARBPROC cppgl_glPrimitiveBoundingBoxARB;
PFNGLDRAWARRAYSINSTANCEDBASEINSTANCEPROC cppgl_glDrawArraysInstancedBaseInstance;
PFNGLDRAWELEMENTSINSTANCEDBASEINSTANCEPROC cppgl_glDrawElementsInstancedBaseInstance;
PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXBASEINSTANCEPROC cppgl_glDrawElementsInstancedBaseVertexBaseInstance;
PFNGLGETTEXTUREHANDLEARBPROC cppgl_glGetTextureHandleARB;
PFNGLGETTEXTURESAMPLERHANDLEARBPROC cppgl_glGetTextureSamplerHandleARB;
PFNGLMAKETEXTUREHANDLERESIDENTARBPROC cppgl_glMakeTextureHandleResidentARB;
PFNGLMAKETEXTUREHANDLENONRESIDENTARBPROC cppgl_glMakeTextureHandleNonResidentARB;
PFNGLGETIMAGEHANDLEARBPROC cppgl_glGetImageHandleARB;
PFNGLMAKEIMAGEHANDLERESIDENTARBPROC cppgl_glMakeImageHandleResidentARB;
PFNGLMAKEIMAGEHANDLENONRESIDENTARBPROC cppgl_glMakeImageHandleNonResidentARB;
PFNGLUNIFORMHANDLEUI64ARBPROC cppgl_glUniformHandleui64ARB;
PFNGLUNIFORMHANDLEUI64VARBPROC cppgl_glUniformHandleui64vARB;
PFNGLPROGRAMUNIFORMHANDLEUI64ARBPROC cppgl_glProgramUniformHandleui64ARB;
PFNGLPROGRAMUNIFORMHANDLEUI64VARBPROC cppgl_glProgramUniformHandleui64vARB;
PFNGLISTEXTUREHANDLERESIDENTARBPROC cppgl_glIsTextureHandleResidentARB;
PFNGLISIMAGEHANDLERESIDENTARBPROC cppgl_glIsImageHandleResidentARB;
PFNGLVERTEXATTRIBL1UI64ARBPROC cppgl_glVertexAttribL1ui64ARB;
PFNGLVERTEXATTRIBL1UI64VARBPROC cppgl_glVertexAttribL1ui64vARB;
PFNGLGETVERTEXATTRIBLUI64VARBPROC cppgl_glGetVertexAttribLui64vARB;
PFNGLBUFFERSTORAGEPROC cppgl_glBufferStorage;
PFNGLCREATESYNCFROMCLEVENTARBPROC cppgl_glCreateSyncFromCLeventARB;
PFNGLCLEARBUFFERDATAPROC cppgl_glClearBufferData;
PFNGLCLEARBUFFERSUBDATAPROC cppgl_glClearBufferSubData;
PFNGLCLEARTEXIMAGEPROC cppgl_glClearTexImage;
PFNGLCLEARTEXSUBIMAGEPROC cppgl_glClearTexSubImage;
PFNGLCLIPCONTROLPROC cppgl_glClipControl;
PFNGLCLAMPCOLORARBPROC cppgl_glClampColorARB;
PFNGLDISPATCHCOMPUTEPROC cppgl_glDispatchCompute;
PFNGLDISPATCHCOMPUTEINDIRECTPROC cppgl_glDispatchComputeIndirect;
PFNGLDISPATCHCOMPUTEGROUPSIZEARBPROC cppgl_glDispatchComputeGroupSizeARB;
PFNGLCOPYIMAGESUBDATAPROC cppgl_glCopyImageSubData;
PFNGLDEBUGMESSAGECONTROLARBPROC cppgl_glDebugMessageControlARB;
PFNGLDEBUGMESSAGEINSERTARBPROC cppgl_glDebugMessageInsertARB;
PFNGLDEBUGMESSAGECALLBACKARBPROC cppgl_glDebugMessageCallbackARB;
PFNGLGETDEBUGMESSAGELOGARBPROC cppgl_glGetDebugMessageLogARB;
PFNGLCREATETRANSFORMFEEDBACKSPROC cppgl_glCreateTransformFeedbacks;
PFNGLTRANSFORMFEEDBACKBUFFERBASEPROC cppgl_glTransformFeedbackBufferBase;
PFNGLTRANSFORMFEEDBACKBUFFERRANGEPROC cppgl_glTransformFeedbackBufferRange;
PFNGLGETTRANSFORMFEEDBACKIVPROC cppgl_glGetTransformFeedbackiv;
PFNGLGETTRANSFORMFEEDBACKI_VPROC cppgl_glGetTransformFeedbacki_v;
PFNGLGETTRANSFORMFEEDBACKI64_VPROC cppgl_glGetTransformFeedbacki64_v;
PFNGLCREATEBUFFERSPROC cppgl_glCreateBuffers;
PFNGLNAMEDBUFFERSTORAGEPROC cppgl_glNamedBufferStorage;
PFNGLNAMEDBUFFERDATAPROC cppgl_glNamedBufferData;
PFNGLNAMEDBUFFERSUBDATAPROC cppgl_glNamedBufferSubData;
PFNGLCOPYNAMEDBUFFERSUBDATAPROC cppgl_glCopyNamedBufferSubData;
PFNGLCLEARNAMEDBUFFERDATAPROC cppgl_glClearNamedBufferData;
PFNGLCLEARNAMEDBUFFERSUBDATAPROC cppgl_glClearNamedBufferSubData;
PFNGLMAPNAMEDBUFFERPROC cppgl_glMapNamedBuffer;
PFNGLMAPNAMEDBUFFERRANGEPROC cppgl_glMapNamedBufferRange;
PFNGLUNMAPNAMEDBUFFERPROC cppgl_glUnmapNamedBuffer;
PFNGLFLUSHMAPPEDNAMEDBUFFERRANGEPROC cppgl_glFlushMappedNamedBufferRange;
PFNGLGETNAMEDBUFFERPARAMETERIVPROC cppgl_glGetNamedBufferParameteriv;
PFNGLGETNAMEDBUFFERPARAMETERI64VPROC cppgl_glGetNamedBufferParameteri64v;
PFNGLGETNAMEDBUFFERPOINTERVPROC cppgl_glGetNamedBufferPointerv;
PFNGLGETNAMEDBUFFERSUBDATAPROC cppgl_glGetNamedBufferSubData;
PFNGLCREATEFRAMEBUFFERSPROC cppgl_glCreateFramebuffers;
PFNGLNAMEDFRAMEBUFFERRENDERBUFFERPROC cppgl_glNamedFramebufferRenderbuffer;
PFNGLNAMEDFRAMEBUFFERPARAMETERIPROC cppgl_glNamedFramebufferParameteri;
PFNGLNAMEDFRAMEBUFFERTEXTUREPROC cppgl_glNamedFramebufferTexture;
PFNGLNAMEDFRAMEBUFFERTEXTURELAYERPROC cppgl_glNamedFramebufferTextureLayer;
PFNGLNAMEDFRAMEBUFFERDRAWBUFFERPROC cppgl_glNamedFramebufferDrawBuffer;
PFNGLNAMEDFRAMEBUFFERDRAWBUFFERSPROC cppgl_glNamedFramebufferDrawBuffers;
PFNGLNAMEDFRAMEBUFFERREADBUFFERPROC cppgl_glNamedFramebufferReadBuffer;
PFNGLINVALIDATENAMEDFRAMEBUFFERDATAPROC cppgl_glInvalidateNamedFramebufferData;
PFNGLINVALIDATENAMEDFRAMEBUFFERSUBDATAPROC cppgl_glInvalidateNamedFramebufferSubData;
PFNGLCLEARNAMEDFRAMEBUFFERIVPROC cppgl_glClearNamedFramebufferiv;
PFNGLCLEARNAMEDFRAMEBUFFERUIVPROC cppgl_glClearNamedFramebufferuiv;
PFNGLCLEARNAMEDFRAMEBUFFERFVPROC cppgl_glClearNamedFramebufferfv;
PFNGLCLEARNAMEDFRAMEBUFFERFIPROC cppgl_glClearNamedFramebufferfi;
PFNGLBLITNAMEDFRAMEBUFFERPROC cppgl_glBlitNamedFramebuffer;
PFNGLCHECKNAMEDFRAMEBUFFERSTATUSPROC cppgl_glCheckNamedFramebufferStatus;
PFNGLGETNAMEDFRAMEBUFFERPARAMETERIVPROC cppgl_glGetNamedFramebufferParameteriv;
PFNGLGETNAMEDFRAMEBUFFERATTACHMENTPARAMETERIVPROC cppgl_glGetNamedFramebufferAttachmentParameteriv;
PFNGLCREATERENDERBUFFERSPROC cppgl_glCreateRenderbuffers;
PFNGLNAMEDRENDERBUFFERSTORAGEPROC cppgl_glNamedRenderbufferStorage;
PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLEPROC cppgl_glNamedRenderbufferStorageMultisample;
PFNGLGETNAMEDRENDERBUFFERPARAMETERIVPROC cppgl_glGetNamedRenderbufferParameteriv;
PFNGLCREATETEXTURESPROC cppgl_glCreateTextures;
PFNGLTEXTUREBUFFERPROC cppgl_glTextureBuffer;
PFNGLTEXTUREBUFFERRANGEPROC cppgl_glTextureBufferRange;
PFNGLTEXTURESTORAGE1DPROC cppgl_glTextureStorage1D;
PFNGLTEXTURESTORAGE2DPROC cppgl_glTextureStorage2D;
PFNGLTEXTURESTORAGE3DPROC cppgl_glTextureStorage3D;
PFNGLTEXTURESTORAGE2DMULTISAMPLEPROC cppgl_glTextureStorage2DMultisample;
PFNGLTEXTURESTORAGE3DMULTISAMPLEPROC cppgl_glTextureStorage3DMultisample;
PFNGLTEXTURESUBIMAGE1DPROC cppgl_glTextureSubImage1D;
PFNGLTEXTURESUBIMAGE2DPROC cppgl_glTextureSubImage2D;
PFNGLTEXTURESUBIMAGE3DPROC cppgl_glTextureSubImage3D;
PFNGLCOMPRESSEDTEXTURESUBIMAGE1DPROC cppgl_glCompressedTextureSubImage1D;
PFNGLCOMPRESSEDTEXTURESUBIMAGE2DPROC cppgl_glCompressedTextureSubImage2D;
PFNGLCOMPRESSEDTEXTURESUBIMAGE3DPROC cppgl_glCompressedTextureSubImage3D;
PFNGLCOPYTEXTURESUBIMAGE1DPROC cppgl_glCopyTextureSubImage1D;
PFNGLCOPYTEXTURESUBIMAGE2DPROC cppgl_glCopyTextureSubImage2D;
PFNGLCOPYTEXTURESUBIMAGE3DPROC cppgl_glCopyTextureSubImage3D;
PFNGLTEXTUREPARAMETERFPROC cppgl_glTextureParameterf;
PFNGLTEXTUREPARAMETERFVPROC cppgl_glTextureParameterfv;
PFNGLTEXTUREPARAMETERIPROC cppgl_glTextureParameteri;
PFNGLTEXTUREPARAMETERIIVPROC cppgl_glTextureParameterIiv;
PFNGLTEXTUREPARAMETERIUIVPROC cppgl_glTextureParameterIuiv;
PFNGLTEXTUREPARAMETERIVPROC cppgl_glTextureParameteriv;
PFNGLGENERATETEXTUREMIPMAPPROC cppgl_glGenerateTextureMipmap;
PFNGLBINDTEXTUREUNITPROC cppgl_glBindTextureUnit;
PFNGLGETTEXTUREIMAGEPROC cppgl_glGetTextureImage;
PFNGLGETCOMPRESSEDTEXTUREIMAGEPROC cppgl_glGetCompressedTextureImage;
PFNGLGETTEXTURELEVELPARAMETERFVPROC cppgl_glGetTextureLevelParameterfv;
PFNGLGETTEXTURELEVELPARAMETERIVPROC cppgl_glGetTextureLevelParameteriv;
PFNGLGETTEXTUREPARAMETERFVPROC cppgl_glGetTextureParameterfv;
PFNGLGETTEXTUREPARAMETERIIVPROC cppgl_glGetTextureParameterIiv;
PFNGLGETTEXTUREPARAMETERIUIVPROC cppgl_glGetTextureParameterIuiv;
PFNGLGETTEXTUREPARAMETERIVPROC cppgl_glGetTextureParameteriv;
PFNGLCREATEVERTEXARRAYSPROC cppgl_glCreateVertexArrays;
PFNGLDISABLEVERTEXARRAYATTRIBPROC cppgl_glDisableVertexArrayAttrib;
PFNGLENABLEVERTEXARRAYATTRIBPROC cppgl_glEnableVertexArrayAttrib;
PFNGLVERTEXARRAYELEMENTBUFFERPROC cppgl_glVertexArrayElementBuffer;
PFNGLVERTEXARRAYVERTEXBUFFERPROC cppgl_glVertexArrayVertexBuffer;
PFNGLVERTEXARRAYVERTEXBUFFERSPROC cppgl_glVertexArrayVertexBuffers;
PFNGLVERTEXARRAYATTRIBBINDINGPROC cppgl_glVertexArrayAttribBinding;
PFNGLVERTEXARRAYATTRIBFORMATPROC cppgl_glVertexArrayAttribFormat;
PFNGLVERTEXARRAYATTRIBIFORMATPROC cppgl_glVertexArrayAttribIFormat;
PFNGLVERTEXARRAYATTRIBLFORMATPROC cppgl_glVertexArrayAttribLFormat;
PFNGLVERTEXARRAYBINDINGDIVISORPROC cppgl_glVertexArrayBindingDivisor;
PFNGLGETVERTEXARRAYIVPROC cppgl_glGetVertexArrayiv;
PFNGLGETVERTEXARRAYINDEXEDIVPROC cppgl_glGetVertexArrayIndexediv;
PFNGLGETVERTEXARRAYINDEXED64IVPROC cppgl_glGetVertexArrayIndexed64iv;
PFNGLCREATESAMPLERSPROC cppgl_glCreateSamplers;
PFNGLCREATEPROGRAMPIPELINESPROC cppgl_glCreateProgramPipelines;
PFNGLCREATEQUERIESPROC cppgl_glCreateQueries;
PFNGLGETQUERYBUFFEROBJECTI64VPROC cppgl_glGetQueryBufferObjecti64v;
PFNGLGETQUERYBUFFEROBJECTIVPROC cppgl_glGetQueryBufferObjectiv;
PFNGLGETQUERYBUFFEROBJECTUI64VPROC cppgl_glGetQueryBufferObjectui64v;
PFNGLGETQUERYBUFFEROBJECTUIVPROC cppgl_glGetQueryBufferObjectuiv;
PFNGLDRAWBUFFERSARBPROC cppgl_glDrawBuffersARB;
PFNGLBLENDEQUATIONIARBPROC cppgl_glBlendEquationiARB;
PFNGLBLENDEQUATIONSEPARATEIARBPROC cppgl_glBlendEquationSeparateiARB;
PFNGLBLENDFUNCIARBPROC cppgl_glBlendFunciARB;
PFNGLBLENDFUNCSEPARATEIARBPROC cppgl_glBlendFuncSeparateiARB;
PFNGLDRAWARRAYSINSTANCEDARBPROC cppgl_glDrawArraysInstancedARB;
PFNGLDRAWELEMENTSINSTANCEDARBPROC cppgl_glDrawElementsInstancedARB;
PFNGLPROGRAMSTRINGARBPROC cppgl_glProgramStringARB;
PFNGLBINDPROGRAMARBPROC cppgl_glBindProgramARB;
PFNGLDELETEPROGRAMSARBPROC cppgl_glDeleteProgramsARB;
PFNGLGENPROGRAMSARBPROC cppgl_glGenProgramsARB;
PFNGLPROGRAMENVPARAMETER4DARBPROC cppgl_glProgramEnvParameter4dARB;
PFNGLPROGRAMENVPARAMETER4DVARBPROC cppgl_glProgramEnvParameter4dvARB;
PFNGLPROGRAMENVPARAMETER4FARBPROC cppgl_glProgramEnvParameter4fARB;
PFNGLPROGRAMENVPARAMETER4FVARBPROC cppgl_glProgramEnvParameter4fvARB;
PFNGLPROGRAMLOCALPARAMETER4DARBPROC cppgl_glProgramLocalParameter4dARB;
PFNGLPROGRAMLOCALPARAMETER4DVARBPROC cppgl_glProgramLocalParameter4dvARB;
PFNGLPROGRAMLOCALPARAMETER4FARBPROC cppgl_glProgramLocalParameter4fARB;
PFNGLPROGRAMLOCALPARAMETER4FVARBPROC cppgl_glProgramLocalParameter4fvARB;
PFNGLGETPROGRAMENVPARAMETERDVARBPROC cppgl_glGetProgramEnvParameterdvARB;
PFNGLGETPROGRAMENVPARAMETERFVARBPROC cppgl_glGetProgramEnvParameterfvARB;
PFNGLGETPROGRAMLOCALPARAMETERDVARBPROC cppgl_glGetProgramLocalParameterdvARB;
PFNGLGETPROGRAMLOCALPARAMETERFVARBPROC cppgl_glGetProgramLocalParameterfvARB;
PFNGLGETPROGRAMIVARBPROC cppgl_glGetProgramivARB;
PFNGLGETPROGRAMSTRINGARBPROC cppgl_glGetProgramStringARB;
PFNGLISPROGRAMARBPROC cppgl_glIsProgramARB;
PFNGLFRAMEBUFFERPARAMETERIPROC cppgl_glFramebufferParameteri;
PFNGLGETFRAMEBUFFERPARAMETERIVPROC cppgl_glGetFramebufferParameteriv;
PFNGLPROGRAMPARAMETERIARBPROC cppgl_glProgramParameteriARB;
PFNGLFRAMEBUFFERTEXTUREARBPROC cppgl_glFramebufferTextureARB;
PFNGLFRAMEBUFFERTEXTURELAYERARBPROC cppgl_glFramebufferTextureLayerARB;
PFNGLFRAMEBUFFERTEXTUREFACEARBPROC cppgl_glFramebufferTextureFaceARB;
PFNGLGETTEXTURESUBIMAGEPROC cppgl_glGetTextureSubImage;
PFNGLGETCOMPRESSEDTEXTURESUBIMAGEPROC cppgl_glGetCompressedTextureSubImage;
PFNGLUNIFORM1I64ARBPROC cppgl_glUniform1i64ARB;
PFNGLUNIFORM2I64ARBPROC cppgl_glUniform2i64ARB;
PFNGLUNIFORM3I64ARBPROC cppgl_glUniform3i64ARB;
PFNGLUNIFORM4I64ARBPROC cppgl_glUniform4i64ARB;
PFNGLUNIFORM1I64VARBPROC cppgl_glUniform1i64vARB;
PFNGLUNIFORM2I64VARBPROC cppgl_glUniform2i64vARB;
PFNGLUNIFORM3I64VARBPROC cppgl_glUniform3i64vARB;
PFNGLUNIFORM4I64VARBPROC cppgl_glUniform4i64vARB;
PFNGLUNIFORM1UI64ARBPROC cppgl_glUniform1ui64ARB;
PFNGLUNIFORM2UI64ARBPROC cppgl_glUniform2ui64ARB;
PFNGLUNIFORM3UI64ARBPROC cppgl_glUniform3ui64ARB;
PFNGLUNIFORM4UI64ARBPROC cppgl_glUniform4ui64ARB;
PFNGLUNIFORM1UI64VARBPROC cppgl_glUniform1ui64vARB;
PFNGLUNIFORM2UI64VARBPROC cppgl_glUniform2ui64vARB;
PFNGLUNIFORM3UI64VARBPROC cppgl_glUniform3ui64vARB;
PFNGLUNIFORM4UI64VARBPROC cppgl_glUniform4ui64vARB;
PFNGLGETUNIFORMI64VARBPROC cppgl_glGetUniformi64vARB;
PFNGLGETUNIFORMUI64VARBPROC cppgl_glGetUniformui64vARB;
PFNGLGETNUNIFORMI64VARBPROC cppgl_glGetnUniformi64vARB;
PFNGLGETNUNIFORMUI64VARBPROC cppgl_glGetnUniformui64vARB;
PFNGLPROGRAMUNIFORM1I64ARBPROC cppgl_glProgramUniform1i64ARB;
PFNGLPROGRAMUNIFORM2I64ARBPROC cppgl_glProgramUniform2i64ARB;
PFNGLPROGRAMUNIFORM3I64ARBPROC cppgl_glProgramUniform3i64ARB;
PFNGLPROGRAMUNIFORM4I64ARBPROC cppgl_glProgramUniform4i64ARB;
PFNGLPROGRAMUNIFORM1I64VARBPROC cppgl_glProgramUniform1i64vARB;
PFNGLPROGRAMUNIFORM2I64VARBPROC cppgl_glProgramUniform2i64vARB;
PFNGLPROGRAMUNIFORM3I64VARBPROC cppgl_glProgramUniform3i64vARB;
PFNGLPROGRAMUNIFORM4I64VARBPROC cppgl_glProgramUniform4i64vARB;
PFNGLPROGRAMUNIFORM1UI64ARBPROC cppgl_glProgramUniform1ui64ARB;
PFNGLPROGRAMUNIFORM2UI64ARBPROC cppgl_glProgramUniform2ui64ARB;
PFNGLPROGRAMUNIFORM3UI64ARBPROC cppgl_glProgramUniform3ui64ARB;
PFNGLPROGRAMUNIFORM4UI64ARBPROC cppgl_glProgramUniform4ui64ARB;
PFNGLPROGRAMUNIFORM1UI64VARBPROC cppgl_glProgramUniform1ui64vARB;
PFNGLPROGRAMUNIFORM2UI64VARBPROC cppgl_glProgramUniform2ui64vARB;
PFNGLPROGRAMUNIFORM3UI64VARBPROC cppgl_glProgramUniform3ui64vARB;
PFNGLPROGRAMUNIFORM4UI64VARBPROC cppgl_glProgramUniform4ui64vARB;
PFNGLCOLORTABLEPROC cppgl_glColorTable;
PFNGLCOLORTABLEPARAMETERFVPROC cppgl_glColorTableParameterfv;
PFNGLCOLORTABLEPARAMETERIVPROC cppgl_glColorTableParameteriv;
PFNGLCOPYCOLORTABLEPROC cppgl_glCopyColorTable;
PFNGLGETCOLORTABLEPROC cppgl_glGetColorTable;
PFNGLGETCOLORTABLEPARAMETERFVPROC cppgl_glGetColorTableParameterfv;
PFNGLGETCOLORTABLEPARAMETERIVPROC cppgl_glGetColorTableParameteriv;
PFNGLCOLORSUBTABLEPROC cppgl_glColorSubTable;
PFNGLCOPYCOLORSUBTABLEPROC cppgl_glCopyColorSubTable;
PFNGLCONVOLUTIONFILTER1DPROC cppgl_glConvolutionFilter1D;
PFNGLCONVOLUTIONFILTER2DPROC cppgl_glConvolutionFilter2D;
PFNGLCONVOLUTIONPARAMETERFPROC cppgl_glConvolutionParameterf;
PFNGLCONVOLUTIONPARAMETERFVPROC cppgl_glConvolutionParameterfv;
PFNGLCONVOLUTIONPARAMETERIPROC cppgl_glConvolutionParameteri;
PFNGLCONVOLUTIONPARAMETERIVPROC cppgl_glConvolutionParameteriv;
PFNGLCOPYCONVOLUTIONFILTER1DPROC cppgl_glCopyConvolutionFilter1D;
PFNGLCOPYCONVOLUTIONFILTER2DPROC cppgl_glCopyConvolutionFilter2D;
PFNGLGETCONVOLUTIONFILTERPROC cppgl_glGetConvolutionFilter;
PFNGLGETCONVOLUTIONPARAMETERFVPROC cppgl_glGetConvolutionParameterfv;
PFNGLGETCONVOLUTIONPARAMETERIVPROC cppgl_glGetConvolutionParameteriv;
PFNGLGETSEPARABLEFILTERPROC cppgl_glGetSeparableFilter;
PFNGLSEPARABLEFILTER2DPROC cppgl_glSeparableFilter2D;
PFNGLGETHISTOGRAMPROC cppgl_glGetHistogram;
PFNGLGETHISTOGRAMPARAMETERFVPROC cppgl_glGetHistogramParameterfv;
PFNGLGETHISTOGRAMPARAMETERIVPROC cppgl_glGetHistogramParameteriv;
PFNGLGETMINMAXPROC cppgl_glGetMinmax;
PFNGLGETMINMAXPARAMETERFVPROC cppgl_glGetMinmaxParameterfv;
PFNGLGETMINMAXPARAMETERIVPROC cppgl_glGetMinmaxParameteriv;
PFNGLHISTOGRAMPROC cppgl_glHistogram;
PFNGLMINMAXPROC cppgl_glMinmax;
PFNGLRESETHISTOGRAMPROC cppgl_glResetHistogram;
PFNGLRESETMINMAXPROC cppgl_glResetMinmax;
PFNGLMULTIDRAWARRAYSINDIRECTCOUNTARBPROC cppgl_glMultiDrawArraysIndirectCountARB;
PFNGLMULTIDRAWELEMENTSINDIRECTCOUNTARBPROC cppgl_glMultiDrawElementsIndirectCountARB;
PFNGLVERTEXATTRIBDIVISORARBPROC cppgl_glVertexAttribDivisorARB;
PFNGLGETINTERNALFORMATIVPROC cppgl_glGetInternalformativ;
PFNGLGETINTERNALFORMATI64VPROC cppgl_glGetInternalformati64v;
PFNGLINVALIDATETEXSUBIMAGEPROC cppgl_glInvalidateTexSubImage;
PFNGLINVALIDATETEXIMAGEPROC cppgl_glInvalidateTexImage;
PFNGLINVALIDATEBUFFERSUBDATAPROC cppgl_glInvalidateBufferSubData;
PFNGLINVALIDATEBUFFERDATAPROC cppgl_glInvalidateBufferData;
PFNGLINVALIDATEFRAMEBUFFERPROC cppgl_glInvalidateFramebuffer;
PFNGLINVALIDATESUBFRAMEBUFFERPROC cppgl_glInvalidateSubFramebuffer;
PFNGLCURRENTPALETTEMATRIXARBPROC cppgl_glCurrentPaletteMatrixARB;
PFNGLMATRIXINDEXUBVARBPROC cppgl_glMatrixIndexubvARB;
PFNGLMATRIXINDEXUSVARBPROC cppgl_glMatrixIndexusvARB;
PFNGLMATRIXINDEXUIVARBPROC cppgl_glMatrixIndexuivARB;
PFNGLMATRIXINDEXPOINTERARBPROC cppgl_glMatrixIndexPointerARB;
PFNGLBINDBUFFERSBASEPROC cppgl_glBindBuffersBase;
PFNGLBINDBUFFERSRANGEPROC cppgl_glBindBuffersRange;
PFNGLBINDTEXTURESPROC cppgl_glBindTextures;
PFNGLBINDSAMPLERSPROC cppgl_glBindSamplers;
PFNGLBINDIMAGETEXTURESPROC cppgl_glBindImageTextures;
PFNGLBINDVERTEXBUFFERSPROC cppgl_glBindVertexBuffers;
PFNGLMULTIDRAWARRAYSINDIRECTPROC cppgl_glMultiDrawArraysIndirect;
PFNGLMULTIDRAWELEMENTSINDIRECTPROC cppgl_glMultiDrawElementsIndirect;
PFNGLSAMPLECOVERAGEARBPROC cppgl_glSampleCoverageARB;
PFNGLACTIVETEXTUREARBPROC cppgl_glActiveTextureARB;
PFNGLCLIENTACTIVETEXTUREARBPROC cppgl_glClientActiveTextureARB;
PFNGLMULTITEXCOORD1DARBPROC cppgl_glMultiTexCoord1dARB;
PFNGLMULTITEXCOORD1DVARBPROC cppgl_glMultiTexCoord1dvARB;
PFNGLMULTITEXCOORD1FARBPROC cppgl_glMultiTexCoord1fARB;
PFNGLMULTITEXCOORD1FVARBPROC cppgl_glMultiTexCoord1fvARB;
PFNGLMULTITEXCOORD1IARBPROC cppgl_glMultiTexCoord1iARB;
PFNGLMULTITEXCOORD1IVARBPROC cppgl_glMultiTexCoord1ivARB;
PFNGLMULTITEXCOORD1SARBPROC cppgl_glMultiTexCoord1sARB;
PFNGLMULTITEXCOORD1SVARBPROC cppgl_glMultiTexCoord1svARB;
PFNGLMULTITEXCOORD2DARBPROC cppgl_glMultiTexCoord2dARB;
PFNGLMULTITEXCOORD2DVARBPROC cppgl_glMultiTexCoord2dvARB;
PFNGLMULTITEXCOORD2FARBPROC cppgl_glMultiTexCoord2fARB;
PFNGLMULTITEXCOORD2FVARBPROC cppgl_glMultiTexCoord2fvARB;
PFNGLMULTITEXCOORD2IARBPROC cppgl_glMultiTexCoord2iARB;
PFNGLMULTITEXCOORD2IVARBPROC cppgl_glMultiTexCoord2ivARB;
PFNGLMULTITEXCOORD2SARBPROC cppgl_glMultiTexCoord2sARB;
PFNGLMULTITEXCOORD2SVARBPROC cppgl_glMultiTexCoord2svARB;
PFNGLMULTITEXCOORD3DARBPROC cppgl_glMultiTexCoord3dARB;
PFNGLMULTITEXCOORD3DVARBPROC cppgl_glMultiTexCoord3dvARB;
PFNGLMULTITEXCOORD3FARBPROC cppgl_glMultiTexCoord3fARB;
PFNGLMULTITEXCOORD3FVARBPROC cppgl_glMultiTexCoord3fvARB;
PFNGLMULTITEXCOORD3IARBPROC cppgl_glMultiTexCoord3iARB;
PFNGLMULTITEXCOORD3IVARBPROC cppgl_glMultiTexCoord3ivARB;
PFNGLMULTITEXCOORD3SARBPROC cppgl_glMultiTexCoord3sARB;
PFNGLMULTITEXCOORD3SVARBPROC cppgl_glMultiTexCoord3svARB;
PFNGLMULTITEXCOORD4DARBPROC cppgl_glMultiTexCoord4dARB;
PFNGLMULTITEXCOORD4DVARBPROC cppgl_glMultiTexCoord4dvARB;
PFNGLMULTITEXCOORD4FARBPROC cppgl_glMultiTexCoord4fARB;
PFNGLMULTITEXCOORD4FVARBPROC cppgl_glMultiTexCoord4fvARB;
PFNGLMULTITEXCOORD4IARBPROC cppgl_glMultiTexCoord4iARB;
PFNGLMULTITEXCOORD4IVARBPROC cppgl_glMultiTexCoord4ivARB;
PFNGLMULTITEXCOORD4SARBPROC cppgl_glMultiTexCoord4sARB;
PFNGLMULTITEXCOORD4SVARBPROC cppgl_glMultiTexCoord4svARB;
PFNGLGENQUERIESARBPROC cppgl_glGenQueriesARB;
PFNGLDELETEQUERIESARBPROC cppgl_glDeleteQueriesARB;
PFNGLISQUERYARBPROC cppgl_glIsQueryARB;
PFNGLBEGINQUERYARBPROC cppgl_glBeginQueryARB;
PFNGLENDQUERYARBPROC cppgl_glEndQueryARB;
PFNGLGETQUERYIVARBPROC cppgl_glGetQueryivARB;
PFNGLGETQUERYOBJECTIVARBPROC cppgl_glGetQueryObjectivARB;
PFNGLGETQUERYOBJECTUIVARBPROC cppgl_glGetQueryObjectuivARB;
PFNGLMAXSHADERCOMPILERTHREADSARBPROC cppgl_glMaxShaderCompilerThreadsARB;
PFNGLPOINTPARAMETERFARBPROC cppgl_glPointParameterfARB;
PFNGLPOINTPARAMETERFVARBPROC cppgl_glPointParameterfvARB;
PFNGLGETPROGRAMINTERFACEIVPROC cppgl_glGetProgramInterfaceiv;
PFNGLGETPROGRAMRESOURCEINDEXPROC cppgl_glGetProgramResourceIndex;
PFNGLGETPROGRAMRESOURCENAMEPROC cppgl_glGetProgramResourceName;
PFNGLGETPROGRAMRESOURCEIVPROC cppgl_glGetProgramResourceiv;
PFNGLGETPROGRAMRESOURCELOCATIONPROC cppgl_glGetProgramResourceLocation;
PFNGLGETPROGRAMRESOURCELOCATIONINDEXPROC cppgl_glGetProgramResourceLocationIndex;
PFNGLGETGRAPHICSRESETSTATUSARBPROC cppgl_glGetGraphicsResetStatusARB;
PFNGLGETNTEXIMAGEARBPROC cppgl_glGetnTexImageARB;
PFNGLREADNPIXELSARBPROC cppgl_glReadnPixelsARB;
PFNGLGETNCOMPRESSEDTEXIMAGEARBPROC cppgl_glGetnCompressedTexImageARB;
PFNGLGETNUNIFORMFVARBPROC cppgl_glGetnUniformfvARB;
PFNGLGETNUNIFORMIVARBPROC cppgl_glGetnUniformivARB;
PFNGLGETNUNIFORMUIVARBPROC cppgl_glGetnUniformuivARB;
PFNGLGETNUNIFORMDVARBPROC cppgl_glGetnUniformdvARB;
PFNGLGETNMAPDVARBPROC cppgl_glGetnMapdvARB;
PFNGLGETNMAPFVARBPROC cppgl_glGetnMapfvARB;
PFNGLGETNMAPIVARBPROC cppgl_glGetnMapivARB;
PFNGLGETNPIXELMAPFVARBPROC cppgl_glGetnPixelMapfvARB;
PFNGLGETNPIXELMAPUIVARBPROC cppgl_glGetnPixelMapuivARB;
PFNGLGETNPIXELMAPUSVARBPROC cppgl_glGetnPixelMapusvARB;
PFNGLGETNPOLYGONSTIPPLEARBPROC cppgl_glGetnPolygonStippleARB;
PFNGLGETNCOLORTABLEARBPROC cppgl_glGetnColorTableARB;
PFNGLGETNCONVOLUTIONFILTERARBPROC cppgl_glGetnConvolutionFilterARB;
PFNGLGETNSEPARABLEFILTERARBPROC cppgl_glGetnSeparableFilterARB;
PFNGLGETNHISTOGRAMARBPROC cppgl_glGetnHistogramARB;
PFNGLGETNMINMAXARBPROC cppgl_glGetnMinmaxARB;
PFNGLFRAMEBUFFERSAMPLELOCATIONSFVARBPROC cppgl_glFramebufferSampleLocationsfvARB;
PFNGLNAMEDFRAMEBUFFERSAMPLELOCATIONSFVARBPROC cppgl_glNamedFramebufferSampleLocationsfvARB;
PFNGLEVALUATEDEPTHVALUESARBPROC cppgl_glEvaluateDepthValuesARB;
PFNGLMINSAMPLESHADINGARBPROC cppgl_glMinSampleShadingARB;
PFNGLGETACTIVEATOMICCOUNTERBUFFERIVPROC cppgl_glGetActiveAtomicCounterBufferiv;
PFNGLBINDIMAGETEXTUREPROC cppgl_glBindImageTexture;
PFNGLMEMORYBARRIERPROC cppgl_glMemoryBarrier;
PFNGLDELETEOBJECTARBPROC cppgl_glDeleteObjectARB;
PFNGLGETHANDLEARBPROC cppgl_glGetHandleARB;
PFNGLDETACHOBJECTARBPROC cppgl_glDetachObjectARB;
PFNGLCREATESHADEROBJECTARBPROC cppgl_glCreateShaderObjectARB;
PFNGLSHADERSOURCEARBPROC cppgl_glShaderSourceARB;
PFNGLCOMPILESHADERARBPROC cppgl_glCompileShaderARB;
PFNGLCREATEPROGRAMOBJECTARBPROC cppgl_glCreateProgramObjectARB;
PFNGLATTACHOBJECTARBPROC cppgl_glAttachObjectARB;
PFNGLLINKPROGRAMARBPROC cppgl_glLinkProgramARB;
PFNGLUSEPROGRAMOBJECTARBPROC cppgl_glUseProgramObjectARB;
PFNGLVALIDATEPROGRAMARBPROC cppgl_glValidateProgramARB;
PFNGLUNIFORM1FARBPROC cppgl_glUniform1fARB;
PFNGLUNIFORM2FARBPROC cppgl_glUniform2fARB;
PFNGLUNIFORM3FARBPROC cppgl_glUniform3fARB;
PFNGLUNIFORM4FARBPROC cppgl_glUniform4fARB;
PFNGLUNIFORM1IARBPROC cppgl_glUniform1iARB;
PFNGLUNIFORM2IARBPROC cppgl_glUniform2iARB;
PFNGLUNIFORM3IARBPROC cppgl_glUniform3iARB;
PFNGLUNIFORM4IARBPROC cppgl_glUniform4iARB;
PFNGLUNIFORM1FVARBPROC cppgl_glUniform1fvARB;
PFNGLUNIFORM2FVARBPROC cppgl_glUniform2fvARB;
PFNGLUNIFORM3FVARBPROC cppgl_glUniform3fvARB;
PFNGLUNIFORM4FVARBPROC cppgl_glUniform4fvARB;
PFNGLUNIFORM1IVARBPROC cppgl_glUniform1ivARB;
PFNGLUNIFORM2IVARBPROC cppgl_glUniform2ivARB;
PFNGLUNIFORM3IVARBPROC cppgl_glUniform3ivARB;
PFNGLUNIFORM4IVARBPROC cppgl_glUniform4ivARB;
PFNGLUNIFORMMATRIX2FVARBPROC cppgl_glUniformMatrix2fvARB;
PFNGLUNIFORMMATRIX3FVARBPROC cppgl_glUniformMatrix3fvARB;
PFNGLUNIFORMMATRIX4FVARBPROC cppgl_glUniformMatrix4fvARB;
PFNGLGETOBJECTPARAMETERFVARBPROC cppgl_glGetObjectParameterfvARB;
PFNGLGETOBJECTPARAMETERIVARBPROC cppgl_glGetObjectParameterivARB;
PFNGLGETINFOLOGARBPROC cppgl_glGetInfoLogARB;
PFNGLGETATTACHEDOBJECTSARBPROC cppgl_glGetAttachedObjectsARB;
PFNGLGETUNIFORMLOCATIONARBPROC cppgl_glGetUniformLocationARB;
PFNGLGETACTIVEUNIFORMARBPROC cppgl_glGetActiveUniformARB;
PFNGLGETUNIFORMFVARBPROC cppgl_glGetUniformfvARB;
PFNGLGETUNIFORMIVARBPROC cppgl_glGetUniformivARB;
PFNGLGETSHADERSOURCEARBPROC cppgl_glGetShaderSourceARB;
PFNGLSHADERSTORAGEBLOCKBINDINGPROC cppgl_glShaderStorageBlockBinding;
PFNGLNAMEDSTRINGARBPROC cppgl_glNamedStringARB;
PFNGLDELETENAMEDSTRINGARBPROC cppgl_glDeleteNamedStringARB;
PFNGLCOMPILESHADERINCLUDEARBPROC cppgl_glCompileShaderIncludeARB;
PFNGLISNAMEDSTRINGARBPROC cppgl_glIsNamedStringARB;
PFNGLGETNAMEDSTRINGARBPROC cppgl_glGetNamedStringARB;
PFNGLGETNAMEDSTRINGIVARBPROC cppgl_glGetNamedStringivARB;
PFNGLBUFFERPAGECOMMITMENTARBPROC cppgl_glBufferPageCommitmentARB;
PFNGLNAMEDBUFFERPAGECOMMITMENTEXTPROC cppgl_glNamedBufferPageCommitmentEXT;
PFNGLNAMEDBUFFERPAGECOMMITMENTARBPROC cppgl_glNamedBufferPageCommitmentARB;
PFNGLTEXPAGECOMMITMENTARBPROC cppgl_glTexPageCommitmentARB;
PFNGLTEXTUREBARRIERPROC cppgl_glTextureBarrier;
PFNGLTEXBUFFERARBPROC cppgl_glTexBufferARB;
PFNGLTEXBUFFERRANGEPROC cppgl_glTexBufferRange;
PFNGLCOMPRESSEDTEXIMAGE3DARBPROC cppgl_glCompressedTexImage3DARB;
PFNGLCOMPRESSEDTEXIMAGE2DARBPROC cppgl_glCompressedTexImage2DARB;
PFNGLCOMPRESSEDTEXIMAGE1DARBPROC cppgl_glCompressedTexImage1DARB;
PFNGLCOMPRESSEDTEXSUBIMAGE3DARBPROC cppgl_glCompressedTexSubImage3DARB;
PFNGLCOMPRESSEDTEXSUBIMAGE2DARBPROC cppgl_glCompressedTexSubImage2DARB;
PFNGLCOMPRESSEDTEXSUBIMAGE1DARBPROC cppgl_glCompressedTexSubImage1DARB;
PFNGLGETCOMPRESSEDTEXIMAGEARBPROC cppgl_glGetCompressedTexImageARB;
PFNGLTEXSTORAGE1DPROC cppgl_glTexStorage1D;
PFNGLTEXSTORAGE2DPROC cppgl_glTexStorage2D;
PFNGLTEXSTORAGE3DPROC cppgl_glTexStorage3D;
PFNGLTEXSTORAGE2DMULTISAMPLEPROC cppgl_glTexStorage2DMultisample;
PFNGLTEXSTORAGE3DMULTISAMPLEPROC cppgl_glTexStorage3DMultisample;
PFNGLTEXTUREVIEWPROC cppgl_glTextureView;
PFNGLDRAWTRANSFORMFEEDBACKINSTANCEDPROC cppgl_glDrawTransformFeedbackInstanced;
PFNGLDRAWTRANSFORMFEEDBACKSTREAMINSTANCEDPROC cppgl_glDrawTransformFeedbackStreamInstanced;
PFNGLLOADTRANSPOSEMATRIXFARBPROC cppgl_glLoadTransposeMatrixfARB;
PFNGLLOADTRANSPOSEMATRIXDARBPROC cppgl_glLoadTransposeMatrixdARB;
PFNGLMULTTRANSPOSEMATRIXFARBPROC cppgl_glMultTransposeMatrixfARB;
PFNGLMULTTRANSPOSEMATRIXDARBPROC cppgl_glMultTransposeMatrixdARB;
PFNGLBINDVERTEXBUFFERPROC cppgl_glBindVertexBuffer;
PFNGLVERTEXATTRIBFORMATPROC cppgl_glVertexAttribFormat;
PFNGLVERTEXATTRIBIFORMATPROC cppgl_glVertexAttribIFormat;
PFNGLVERTEXATTRIBLFORMATPROC cppgl_glVertexAttribLFormat;
PFNGLVERTEXATTRIBBINDINGPROC cppgl_glVertexAttribBinding;
PFNGLVERTEXBINDINGDIVISORPROC cppgl_glVertexBindingDivisor;
PFNGLWEIGHTBVARBPROC cppgl_glWeightbvARB;
PFNGLWEIGHTSVARBPROC cppgl_glWeightsvARB;
PFNGLWEIGHTIVARBPROC cppgl_glWeightivARB;
PFNGLWEIGHTFVARBPROC cppgl_glWeightfvARB;
PFNGLWEIGHTDVARBPROC cppgl_glWeightdvARB;
PFNGLWEIGHTUBVARBPROC cppgl_glWeightubvARB;
PFNGLWEIGHTUSVARBPROC cppgl_glWeightusvARB;
PFNGLWEIGHTUIVARBPROC cppgl_glWeightuivARB;
PFNGLWEIGHTPOINTERARBPROC cppgl_glWeightPointerARB;
PFNGLVERTEXBLENDARBPROC cppgl_glVertexBlendARB;
PFNGLBINDBUFFERARBPROC cppgl_glBindBufferARB;
PFNGLDELETEBUFFERSARBPROC cppgl_glDeleteBuffersARB;
PFNGLGENBUFFERSARBPROC cppgl_glGenBuffersARB;
PFNGLISBUFFERARBPROC cppgl_glIsBufferARB;
PFNGLBUFFERDATAARBPROC cppgl_glBufferDataARB;
PFNGLBUFFERSUBDATAARBPROC cppgl_glBufferSubDataARB;
PFNGLGETBUFFERSUBDATAARBPROC cppgl_glGetBufferSubDataARB;
PFNGLMAPBUFFERARBPROC cppgl_glMapBufferARB;
PFNGLUNMAPBUFFERARBPROC cppgl_glUnmapBufferARB;
PFNGLGETBUFFERPARAMETERIVARBPROC cppgl_glGetBufferParameterivARB;
PFNGLGETBUFFERPOINTERVARBPROC cppgl_glGetBufferPointervARB;
PFNGLVERTEXATTRIB1DARBPROC cppgl_glVertexAttrib1dARB;
PFNGLVERTEXATTRIB1DVARBPROC cppgl_glVertexAttrib1dvARB;
PFNGLVERTEXATTRIB1FARBPROC cppgl_glVertexAttrib1fARB;
PFNGLVERTEXATTRIB1FVARBPROC cppgl_glVertexAttrib1fvARB;
PFNGLVERTEXATTRIB1SARBPROC cppgl_glVertexAttrib1sARB;
PFNGLVERTEXATTRIB1SVARBPROC cppgl_glVertexAttrib1svARB;
PFNGLVERTEXATTRIB2DARBPROC cppgl_glVertexAttrib2dARB;
PFNGLVERTEXATTRIB2DVARBPROC cppgl_glVertexAttrib2dvARB;
PFNGLVERTEXATTRIB2FARBPROC cppgl_glVertexAttrib2fARB;
PFNGLVERTEXATTRIB2FVARBPROC cppgl_glVertexAttrib2fvARB;
PFNGLVERTEXATTRIB2SARBPROC cppgl_glVertexAttrib2sARB;
PFNGLVERTEXATTRIB2SVARBPROC cppgl_glVertexAttrib2svARB;
PFNGLVERTEXATTRIB3DARBPROC cppgl_glVertexAttrib3dARB;
PFNGLVERTEXATTRIB3DVARBPROC cppgl_glVertexAttrib3dvARB;
PFNGLVERTEXATTRIB3FARBPROC cppgl_glVertexAttrib3fARB;
PFNGLVERTEXATTRIB3FVARBPROC cppgl_glVertexAttrib3fvARB;
PFNGLVERTEXATTRIB3SARBPROC cppgl_glVertexAttrib3sARB;
PFNGLVERTEXATTRIB3SVARBPROC cppgl_glVertexAttrib3svARB;
PFNGLVERTEXATTRIB4NBVARBPROC cppgl_glVertexAttrib4NbvARB;
PFNGLVERTEXATTRIB4NIVARBPROC cppgl_glVertexAttrib4NivARB;
PFNGLVERTEXATTRIB4NSVARBPROC cppgl_glVertexAttrib4NsvARB;
PFNGLVERTEXATTRIB4NUBARBPROC cppgl_glVertexAttrib4NubARB;
PFNGLVERTEXATTRIB4NUBVARBPROC cppgl_glVertexAttrib4NubvARB;
PFNGLVERTEXATTRIB4NUIVARBPROC cppgl_glVertexAttrib4NuivARB;
PFNGLVERTEXATTRIB4NUSVARBPROC cppgl_glVertexAttrib4NusvARB;
PFNGLVERTEXATTRIB4BVARBPROC cppgl_glVertexAttrib4bvARB;
PFNGLVERTEXATTRIB4DARBPROC cppgl_glVertexAttrib4dARB;
PFNGLVERTEXATTRIB4DVARBPROC cppgl_glVertexAttrib4dvARB;
PFNGLVERTEXATTRIB4FARBPROC cppgl_glVertexAttrib4fARB;
PFNGLVERTEXATTRIB4FVARBPROC cppgl_glVertexAttrib4fvARB;
PFNGLVERTEXATTRIB4IVARBPROC cppgl_glVertexAttrib4ivARB;
PFNGLVERTEXATTRIB4SARBPROC cppgl_glVertexAttrib4sARB;
PFNGLVERTEXATTRIB4SVARBPROC cppgl_glVertexAttrib4svARB;
PFNGLVERTEXATTRIB4UBVARBPROC cppgl_glVertexAttrib4ubvARB;
PFNGLVERTEXATTRIB4UIVARBPROC cppgl_glVertexAttrib4uivARB;
PFNGLVERTEXATTRIB4USVARBPROC cppgl_glVertexAttrib4usvARB;
PFNGLVERTEXATTRIBPOINTERARBPROC cppgl_glVertexAttribPointerARB;
PFNGLENABLEVERTEXATTRIBARRAYARBPROC cppgl_glEnableVertexAttribArrayARB;
PFNGLDISABLEVERTEXATTRIBARRAYARBPROC cppgl_glDisableVertexAttribArrayARB;
PFNGLGETVERTEXATTRIBDVARBPROC cppgl_glGetVertexAttribdvARB;
PFNGLGETVERTEXATTRIBFVARBPROC cppgl_glGetVertexAttribfvARB;
PFNGLGETVERTEXATTRIBIVARBPROC cppgl_glGetVertexAttribivARB;
PFNGLGETVERTEXATTRIBPOINTERVARBPROC cppgl_glGetVertexAttribPointervARB;
PFNGLBINDATTRIBLOCATIONARBPROC cppgl_glBindAttribLocationARB;
PFNGLGETACTIVEATTRIBARBPROC cppgl_glGetActiveAttribARB;
PFNGLGETATTRIBLOCATIONARBPROC cppgl_glGetAttribLocationARB;
PFNGLWINDOWPOS2DARBPROC cppgl_glWindowPos2dARB;
PFNGLWINDOWPOS2DVARBPROC cppgl_glWindowPos2dvARB;
PFNGLWINDOWPOS2FARBPROC cppgl_glWindowPos2fARB;
PFNGLWINDOWPOS2FVARBPROC cppgl_glWindowPos2fvARB;
PFNGLWINDOWPOS2IARBPROC cppgl_glWindowPos2iARB;
PFNGLWINDOWPOS2IVARBPROC cppgl_glWindowPos2ivARB;
PFNGLWINDOWPOS2SARBPROC cppgl_glWindowPos2sARB;
PFNGLWINDOWPOS2SVARBPROC cppgl_glWindowPos2svARB;
PFNGLWINDOWPOS3DARBPROC cppgl_glWindowPos3dARB;
PFNGLWINDOWPOS3DVARBPROC cppgl_glWindowPos3dvARB;
PFNGLWINDOWPOS3FARBPROC cppgl_glWindowPos3fARB;
PFNGLWINDOWPOS3FVARBPROC cppgl_glWindowPos3fvARB;
PFNGLWINDOWPOS3IARBPROC cppgl_glWindowPos3iARB;
PFNGLWINDOWPOS3IVARBPROC cppgl_glWindowPos3ivARB;
PFNGLWINDOWPOS3SARBPROC cppgl_glWindowPos3sARB;
PFNGLWINDOWPOS3SVARBPROC cppgl_glWindowPos3svARB;
PFNGLDRAWBUFFERSATIPROC cppgl_glDrawBuffersATI;
PFNGLELEMENTPOINTERATIPROC cppgl_glElementPointerATI;
PFNGLDRAWELEMENTARRAYATIPROC cppgl_glDrawElementArrayATI;
PFNGLDRAWRANGEELEMENTARRAYATIPROC cppgl_glDrawRangeElementArrayATI;
PFNGLTEXBUMPPARAMETERIVATIPROC cppgl_glTexBumpParameterivATI;
PFNGLTEXBUMPPARAMETERFVATIPROC cppgl_glTexBumpParameterfvATI;
PFNGLGETTEXBUMPPARAMETERIVATIPROC cppgl_glGetTexBumpParameterivATI;
PFNGLGETTEXBUMPPARAMETERFVATIPROC cppgl_glGetTexBumpParameterfvATI;
PFNGLGENFRAGMENTSHADERSATIPROC cppgl_glGenFragmentShadersATI;
PFNGLBINDFRAGMENTSHADERATIPROC cppgl_glBindFragmentShaderATI;
PFNGLDELETEFRAGMENTSHADERATIPROC cppgl_glDeleteFragmentShaderATI;
PFNGLBEGINFRAGMENTSHADERATIPROC cppgl_glBeginFragmentShaderATI;
PFNGLENDFRAGMENTSHADERATIPROC cppgl_glEndFragmentShaderATI;
PFNGLPASSTEXCOORDATIPROC cppgl_glPassTexCoordATI;
PFNGLSAMPLEMAPATIPROC cppgl_glSampleMapATI;
PFNGLCOLORFRAGMENTOP1ATIPROC cppgl_glColorFragmentOp1ATI;
PFNGLCOLORFRAGMENTOP2ATIPROC cppgl_glColorFragmentOp2ATI;
PFNGLCOLORFRAGMENTOP3ATIPROC cppgl_glColorFragmentOp3ATI;
PFNGLALPHAFRAGMENTOP1ATIPROC cppgl_glAlphaFragmentOp1ATI;
PFNGLALPHAFRAGMENTOP2ATIPROC cppgl_glAlphaFragmentOp2ATI;
PFNGLALPHAFRAGMENTOP3ATIPROC cppgl_glAlphaFragmentOp3ATI;
PFNGLSETFRAGMENTSHADERCONSTANTATIPROC cppgl_glSetFragmentShaderConstantATI;
PFNGLMAPOBJECTBUFFERATIPROC cppgl_glMapObjectBufferATI;
PFNGLUNMAPOBJECTBUFFERATIPROC cppgl_glUnmapObjectBufferATI;
PFNGLPNTRIANGLESIATIPROC cppgl_glPNTrianglesiATI;
PFNGLPNTRIANGLESFATIPROC cppgl_glPNTrianglesfATI;
PFNGLSTENCILOPSEPARATEATIPROC cppgl_glStencilOpSeparateATI;
PFNGLSTENCILFUNCSEPARATEATIPROC cppgl_glStencilFuncSeparateATI;
PFNGLNEWOBJECTBUFFERATIPROC cppgl_glNewObjectBufferATI;
PFNGLISOBJECTBUFFERATIPROC cppgl_glIsObjectBufferATI;
PFNGLUPDATEOBJECTBUFFERATIPROC cppgl_glUpdateObjectBufferATI;
PFNGLGETOBJECTBUFFERFVATIPROC cppgl_glGetObjectBufferfvATI;
PFNGLGETOBJECTBUFFERIVATIPROC cppgl_glGetObjectBufferivATI;
PFNGLFREEOBJECTBUFFERATIPROC cppgl_glFreeObjectBufferATI;
PFNGLARRAYOBJECTATIPROC cppgl_glArrayObjectATI;
PFNGLGETARRAYOBJECTFVATIPROC cppgl_glGetArrayObjectfvATI;
PFNGLGETARRAYOBJECTIVATIPROC cppgl_glGetArrayObjectivATI;
PFNGLVARIANTARRAYOBJECTATIPROC cppgl_glVariantArrayObjectATI;
PFNGLGETVARIANTARRAYOBJECTFVATIPROC cppgl_glGetVariantArrayObjectfvATI;
PFNGLGETVARIANTARRAYOBJECTIVATIPROC cppgl_glGetVariantArrayObjectivATI;
PFNGLVERTEXATTRIBARRAYOBJECTATIPROC cppgl_glVertexAttribArrayObjectATI;
PFNGLGETVERTEXATTRIBARRAYOBJECTFVATIPROC cppgl_glGetVertexAttribArrayObjectfvATI;
PFNGLGETVERTEXATTRIBARRAYOBJECTIVATIPROC cppgl_glGetVertexAttribArrayObjectivATI;
PFNGLVERTEXSTREAM1SATIPROC cppgl_glVertexStream1sATI;
PFNGLVERTEXSTREAM1SVATIPROC cppgl_glVertexStream1svATI;
PFNGLVERTEXSTREAM1IATIPROC cppgl_glVertexStream1iATI;
PFNGLVERTEXSTREAM1IVATIPROC cppgl_glVertexStream1ivATI;
PFNGLVERTEXSTREAM1FATIPROC cppgl_glVertexStream1fATI;
PFNGLVERTEXSTREAM1FVATIPROC cppgl_glVertexStream1fvATI;
PFNGLVERTEXSTREAM1DATIPROC cppgl_glVertexStream1dATI;
PFNGLVERTEXSTREAM1DVATIPROC cppgl_glVertexStream1dvATI;
PFNGLVERTEXSTREAM2SATIPROC cppgl_glVertexStream2sATI;
PFNGLVERTEXSTREAM2SVATIPROC cppgl_glVertexStream2svATI;
PFNGLVERTEXSTREAM2IATIPROC cppgl_glVertexStream2iATI;
PFNGLVERTEXSTREAM2IVATIPROC cppgl_glVertexStream2ivATI;
PFNGLVERTEXSTREAM2FATIPROC cppgl_glVertexStream2fATI;
PFNGLVERTEXSTREAM2FVATIPROC cppgl_glVertexStream2fvATI;
PFNGLVERTEXSTREAM2DATIPROC cppgl_glVertexStream2dATI;
PFNGLVERTEXSTREAM2DVATIPROC cppgl_glVertexStream2dvATI;
PFNGLVERTEXSTREAM3SATIPROC cppgl_glVertexStream3sATI;
PFNGLVERTEXSTREAM3SVATIPROC cppgl_glVertexStream3svATI;
PFNGLVERTEXSTREAM3IATIPROC cppgl_glVertexStream3iATI;
PFNGLVERTEXSTREAM3IVATIPROC cppgl_glVertexStream3ivATI;
PFNGLVERTEXSTREAM3FATIPROC cppgl_glVertexStream3fATI;
PFNGLVERTEXSTREAM3FVATIPROC cppgl_glVertexStream3fvATI;
PFNGLVERTEXSTREAM3DATIPROC cppgl_glVertexStream3dATI;
PFNGLVERTEXSTREAM3DVATIPROC cppgl_glVertexStream3dvATI;
PFNGLVERTEXSTREAM4SATIPROC cppgl_glVertexStream4sATI;
PFNGLVERTEXSTREAM4SVATIPROC cppgl_glVertexStream4svATI;
PFNGLVERTEXSTREAM4IATIPROC cppgl_glVertexStream4iATI;
PFNGLVERTEXSTREAM4IVATIPROC cppgl_glVertexStream4ivATI;
PFNGLVERTEXSTREAM4FATIPROC cppgl_glVertexStream4fATI;
PFNGLVERTEXSTREAM4FVATIPROC cppgl_glVertexStream4fvATI;
PFNGLVERTEXSTREAM4DATIPROC cppgl_glVertexStream4dATI;
PFNGLVERTEXSTREAM4DVATIPROC cppgl_glVertexStream4dvATI;
PFNGLNORMALSTREAM3BATIPROC cppgl_glNormalStream3bATI;
PFNGLNORMALSTREAM3BVATIPROC cppgl_glNormalStream3bvATI;
PFNGLNORMALSTREAM3SATIPROC cppgl_glNormalStream3sATI;
PFNGLNORMALSTREAM3SVATIPROC cppgl_glNormalStream3svATI;
PFNGLNORMALSTREAM3IATIPROC cppgl_glNormalStream3iATI;
PFNGLNORMALSTREAM3IVATIPROC cppgl_glNormalStream3ivATI;
PFNGLNORMALSTREAM3FATIPROC cppgl_glNormalStream3fATI;
PFNGLNORMALSTREAM3FVATIPROC cppgl_glNormalStream3fvATI;
PFNGLNORMALSTREAM3DATIPROC cppgl_glNormalStream3dATI;
PFNGLNORMALSTREAM3DVATIPROC cppgl_glNormalStream3dvATI;
PFNGLCLIENTACTIVEVERTEXSTREAMATIPROC cppgl_glClientActiveVertexStreamATI;
PFNGLVERTEXBLENDENVIATIPROC cppgl_glVertexBlendEnviATI;
PFNGLVERTEXBLENDENVFATIPROC cppgl_glVertexBlendEnvfATI;
PFNGLUNIFORMBUFFEREXTPROC cppgl_glUniformBufferEXT;
PFNGLGETUNIFORMBUFFERSIZEEXTPROC cppgl_glGetUniformBufferSizeEXT;
PFNGLGETUNIFORMOFFSETEXTPROC cppgl_glGetUniformOffsetEXT;
PFNGLBLENDCOLOREXTPROC cppgl_glBlendColorEXT;
PFNGLBLENDEQUATIONSEPARATEEXTPROC cppgl_glBlendEquationSeparateEXT;
PFNGLBLENDFUNCSEPARATEEXTPROC cppgl_glBlendFuncSeparateEXT;
PFNGLBLENDEQUATIONEXTPROC cppgl_glBlendEquationEXT;
PFNGLCOLORSUBTABLEEXTPROC cppgl_glColorSubTableEXT;
PFNGLCOPYCOLORSUBTABLEEXTPROC cppgl_glCopyColorSubTableEXT;
PFNGLLOCKARRAYSEXTPROC cppgl_glLockArraysEXT;
PFNGLUNLOCKARRAYSEXTPROC cppgl_glUnlockArraysEXT;
PFNGLCONVOLUTIONFILTER1DEXTPROC cppgl_glConvolutionFilter1DEXT;
PFNGLCONVOLUTIONFILTER2DEXTPROC cppgl_glConvolutionFilter2DEXT;
PFNGLCONVOLUTIONPARAMETERFEXTPROC cppgl_glConvolutionParameterfEXT;
PFNGLCONVOLUTIONPARAMETERFVEXTPROC cppgl_glConvolutionParameterfvEXT;
PFNGLCONVOLUTIONPARAMETERIEXTPROC cppgl_glConvolutionParameteriEXT;
PFNGLCONVOLUTIONPARAMETERIVEXTPROC cppgl_glConvolutionParameterivEXT;
PFNGLCOPYCONVOLUTIONFILTER1DEXTPROC cppgl_glCopyConvolutionFilter1DEXT;
PFNGLCOPYCONVOLUTIONFILTER2DEXTPROC cppgl_glCopyConvolutionFilter2DEXT;
PFNGLGETCONVOLUTIONFILTEREXTPROC cppgl_glGetConvolutionFilterEXT;
PFNGLGETCONVOLUTIONPARAMETERFVEXTPROC cppgl_glGetConvolutionParameterfvEXT;
PFNGLGETCONVOLUTIONPARAMETERIVEXTPROC cppgl_glGetConvolutionParameterivEXT;
PFNGLGETSEPARABLEFILTEREXTPROC cppgl_glGetSeparableFilterEXT;
PFNGLSEPARABLEFILTER2DEXTPROC cppgl_glSeparableFilter2DEXT;
PFNGLTANGENT3BEXTPROC cppgl_glTangent3bEXT;
PFNGLTANGENT3BVEXTPROC cppgl_glTangent3bvEXT;
PFNGLTANGENT3DEXTPROC cppgl_glTangent3dEXT;
PFNGLTANGENT3DVEXTPROC cppgl_glTangent3dvEXT;
PFNGLTANGENT3FEXTPROC cppgl_glTangent3fEXT;
PFNGLTANGENT3FVEXTPROC cppgl_glTangent3fvEXT;
PFNGLTANGENT3IEXTPROC cppgl_glTangent3iEXT;
PFNGLTANGENT3IVEXTPROC cppgl_glTangent3ivEXT;
PFNGLTANGENT3SEXTPROC cppgl_glTangent3sEXT;
PFNGLTANGENT3SVEXTPROC cppgl_glTangent3svEXT;
PFNGLBINORMAL3BEXTPROC cppgl_glBinormal3bEXT;
PFNGLBINORMAL3BVEXTPROC cppgl_glBinormal3bvEXT;
PFNGLBINORMAL3DEXTPROC cppgl_glBinormal3dEXT;
PFNGLBINORMAL3DVEXTPROC cppgl_glBinormal3dvEXT;
PFNGLBINORMAL3FEXTPROC cppgl_glBinormal3fEXT;
PFNGLBINORMAL3FVEXTPROC cppgl_glBinormal3fvEXT;
PFNGLBINORMAL3IEXTPROC cppgl_glBinormal3iEXT;
PFNGLBINORMAL3IVEXTPROC cppgl_glBinormal3ivEXT;
PFNGLBINORMAL3SEXTPROC cppgl_glBinormal3sEXT;
PFNGLBINORMAL3SVEXTPROC cppgl_glBinormal3svEXT;
PFNGLTANGENTPOINTEREXTPROC cppgl_glTangentPointerEXT;
PFNGLBINORMALPOINTEREXTPROC cppgl_glBinormalPointerEXT;
PFNGLCOPYTEXIMAGE1DEXTPROC cppgl_glCopyTexImage1DEXT;
PFNGLCOPYTEXIMAGE2DEXTPROC cppgl_glCopyTexImage2DEXT;
PFNGLCOPYTEXSUBIMAGE1DEXTPROC cppgl_glCopyTexSubImage1DEXT;
PFNGLCOPYTEXSUBIMAGE2DEXTPROC cppgl_glCopyTexSubImage2DEXT;
PFNGLCOPYTEXSUBIMAGE3DEXTPROC cppgl_glCopyTexSubImage3DEXT;
PFNGLCULLPARAMETERDVEXTPROC cppgl_glCullParameterdvEXT;
PFNGLCULLPARAMETERFVEXTPROC cppgl_glCullParameterfvEXT;
PFNGLLABELOBJECTEXTPROC cppgl_glLabelObjectEXT;
PFNGLGETOBJECTLABELEXTPROC cppgl_glGetObjectLabelEXT;
PFNGLINSERTEVENTMARKEREXTPROC cppgl_glInsertEventMarkerEXT;
PFNGLPUSHGROUPMARKEREXTPROC cppgl_glPushGroupMarkerEXT;
PFNGLPOPGROUPMARKEREXTPROC cppgl_glPopGroupMarkerEXT;
PFNGLDEPTHBOUNDSEXTPROC cppgl_glDepthBoundsEXT;
PFNGLMATRIXLOADFEXTPROC cppgl_glMatrixLoadfEXT;
PFNGLMATRIXLOADDEXTPROC cppgl_glMatrixLoaddEXT;
PFNGLMATRIXMULTFEXTPROC cppgl_glMatrixMultfEXT;
PFNGLMATRIXMULTDEXTPROC cppgl_glMatrixMultdEXT;
PFNGLMATRIXLOADIDENTITYEXTPROC cppgl_glMatrixLoadIdentityEXT;
PFNGLMATRIXROTATEFEXTPROC cppgl_glMatrixRotatefEXT;
PFNGLMATRIXROTATEDEXTPROC cppgl_glMatrixRotatedEXT;
PFNGLMATRIXSCALEFEXTPROC cppgl_glMatrixScalefEXT;
PFNGLMATRIXSCALEDEXTPROC cppgl_glMatrixScaledEXT;
PFNGLMATRIXTRANSLATEFEXTPROC cppgl_glMatrixTranslatefEXT;
PFNGLMATRIXTRANSLATEDEXTPROC cppgl_glMatrixTranslatedEXT;
PFNGLMATRIXFRUSTUMEXTPROC cppgl_glMatrixFrustumEXT;
PFNGLMATRIXORTHOEXTPROC cppgl_glMatrixOrthoEXT;
PFNGLMATRIXPOPEXTPROC cppgl_glMatrixPopEXT;
PFNGLMATRIXPUSHEXTPROC cppgl_glMatrixPushEXT;
PFNGLCLIENTATTRIBDEFAULTEXTPROC cppgl_glClientAttribDefaultEXT;
PFNGLPUSHCLIENTATTRIBDEFAULTEXTPROC cppgl_glPushClientAttribDefaultEXT;
PFNGLTEXTUREPARAMETERFEXTPROC cppgl_glTextureParameterfEXT;
PFNGLTEXTUREPARAMETERFVEXTPROC cppgl_glTextureParameterfvEXT;
PFNGLTEXTUREPARAMETERIEXTPROC cppgl_glTextureParameteriEXT;
PFNGLTEXTUREPARAMETERIVEXTPROC cppgl_glTextureParameterivEXT;
PFNGLTEXTUREIMAGE1DEXTPROC cppgl_glTextureImage1DEXT;
PFNGLTEXTUREIMAGE2DEXTPROC cppgl_glTextureImage2DEXT;
PFNGLTEXTURESUBIMAGE1DEXTPROC cppgl_glTextureSubImage1DEXT;
PFNGLTEXTURESUBIMAGE2DEXTPROC cppgl_glTextureSubImage2DEXT;
PFNGLCOPYTEXTUREIMAGE1DEXTPROC cppgl_glCopyTextureImage1DEXT;
PFNGLCOPYTEXTUREIMAGE2DEXTPROC cppgl_glCopyTextureImage2DEXT;
PFNGLCOPYTEXTURESUBIMAGE1DEXTPROC cppgl_glCopyTextureSubImage1DEXT;
PFNGLCOPYTEXTURESUBIMAGE2DEXTPROC cppgl_glCopyTextureSubImage2DEXT;
PFNGLGETTEXTUREIMAGEEXTPROC cppgl_glGetTextureImageEXT;
PFNGLGETTEXTUREPARAMETERFVEXTPROC cppgl_glGetTextureParameterfvEXT;
PFNGLGETTEXTUREPARAMETERIVEXTPROC cppgl_glGetTextureParameterivEXT;
PFNGLGETTEXTURELEVELPARAMETERFVEXTPROC cppgl_glGetTextureLevelParameterfvEXT;
PFNGLGETTEXTURELEVELPARAMETERIVEXTPROC cppgl_glGetTextureLevelParameterivEXT;
PFNGLTEXTUREIMAGE3DEXTPROC cppgl_glTextureImage3DEXT;
PFNGLTEXTURESUBIMAGE3DEXTPROC cppgl_glTextureSubImage3DEXT;
PFNGLCOPYTEXTURESUBIMAGE3DEXTPROC cppgl_glCopyTextureSubImage3DEXT;
PFNGLBINDMULTITEXTUREEXTPROC cppgl_glBindMultiTextureEXT;
PFNGLMULTITEXCOORDPOINTEREXTPROC cppgl_glMultiTexCoordPointerEXT;
PFNGLMULTITEXENVFEXTPROC cppgl_glMultiTexEnvfEXT;
PFNGLMULTITEXENVFVEXTPROC cppgl_glMultiTexEnvfvEXT;
PFNGLMULTITEXENVIEXTPROC cppgl_glMultiTexEnviEXT;
PFNGLMULTITEXENVIVEXTPROC cppgl_glMultiTexEnvivEXT;
PFNGLMULTITEXGENDEXTPROC cppgl_glMultiTexGendEXT;
PFNGLMULTITEXGENDVEXTPROC cppgl_glMultiTexGendvEXT;
PFNGLMULTITEXGENFEXTPROC cppgl_glMultiTexGenfEXT;
PFNGLMULTITEXGENFVEXTPROC cppgl_glMultiTexGenfvEXT;
PFNGLMULTITEXGENIEXTPROC cppgl_glMultiTexGeniEXT;
PFNGLMULTITEXGENIVEXTPROC cppgl_glMultiTexGenivEXT;
PFNGLGETMULTITEXENVFVEXTPROC cppgl_glGetMultiTexEnvfvEXT;
PFNGLGETMULTITEXENVIVEXTPROC cppgl_glGetMultiTexEnvivEXT;
PFNGLGETMULTITEXGENDVEXTPROC cppgl_glGetMultiTexGendvEXT;
PFNGLGETMULTITEXGENFVEXTPROC cppgl_glGetMultiTexGenfvEXT;
PFNGLGETMULTITEXGENIVEXTPROC cppgl_glGetMultiTexGenivEXT;
PFNGLMULTITEXPARAMETERIEXTPROC cppgl_glMultiTexParameteriEXT;
PFNGLMULTITEXPARAMETERIVEXTPROC cppgl_glMultiTexParameterivEXT;
PFNGLMULTITEXPARAMETERFEXTPROC cppgl_glMultiTexParameterfEXT;
PFNGLMULTITEXPARAMETERFVEXTPROC cppgl_glMultiTexParameterfvEXT;
PFNGLMULTITEXIMAGE1DEXTPROC cppgl_glMultiTexImage1DEXT;
PFNGLMULTITEXIMAGE2DEXTPROC cppgl_glMultiTexImage2DEXT;
PFNGLMULTITEXSUBIMAGE1DEXTPROC cppgl_glMultiTexSubImage1DEXT;
PFNGLMULTITEXSUBIMAGE2DEXTPROC cppgl_glMultiTexSubImage2DEXT;
PFNGLCOPYMULTITEXIMAGE1DEXTPROC cppgl_glCopyMultiTexImage1DEXT;
PFNGLCOPYMULTITEXIMAGE2DEXTPROC cppgl_glCopyMultiTexImage2DEXT;
PFNGLCOPYMULTITEXSUBIMAGE1DEXTPROC cppgl_glCopyMultiTexSubImage1DEXT;
PFNGLCOPYMULTITEXSUBIMAGE2DEXTPROC cppgl_glCopyMultiTexSubImage2DEXT;
PFNGLGETMULTITEXIMAGEEXTPROC cppgl_glGetMultiTexImageEXT;
PFNGLGETMULTITEXPARAMETERFVEXTPROC cppgl_glGetMultiTexParameterfvEXT;
PFNGLGETMULTITEXPARAMETERIVEXTPROC cppgl_glGetMultiTexParameterivEXT;
PFNGLGETMULTITEXLEVELPARAMETERFVEXTPROC cppgl_glGetMultiTexLevelParameterfvEXT;
PFNGLGETMULTITEXLEVELPARAMETERIVEXTPROC cppgl_glGetMultiTexLevelParameterivEXT;
PFNGLMULTITEXIMAGE3DEXTPROC cppgl_glMultiTexImage3DEXT;
PFNGLMULTITEXSUBIMAGE3DEXTPROC cppgl_glMultiTexSubImage3DEXT;
PFNGLCOPYMULTITEXSUBIMAGE3DEXTPROC cppgl_glCopyMultiTexSubImage3DEXT;
PFNGLENABLECLIENTSTATEINDEXEDEXTPROC cppgl_glEnableClientStateIndexedEXT;
PFNGLDISABLECLIENTSTATEINDEXEDEXTPROC cppgl_glDisableClientStateIndexedEXT;
PFNGLGETFLOATINDEXEDVEXTPROC cppgl_glGetFloatIndexedvEXT;
PFNGLGETDOUBLEINDEXEDVEXTPROC cppgl_glGetDoubleIndexedvEXT;
PFNGLGETPOINTERINDEXEDVEXTPROC cppgl_glGetPointerIndexedvEXT;
PFNGLENABLEINDEXEDEXTPROC cppgl_glEnableIndexedEXT;
PFNGLDISABLEINDEXEDEXTPROC cppgl_glDisableIndexedEXT;
PFNGLISENABLEDINDEXEDEXTPROC cppgl_glIsEnabledIndexedEXT;
PFNGLGETINTEGERINDEXEDVEXTPROC cppgl_glGetIntegerIndexedvEXT;
PFNGLGETBOOLEANINDEXEDVEXTPROC cppgl_glGetBooleanIndexedvEXT;
PFNGLCOMPRESSEDTEXTUREIMAGE3DEXTPROC cppgl_glCompressedTextureImage3DEXT;
PFNGLCOMPRESSEDTEXTUREIMAGE2DEXTPROC cppgl_glCompressedTextureImage2DEXT;
PFNGLCOMPRESSEDTEXTUREIMAGE1DEXTPROC cppgl_glCompressedTextureImage1DEXT;
PFNGLCOMPRESSEDTEXTURESUBIMAGE3DEXTPROC cppgl_glCompressedTextureSubImage3DEXT;
PFNGLCOMPRESSEDTEXTURESUBIMAGE2DEXTPROC cppgl_glCompressedTextureSubImage2DEXT;
PFNGLCOMPRESSEDTEXTURESUBIMAGE1DEXTPROC cppgl_glCompressedTextureSubImage1DEXT;
PFNGLGETCOMPRESSEDTEXTUREIMAGEEXTPROC cppgl_glGetCompressedTextureImageEXT;
PFNGLCOMPRESSEDMULTITEXIMAGE3DEXTPROC cppgl_glCompressedMultiTexImage3DEXT;
PFNGLCOMPRESSEDMULTITEXIMAGE2DEXTPROC cppgl_glCompressedMultiTexImage2DEXT;
PFNGLCOMPRESSEDMULTITEXIMAGE1DEXTPROC cppgl_glCompressedMultiTexImage1DEXT;
PFNGLCOMPRESSEDMULTITEXSUBIMAGE3DEXTPROC cppgl_glCompressedMultiTexSubImage3DEXT;
PFNGLCOMPRESSEDMULTITEXSUBIMAGE2DEXTPROC cppgl_glCompressedMultiTexSubImage2DEXT;
PFNGLCOMPRESSEDMULTITEXSUBIMAGE1DEXTPROC cppgl_glCompressedMultiTexSubImage1DEXT;
PFNGLGETCOMPRESSEDMULTITEXIMAGEEXTPROC cppgl_glGetCompressedMultiTexImageEXT;
PFNGLMATRIXLOADTRANSPOSEFEXTPROC cppgl_glMatrixLoadTransposefEXT;
PFNGLMATRIXLOADTRANSPOSEDEXTPROC cppgl_glMatrixLoadTransposedEXT;
PFNGLMATRIXMULTTRANSPOSEFEXTPROC cppgl_glMatrixMultTransposefEXT;
PFNGLMATRIXMULTTRANSPOSEDEXTPROC cppgl_glMatrixMultTransposedEXT;
PFNGLNAMEDBUFFERDATAEXTPROC cppgl_glNamedBufferDataEXT;
PFNGLNAMEDBUFFERSUBDATAEXTPROC cppgl_glNamedBufferSubDataEXT;
PFNGLMAPNAMEDBUFFEREXTPROC cppgl_glMapNamedBufferEXT;
PFNGLUNMAPNAMEDBUFFEREXTPROC cppgl_glUnmapNamedBufferEXT;
PFNGLGETNAMEDBUFFERPARAMETERIVEXTPROC cppgl_glGetNamedBufferParameterivEXT;
PFNGLGETNAMEDBUFFERPOINTERVEXTPROC cppgl_glGetNamedBufferPointervEXT;
PFNGLGETNAMEDBUFFERSUBDATAEXTPROC cppgl_glGetNamedBufferSubDataEXT;
PFNGLPROGRAMUNIFORM1FEXTPROC cppgl_glProgramUniform1fEXT;
PFNGLPROGRAMUNIFORM2FEXTPROC cppgl_glProgramUniform2fEXT;
PFNGLPROGRAMUNIFORM3FEXTPROC cppgl_glProgramUniform3fEXT;
PFNGLPROGRAMUNIFORM4FEXTPROC cppgl_glProgramUniform4fEXT;
PFNGLPROGRAMUNIFORM1IEXTPROC cppgl_glProgramUniform1iEXT;
PFNGLPROGRAMUNIFORM2IEXTPROC cppgl_glProgramUniform2iEXT;
PFNGLPROGRAMUNIFORM3IEXTPROC cppgl_glProgramUniform3iEXT;
PFNGLPROGRAMUNIFORM4IEXTPROC cppgl_glProgramUniform4iEXT;
PFNGLPROGRAMUNIFORM1FVEXTPROC cppgl_glProgramUniform1fvEXT;
PFNGLPROGRAMUNIFORM2FVEXTPROC cppgl_glProgramUniform2fvEXT;
PFNGLPROGRAMUNIFORM3FVEXTPROC cppgl_glProgramUniform3fvEXT;
PFNGLPROGRAMUNIFORM4FVEXTPROC cppgl_glProgramUniform4fvEXT;
PFNGLPROGRAMUNIFORM1IVEXTPROC cppgl_glProgramUniform1ivEXT;
PFNGLPROGRAMUNIFORM2IVEXTPROC cppgl_glProgramUniform2ivEXT;
PFNGLPROGRAMUNIFORM3IVEXTPROC cppgl_glProgramUniform3ivEXT;
PFNGLPROGRAMUNIFORM4IVEXTPROC cppgl_glProgramUniform4ivEXT;
PFNGLPROGRAMUNIFORMMATRIX2FVEXTPROC cppgl_glProgramUniformMatrix2fvEXT;
PFNGLPROGRAMUNIFORMMATRIX3FVEXTPROC cppgl_glProgramUniformMatrix3fvEXT;
PFNGLPROGRAMUNIFORMMATRIX4FVEXTPROC cppgl_glProgramUniformMatrix4fvEXT;
PFNGLPROGRAMUNIFORMMATRIX2X3FVEXTPROC cppgl_glProgramUniformMatrix2x3fvEXT;
PFNGLPROGRAMUNIFORMMATRIX3X2FVEXTPROC cppgl_glProgramUniformMatrix3x2fvEXT;
PFNGLPROGRAMUNIFORMMATRIX2X4FVEXTPROC cppgl_glProgramUniformMatrix2x4fvEXT;
PFNGLPROGRAMUNIFORMMATRIX4X2FVEXTPROC cppgl_glProgramUniformMatrix4x2fvEXT;
PFNGLPROGRAMUNIFORMMATRIX3X4FVEXTPROC cppgl_glProgramUniformMatrix3x4fvEXT;
PFNGLPROGRAMUNIFORMMATRIX4X3FVEXTPROC cppgl_glProgramUniformMatrix4x3fvEXT;
PFNGLTEXTUREBUFFEREXTPROC cppgl_glTextureBufferEXT;
PFNGLMULTITEXBUFFEREXTPROC cppgl_glMultiTexBufferEXT;
PFNGLTEXTUREPARAMETERIIVEXTPROC cppgl_glTextureParameterIivEXT;
PFNGLTEXTUREPARAMETERIUIVEXTPROC cppgl_glTextureParameterIuivEXT;
PFNGLGETTEXTUREPARAMETERIIVEXTPROC cppgl_glGetTextureParameterIivEXT;
PFNGLGETTEXTUREPARAMETERIUIVEXTPROC cppgl_glGetTextureParameterIuivEXT;
PFNGLMULTITEXPARAMETERIIVEXTPROC cppgl_glMultiTexParameterIivEXT;
PFNGLMULTITEXPARAMETERIUIVEXTPROC cppgl_glMultiTexParameterIuivEXT;
PFNGLGETMULTITEXPARAMETERIIVEXTPROC cppgl_glGetMultiTexParameterIivEXT;
PFNGLGETMULTITEXPARAMETERIUIVEXTPROC cppgl_glGetMultiTexParameterIuivEXT;
PFNGLPROGRAMUNIFORM1UIEXTPROC cppgl_glProgramUniform1uiEXT;
PFNGLPROGRAMUNIFORM2UIEXTPROC cppgl_glProgramUniform2uiEXT;
PFNGLPROGRAMUNIFORM3UIEXTPROC cppgl_glProgramUniform3uiEXT;
PFNGLPROGRAMUNIFORM4UIEXTPROC cppgl_glProgramUniform4uiEXT;
PFNGLPROGRAMUNIFORM1UIVEXTPROC cppgl_glProgramUniform1uivEXT;
PFNGLPROGRAMUNIFORM2UIVEXTPROC cppgl_glProgramUniform2uivEXT;
PFNGLPROGRAMUNIFORM3UIVEXTPROC cppgl_glProgramUniform3uivEXT;
PFNGLPROGRAMUNIFORM4UIVEXTPROC cppgl_glProgramUniform4uivEXT;
PFNGLNAMEDPROGRAMLOCALPARAMETERS4FVEXTPROC cppgl_glNamedProgramLocalParameters4fvEXT;
PFNGLNAMEDPROGRAMLOCALPARAMETERI4IEXTPROC cppgl_glNamedProgramLocalParameterI4iEXT;
PFNGLNAMEDPROGRAMLOCALPARAMETERI4IVEXTPROC cppgl_glNamedProgramLocalParameterI4ivEXT;
PFNGLNAMEDPROGRAMLOCALPARAMETERSI4IVEXTPROC cppgl_glNamedProgramLocalParametersI4ivEXT;
PFNGLNAMEDPROGRAMLOCALPARAMETERI4UIEXTPROC cppgl_glNamedProgramLocalParameterI4uiEXT;
PFNGLNAMEDPROGRAMLOCALPARAMETERI4UIVEXTPROC cppgl_glNamedProgramLocalParameterI4uivEXT;
PFNGLNAMEDPROGRAMLOCALPARAMETERSI4UIVEXTPROC cppgl_glNamedProgramLocalParametersI4uivEXT;
PFNGLGETNAMEDPROGRAMLOCALPARAMETERIIVEXTPROC cppgl_glGetNamedProgramLocalParameterIivEXT;
PFNGLGETNAMEDPROGRAMLOCALPARAMETERIUIVEXTPROC cppgl_glGetNamedProgramLocalParameterIuivEXT;
PFNGLENABLECLIENTSTATEIEXTPROC cppgl_glEnableClientStateiEXT;
PFNGLDISABLECLIENTSTATEIEXTPROC cppgl_glDisableClientStateiEXT;
PFNGLGETFLOATI_VEXTPROC cppgl_glGetFloati_vEXT;
PFNGLGETDOUBLEI_VEXTPROC cppgl_glGetDoublei_vEXT;
PFNGLGETPOINTERI_VEXTPROC cppgl_glGetPointeri_vEXT;
PFNGLNAMEDPROGRAMSTRINGEXTPROC cppgl_glNamedProgramStringEXT;
PFNGLNAMEDPROGRAMLOCALPARAMETER4DEXTPROC cppgl_glNamedProgramLocalParameter4dEXT;
PFNGLNAMEDPROGRAMLOCALPARAMETER4DVEXTPROC cppgl_glNamedProgramLocalParameter4dvEXT;
PFNGLNAMEDPROGRAMLOCALPARAMETER4FEXTPROC cppgl_glNamedProgramLocalParameter4fEXT;
PFNGLNAMEDPROGRAMLOCALPARAMETER4FVEXTPROC cppgl_glNamedProgramLocalParameter4fvEXT;
PFNGLGETNAMEDPROGRAMLOCALPARAMETERDVEXTPROC cppgl_glGetNamedProgramLocalParameterdvEXT;
PFNGLGETNAMEDPROGRAMLOCALPARAMETERFVEXTPROC cppgl_glGetNamedProgramLocalParameterfvEXT;
PFNGLGETNAMEDPROGRAMIVEXTPROC cppgl_glGetNamedProgramivEXT;
PFNGLGETNAMEDPROGRAMSTRINGEXTPROC cppgl_glGetNamedProgramStringEXT;
PFNGLNAMEDRENDERBUFFERSTORAGEEXTPROC cppgl_glNamedRenderbufferStorageEXT;
PFNGLGETNAMEDRENDERBUFFERPARAMETERIVEXTPROC cppgl_glGetNamedRenderbufferParameterivEXT;
PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLEEXTPROC cppgl_glNamedRenderbufferStorageMultisampleEXT;
PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLECOVERAGEEXTPROC cppgl_glNamedRenderbufferStorageMultisampleCoverageEXT;
PFNGLCHECKNAMEDFRAMEBUFFERSTATUSEXTPROC cppgl_glCheckNamedFramebufferStatusEXT;
PFNGLNAMEDFRAMEBUFFERTEXTURE1DEXTPROC cppgl_glNamedFramebufferTexture1DEXT;
PFNGLNAMEDFRAMEBUFFERTEXTURE2DEXTPROC cppgl_glNamedFramebufferTexture2DEXT;
PFNGLNAMEDFRAMEBUFFERTEXTURE3DEXTPROC cppgl_glNamedFramebufferTexture3DEXT;
PFNGLNAMEDFRAMEBUFFERRENDERBUFFEREXTPROC cppgl_glNamedFramebufferRenderbufferEXT;
PFNGLGETNAMEDFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC cppgl_glGetNamedFramebufferAttachmentParameterivEXT;
PFNGLGENERATETEXTUREMIPMAPEXTPROC cppgl_glGenerateTextureMipmapEXT;
PFNGLGENERATEMULTITEXMIPMAPEXTPROC cppgl_glGenerateMultiTexMipmapEXT;
PFNGLFRAMEBUFFERDRAWBUFFEREXTPROC cppgl_glFramebufferDrawBufferEXT;
PFNGLFRAMEBUFFERDRAWBUFFERSEXTPROC cppgl_glFramebufferDrawBuffersEXT;
PFNGLFRAMEBUFFERREADBUFFEREXTPROC cppgl_glFramebufferReadBufferEXT;
PFNGLGETFRAMEBUFFERPARAMETERIVEXTPROC cppgl_glGetFramebufferParameterivEXT;
PFNGLNAMEDCOPYBUFFERSUBDATAEXTPROC cppgl_glNamedCopyBufferSubDataEXT;
PFNGLNAMEDFRAMEBUFFERTEXTUREEXTPROC cppgl_glNamedFramebufferTextureEXT;
PFNGLNAMEDFRAMEBUFFERTEXTURELAYEREXTPROC cppgl_glNamedFramebufferTextureLayerEXT;
PFNGLNAMEDFRAMEBUFFERTEXTUREFACEEXTPROC cppgl_glNamedFramebufferTextureFaceEXT;
PFNGLTEXTURERENDERBUFFEREXTPROC cppgl_glTextureRenderbufferEXT;
PFNGLMULTITEXRENDERBUFFEREXTPROC cppgl_glMultiTexRenderbufferEXT;
PFNGLVERTEXARRAYVERTEXOFFSETEXTPROC cppgl_glVertexArrayVertexOffsetEXT;
PFNGLVERTEXARRAYCOLOROFFSETEXTPROC cppgl_glVertexArrayColorOffsetEXT;
PFNGLVERTEXARRAYEDGEFLAGOFFSETEXTPROC cppgl_glVertexArrayEdgeFlagOffsetEXT;
PFNGLVERTEXARRAYINDEXOFFSETEXTPROC cppgl_glVertexArrayIndexOffsetEXT;
PFNGLVERTEXARRAYNORMALOFFSETEXTPROC cppgl_glVertexArrayNormalOffsetEXT;
PFNGLVERTEXARRAYTEXCOORDOFFSETEXTPROC cppgl_glVertexArrayTexCoordOffsetEXT;
PFNGLVERTEXARRAYMULTITEXCOORDOFFSETEXTPROC cppgl_glVertexArrayMultiTexCoordOffsetEXT;
PFNGLVERTEXARRAYFOGCOORDOFFSETEXTPROC cppgl_glVertexArrayFogCoordOffsetEXT;
PFNGLVERTEXARRAYSECONDARYCOLOROFFSETEXTPROC cppgl_glVertexArraySecondaryColorOffsetEXT;
PFNGLVERTEXARRAYVERTEXATTRIBOFFSETEXTPROC cppgl_glVertexArrayVertexAttribOffsetEXT;
PFNGLVERTEXARRAYVERTEXATTRIBIOFFSETEXTPROC cppgl_glVertexArrayVertexAttribIOffsetEXT;
PFNGLENABLEVERTEXARRAYEXTPROC cppgl_glEnableVertexArrayEXT;
PFNGLDISABLEVERTEXARRAYEXTPROC cppgl_glDisableVertexArrayEXT;
PFNGLENABLEVERTEXARRAYATTRIBEXTPROC cppgl_glEnableVertexArrayAttribEXT;
PFNGLDISABLEVERTEXARRAYATTRIBEXTPROC cppgl_glDisableVertexArrayAttribEXT;
PFNGLGETVERTEXARRAYINTEGERVEXTPROC cppgl_glGetVertexArrayIntegervEXT;
PFNGLGETVERTEXARRAYPOINTERVEXTPROC cppgl_glGetVertexArrayPointervEXT;
PFNGLGETVERTEXARRAYINTEGERI_VEXTPROC cppgl_glGetVertexArrayIntegeri_vEXT;
PFNGLGETVERTEXARRAYPOINTERI_VEXTPROC cppgl_glGetVertexArrayPointeri_vEXT;
PFNGLMAPNAMEDBUFFERRANGEEXTPROC cppgl_glMapNamedBufferRangeEXT;
PFNGLFLUSHMAPPEDNAMEDBUFFERRANGEEXTPROC cppgl_glFlushMappedNamedBufferRangeEXT;
PFNGLNAMEDBUFFERSTORAGEEXTPROC cppgl_glNamedBufferStorageEXT;
PFNGLCLEARNAMEDBUFFERDATAEXTPROC cppgl_glClearNamedBufferDataEXT;
PFNGLCLEARNAMEDBUFFERSUBDATAEXTPROC cppgl_glClearNamedBufferSubDataEXT;
PFNGLNAMEDFRAMEBUFFERPARAMETERIEXTPROC cppgl_glNamedFramebufferParameteriEXT;
PFNGLGETNAMEDFRAMEBUFFERPARAMETERIVEXTPROC cppgl_glGetNamedFramebufferParameterivEXT;
PFNGLPROGRAMUNIFORM1DEXTPROC cppgl_glProgramUniform1dEXT;
PFNGLPROGRAMUNIFORM2DEXTPROC cppgl_glProgramUniform2dEXT;
PFNGLPROGRAMUNIFORM3DEXTPROC cppgl_glProgramUniform3dEXT;
PFNGLPROGRAMUNIFORM4DEXTPROC cppgl_glProgramUniform4dEXT;
PFNGLPROGRAMUNIFORM1DVEXTPROC cppgl_glProgramUniform1dvEXT;
PFNGLPROGRAMUNIFORM2DVEXTPROC cppgl_glProgramUniform2dvEXT;
PFNGLPROGRAMUNIFORM3DVEXTPROC cppgl_glProgramUniform3dvEXT;
PFNGLPROGRAMUNIFORM4DVEXTPROC cppgl_glProgramUniform4dvEXT;
PFNGLPROGRAMUNIFORMMATRIX2DVEXTPROC cppgl_glProgramUniformMatrix2dvEXT;
PFNGLPROGRAMUNIFORMMATRIX3DVEXTPROC cppgl_glProgramUniformMatrix3dvEXT;
PFNGLPROGRAMUNIFORMMATRIX4DVEXTPROC cppgl_glProgramUniformMatrix4dvEXT;
PFNGLPROGRAMUNIFORMMATRIX2X3DVEXTPROC cppgl_glProgramUniformMatrix2x3dvEXT;
PFNGLPROGRAMUNIFORMMATRIX2X4DVEXTPROC cppgl_glProgramUniformMatrix2x4dvEXT;
PFNGLPROGRAMUNIFORMMATRIX3X2DVEXTPROC cppgl_glProgramUniformMatrix3x2dvEXT;
PFNGLPROGRAMUNIFORMMATRIX3X4DVEXTPROC cppgl_glProgramUniformMatrix3x4dvEXT;
PFNGLPROGRAMUNIFORMMATRIX4X2DVEXTPROC cppgl_glProgramUniformMatrix4x2dvEXT;
PFNGLPROGRAMUNIFORMMATRIX4X3DVEXTPROC cppgl_glProgramUniformMatrix4x3dvEXT;
PFNGLTEXTUREBUFFERRANGEEXTPROC cppgl_glTextureBufferRangeEXT;
PFNGLTEXTURESTORAGE1DEXTPROC cppgl_glTextureStorage1DEXT;
PFNGLTEXTURESTORAGE2DEXTPROC cppgl_glTextureStorage2DEXT;
PFNGLTEXTURESTORAGE3DEXTPROC cppgl_glTextureStorage3DEXT;
PFNGLTEXTURESTORAGE2DMULTISAMPLEEXTPROC cppgl_glTextureStorage2DMultisampleEXT;
PFNGLTEXTURESTORAGE3DMULTISAMPLEEXTPROC cppgl_glTextureStorage3DMultisampleEXT;
PFNGLVERTEXARRAYBINDVERTEXBUFFEREXTPROC cppgl_glVertexArrayBindVertexBufferEXT;
PFNGLVERTEXARRAYVERTEXATTRIBFORMATEXTPROC cppgl_glVertexArrayVertexAttribFormatEXT;
PFNGLVERTEXARRAYVERTEXATTRIBIFORMATEXTPROC cppgl_glVertexArrayVertexAttribIFormatEXT;
PFNGLVERTEXARRAYVERTEXATTRIBLFORMATEXTPROC cppgl_glVertexArrayVertexAttribLFormatEXT;
PFNGLVERTEXARRAYVERTEXATTRIBBINDINGEXTPROC cppgl_glVertexArrayVertexAttribBindingEXT;
PFNGLVERTEXARRAYVERTEXBINDINGDIVISOREXTPROC cppgl_glVertexArrayVertexBindingDivisorEXT;
PFNGLVERTEXARRAYVERTEXATTRIBLOFFSETEXTPROC cppgl_glVertexArrayVertexAttribLOffsetEXT;
PFNGLTEXTUREPAGECOMMITMENTEXTPROC cppgl_glTexturePageCommitmentEXT;
PFNGLVERTEXARRAYVERTEXATTRIBDIVISOREXTPROC cppgl_glVertexArrayVertexAttribDivisorEXT;
PFNGLCOLORMASKINDEXEDEXTPROC cppgl_glColorMaskIndexedEXT;
PFNGLDRAWARRAYSINSTANCEDEXTPROC cppgl_glDrawArraysInstancedEXT;
PFNGLDRAWELEMENTSINSTANCEDEXTPROC cppgl_glDrawElementsInstancedEXT;
PFNGLDRAWRANGEELEMENTSEXTPROC cppgl_glDrawRangeElementsEXT;
PFNGLFOGCOORDFEXTPROC cppgl_glFogCoordfEXT;
PFNGLFOGCOORDFVEXTPROC cppgl_glFogCoordfvEXT;
PFNGLFOGCOORDDEXTPROC cppgl_glFogCoorddEXT;
PFNGLFOGCOORDDVEXTPROC cppgl_glFogCoorddvEXT;
PFNGLFOGCOORDPOINTEREXTPROC cppgl_glFogCoordPointerEXT;
PFNGLBLITFRAMEBUFFEREXTPROC cppgl_glBlitFramebufferEXT;
PFNGLRENDERBUFFERSTORAGEMULTISAMPLEEXTPROC cppgl_glRenderbufferStorageMultisampleEXT;
PFNGLISRENDERBUFFEREXTPROC cppgl_glIsRenderbufferEXT;
PFNGLBINDRENDERBUFFEREXTPROC cppgl_glBindRenderbufferEXT;
PFNGLDELETERENDERBUFFERSEXTPROC cppgl_glDeleteRenderbuffersEXT;
PFNGLGENRENDERBUFFERSEXTPROC cppgl_glGenRenderbuffersEXT;
PFNGLRENDERBUFFERSTORAGEEXTPROC cppgl_glRenderbufferStorageEXT;
PFNGLGETRENDERBUFFERPARAMETERIVEXTPROC cppgl_glGetRenderbufferParameterivEXT;
PFNGLISFRAMEBUFFEREXTPROC cppgl_glIsFramebufferEXT;
PFNGLBINDFRAMEBUFFEREXTPROC cppgl_glBindFramebufferEXT;
PFNGLDELETEFRAMEBUFFERSEXTPROC cppgl_glDeleteFramebuffersEXT;
PFNGLGENFRAMEBUFFERSEXTPROC cppgl_glGenFramebuffersEXT;
PFNGLCHECKFRAMEBUFFERSTATUSEXTPROC cppgl_glCheckFramebufferStatusEXT;
PFNGLFRAMEBUFFERTEXTURE1DEXTPROC cppgl_glFramebufferTexture1DEXT;
PFNGLFRAMEBUFFERTEXTURE2DEXTPROC cppgl_glFramebufferTexture2DEXT;
PFNGLFRAMEBUFFERTEXTURE3DEXTPROC cppgl_glFramebufferTexture3DEXT;
PFNGLFRAMEBUFFERRENDERBUFFEREXTPROC cppgl_glFramebufferRenderbufferEXT;
PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC cppgl_glGetFramebufferAttachmentParameterivEXT;
PFNGLGENERATEMIPMAPEXTPROC cppgl_glGenerateMipmapEXT;
PFNGLPROGRAMPARAMETERIEXTPROC cppgl_glProgramParameteriEXT;
PFNGLPROGRAMENVPARAMETERS4FVEXTPROC cppgl_glProgramEnvParameters4fvEXT;
PFNGLPROGRAMLOCALPARAMETERS4FVEXTPROC cppgl_glProgramLocalParameters4fvEXT;
PFNGLGETUNIFORMUIVEXTPROC cppgl_glGetUniformuivEXT;
PFNGLBINDFRAGDATALOCATIONEXTPROC cppgl_glBindFragDataLocationEXT;
PFNGLGETFRAGDATALOCATIONEXTPROC cppgl_glGetFragDataLocationEXT;
PFNGLUNIFORM1UIEXTPROC cppgl_glUniform1uiEXT;
PFNGLUNIFORM2UIEXTPROC cppgl_glUniform2uiEXT;
PFNGLUNIFORM3UIEXTPROC cppgl_glUniform3uiEXT;
PFNGLUNIFORM4UIEXTPROC cppgl_glUniform4uiEXT;
PFNGLUNIFORM1UIVEXTPROC cppgl_glUniform1uivEXT;
PFNGLUNIFORM2UIVEXTPROC cppgl_glUniform2uivEXT;
PFNGLUNIFORM3UIVEXTPROC cppgl_glUniform3uivEXT;
PFNGLUNIFORM4UIVEXTPROC cppgl_glUniform4uivEXT;
PFNGLGETHISTOGRAMEXTPROC cppgl_glGetHistogramEXT;
PFNGLGETHISTOGRAMPARAMETERFVEXTPROC cppgl_glGetHistogramParameterfvEXT;
PFNGLGETHISTOGRAMPARAMETERIVEXTPROC cppgl_glGetHistogramParameterivEXT;
PFNGLGETMINMAXEXTPROC cppgl_glGetMinmaxEXT;
PFNGLGETMINMAXPARAMETERFVEXTPROC cppgl_glGetMinmaxParameterfvEXT;
PFNGLGETMINMAXPARAMETERIVEXTPROC cppgl_glGetMinmaxParameterivEXT;
PFNGLHISTOGRAMEXTPROC cppgl_glHistogramEXT;
PFNGLMINMAXEXTPROC cppgl_glMinmaxEXT;
PFNGLRESETHISTOGRAMEXTPROC cppgl_glResetHistogramEXT;
PFNGLRESETMINMAXEXTPROC cppgl_glResetMinmaxEXT;
PFNGLINDEXFUNCEXTPROC cppgl_glIndexFuncEXT;
PFNGLINDEXMATERIALEXTPROC cppgl_glIndexMaterialEXT;
PFNGLAPPLYTEXTUREEXTPROC cppgl_glApplyTextureEXT;
PFNGLTEXTURELIGHTEXTPROC cppgl_glTextureLightEXT;
PFNGLTEXTUREMATERIALEXTPROC cppgl_glTextureMaterialEXT;
PFNGLMULTIDRAWARRAYSEXTPROC cppgl_glMultiDrawArraysEXT;
PFNGLMULTIDRAWELEMENTSEXTPROC cppgl_glMultiDrawElementsEXT;
PFNGLSAMPLEMASKEXTPROC cppgl_glSampleMaskEXT;
PFNGLSAMPLEPATTERNEXTPROC cppgl_glSamplePatternEXT;
PFNGLCOLORTABLEEXTPROC cppgl_glColorTableEXT;
PFNGLGETCOLORTABLEEXTPROC cppgl_glGetColorTableEXT;
PFNGLGETCOLORTABLEPARAMETERIVEXTPROC cppgl_glGetColorTableParameterivEXT;
PFNGLGETCOLORTABLEPARAMETERFVEXTPROC cppgl_glGetColorTableParameterfvEXT;
PFNGLPIXELTRANSFORMPARAMETERIEXTPROC cppgl_glPixelTransformParameteriEXT;
PFNGLPIXELTRANSFORMPARAMETERFEXTPROC cppgl_glPixelTransformParameterfEXT;
PFNGLPIXELTRANSFORMPARAMETERIVEXTPROC cppgl_glPixelTransformParameterivEXT;
PFNGLPIXELTRANSFORMPARAMETERFVEXTPROC cppgl_glPixelTransformParameterfvEXT;
PFNGLGETPIXELTRANSFORMPARAMETERIVEXTPROC cppgl_glGetPixelTransformParameterivEXT;
PFNGLGETPIXELTRANSFORMPARAMETERFVEXTPROC cppgl_glGetPixelTransformParameterfvEXT;
PFNGLPOINTPARAMETERFEXTPROC cppgl_glPointParameterfEXT;
PFNGLPOINTPARAMETERFVEXTPROC cppgl_glPointParameterfvEXT;
PFNGLPOLYGONOFFSETEXTPROC cppgl_glPolygonOffsetEXT;
PFNGLPOLYGONOFFSETCLAMPEXTPROC cppgl_glPolygonOffsetClampEXT;
PFNGLPROVOKINGVERTEXEXTPROC cppgl_glProvokingVertexEXT;
PFNGLRASTERSAMPLESEXTPROC cppgl_glRasterSamplesEXT;
PFNGLSECONDARYCOLOR3BEXTPROC cppgl_glSecondaryColor3bEXT;
PFNGLSECONDARYCOLOR3BVEXTPROC cppgl_glSecondaryColor3bvEXT;
PFNGLSECONDARYCOLOR3DEXTPROC cppgl_glSecondaryColor3dEXT;
PFNGLSECONDARYCOLOR3DVEXTPROC cppgl_glSecondaryColor3dvEXT;
PFNGLSECONDARYCOLOR3FEXTPROC cppgl_glSecondaryColor3fEXT;
PFNGLSECONDARYCOLOR3FVEXTPROC cppgl_glSecondaryColor3fvEXT;
PFNGLSECONDARYCOLOR3IEXTPROC cppgl_glSecondaryColor3iEXT;
PFNGLSECONDARYCOLOR3IVEXTPROC cppgl_glSecondaryColor3ivEXT;
PFNGLSECONDARYCOLOR3SEXTPROC cppgl_glSecondaryColor3sEXT;
PFNGLSECONDARYCOLOR3SVEXTPROC cppgl_glSecondaryColor3svEXT;
PFNGLSECONDARYCOLOR3UBEXTPROC cppgl_glSecondaryColor3ubEXT;
PFNGLSECONDARYCOLOR3UBVEXTPROC cppgl_glSecondaryColor3ubvEXT;
PFNGLSECONDARYCOLOR3UIEXTPROC cppgl_glSecondaryColor3uiEXT;
PFNGLSECONDARYCOLOR3UIVEXTPROC cppgl_glSecondaryColor3uivEXT;
PFNGLSECONDARYCOLOR3USEXTPROC cppgl_glSecondaryColor3usEXT;
PFNGLSECONDARYCOLOR3USVEXTPROC cppgl_glSecondaryColor3usvEXT;
PFNGLSECONDARYCOLORPOINTEREXTPROC cppgl_glSecondaryColorPointerEXT;
PFNGLUSESHADERPROGRAMEXTPROC cppgl_glUseShaderProgramEXT;
PFNGLACTIVEPROGRAMEXTPROC cppgl_glActiveProgramEXT;
PFNGLCREATESHADERPROGRAMEXTPROC cppgl_glCreateShaderProgramEXT;
PFNGLACTIVESHADERPROGRAMEXTPROC cppgl_glActiveShaderProgramEXT;
PFNGLBINDPROGRAMPIPELINEEXTPROC cppgl_glBindProgramPipelineEXT;
PFNGLCREATESHADERPROGRAMVEXTPROC cppgl_glCreateShaderProgramvEXT;
PFNGLDELETEPROGRAMPIPELINESEXTPROC cppgl_glDeleteProgramPipelinesEXT;
PFNGLGENPROGRAMPIPELINESEXTPROC cppgl_glGenProgramPipelinesEXT;
PFNGLGETPROGRAMPIPELINEINFOLOGEXTPROC cppgl_glGetProgramPipelineInfoLogEXT;
PFNGLGETPROGRAMPIPELINEIVEXTPROC cppgl_glGetProgramPipelineivEXT;
PFNGLISPROGRAMPIPELINEEXTPROC cppgl_glIsProgramPipelineEXT;
PFNGLUSEPROGRAMSTAGESEXTPROC cppgl_glUseProgramStagesEXT;
PFNGLVALIDATEPROGRAMPIPELINEEXTPROC cppgl_glValidateProgramPipelineEXT;
PFNGLBINDIMAGETEXTUREEXTPROC cppgl_glBindImageTextureEXT;
PFNGLMEMORYBARRIEREXTPROC cppgl_glMemoryBarrierEXT;
PFNGLSTENCILCLEARTAGEXTPROC cppgl_glStencilClearTagEXT;
PFNGLACTIVESTENCILFACEEXTPROC cppgl_glActiveStencilFaceEXT;
PFNGLTEXSUBIMAGE1DEXTPROC cppgl_glTexSubImage1DEXT;
PFNGLTEXSUBIMAGE2DEXTPROC cppgl_glTexSubImage2DEXT;
PFNGLTEXIMAGE3DEXTPROC cppgl_glTexImage3DEXT;
PFNGLTEXSUBIMAGE3DEXTPROC cppgl_glTexSubImage3DEXT;
PFNGLFRAMEBUFFERTEXTURELAYEREXTPROC cppgl_glFramebufferTextureLayerEXT;
PFNGLTEXBUFFEREXTPROC cppgl_glTexBufferEXT;
PFNGLTEXPARAMETERIIVEXTPROC cppgl_glTexParameterIivEXT;
PFNGLTEXPARAMETERIUIVEXTPROC cppgl_glTexParameterIuivEXT;
PFNGLGETTEXPARAMETERIIVEXTPROC cppgl_glGetTexParameterIivEXT;
PFNGLGETTEXPARAMETERIUIVEXTPROC cppgl_glGetTexParameterIuivEXT;
PFNGLCLEARCOLORIIEXTPROC cppgl_glClearColorIiEXT;
PFNGLCLEARCOLORIUIEXTPROC cppgl_glClearColorIuiEXT;
PFNGLARETEXTURESRESIDENTEXTPROC cppgl_glAreTexturesResidentEXT;
PFNGLBINDTEXTUREEXTPROC cppgl_glBindTextureEXT;
PFNGLDELETETEXTURESEXTPROC cppgl_glDeleteTexturesEXT;
PFNGLGENTEXTURESEXTPROC cppgl_glGenTexturesEXT;
PFNGLISTEXTUREEXTPROC cppgl_glIsTextureEXT;
PFNGLPRIORITIZETEXTURESEXTPROC cppgl_glPrioritizeTexturesEXT;
PFNGLTEXTURENORMALEXTPROC cppgl_glTextureNormalEXT;
PFNGLGETQUERYOBJECTI64VEXTPROC cppgl_glGetQueryObjecti64vEXT;
PFNGLGETQUERYOBJECTUI64VEXTPROC cppgl_glGetQueryObjectui64vEXT;
PFNGLBEGINTRANSFORMFEEDBACKEXTPROC cppgl_glBeginTransformFeedbackEXT;
PFNGLENDTRANSFORMFEEDBACKEXTPROC cppgl_glEndTransformFeedbackEXT;
PFNGLBINDBUFFERRANGEEXTPROC cppgl_glBindBufferRangeEXT;
PFNGLBINDBUFFEROFFSETEXTPROC cppgl_glBindBufferOffsetEXT;
PFNGLBINDBUFFERBASEEXTPROC cppgl_glBindBufferBaseEXT;
PFNGLTRANSFORMFEEDBACKVARYINGSEXTPROC cppgl_glTransformFeedbackVaryingsEXT;
PFNGLGETTRANSFORMFEEDBACKVARYINGEXTPROC cppgl_glGetTransformFeedbackVaryingEXT;
PFNGLARRAYELEMENTEXTPROC cppgl_glArrayElementEXT;
PFNGLCOLORPOINTEREXTPROC cppgl_glColorPointerEXT;
PFNGLDRAWARRAYSEXTPROC cppgl_glDrawArraysEXT;
PFNGLEDGEFLAGPOINTEREXTPROC cppgl_glEdgeFlagPointerEXT;
PFNGLGETPOINTERVEXTPROC cppgl_glGetPointervEXT;
PFNGLINDEXPOINTEREXTPROC cppgl_glIndexPointerEXT;
PFNGLNORMALPOINTEREXTPROC cppgl_glNormalPointerEXT;
PFNGLTEXCOORDPOINTEREXTPROC cppgl_glTexCoordPointerEXT;
PFNGLVERTEXPOINTEREXTPROC cppgl_glVertexPointerEXT;
PFNGLVERTEXATTRIBL1DEXTPROC cppgl_glVertexAttribL1dEXT;
PFNGLVERTEXATTRIBL2DEXTPROC cppgl_glVertexAttribL2dEXT;
PFNGLVERTEXATTRIBL3DEXTPROC cppgl_glVertexAttribL3dEXT;
PFNGLVERTEXATTRIBL4DEXTPROC cppgl_glVertexAttribL4dEXT;
PFNGLVERTEXATTRIBL1DVEXTPROC cppgl_glVertexAttribL1dvEXT;
PFNGLVERTEXATTRIBL2DVEXTPROC cppgl_glVertexAttribL2dvEXT;
PFNGLVERTEXATTRIBL3DVEXTPROC cppgl_glVertexAttribL3dvEXT;
PFNGLVERTEXATTRIBL4DVEXTPROC cppgl_glVertexAttribL4dvEXT;
PFNGLVERTEXATTRIBLPOINTEREXTPROC cppgl_glVertexAttribLPointerEXT;
PFNGLGETVERTEXATTRIBLDVEXTPROC cppgl_glGetVertexAttribLdvEXT;
PFNGLBEGINVERTEXSHADEREXTPROC cppgl_glBeginVertexShaderEXT;
PFNGLENDVERTEXSHADEREXTPROC cppgl_glEndVertexShaderEXT;
PFNGLBINDVERTEXSHADEREXTPROC cppgl_glBindVertexShaderEXT;
PFNGLGENVERTEXSHADERSEXTPROC cppgl_glGenVertexShadersEXT;
PFNGLDELETEVERTEXSHADEREXTPROC cppgl_glDeleteVertexShaderEXT;
PFNGLSHADEROP1EXTPROC cppgl_glShaderOp1EXT;
PFNGLSHADEROP2EXTPROC cppgl_glShaderOp2EXT;
PFNGLSHADEROP3EXTPROC cppgl_glShaderOp3EXT;
PFNGLSWIZZLEEXTPROC cppgl_glSwizzleEXT;
PFNGLWRITEMASKEXTPROC cppgl_glWriteMaskEXT;
PFNGLINSERTCOMPONENTEXTPROC cppgl_glInsertComponentEXT;
PFNGLEXTRACTCOMPONENTEXTPROC cppgl_glExtractComponentEXT;
PFNGLGENSYMBOLSEXTPROC cppgl_glGenSymbolsEXT;
PFNGLSETINVARIANTEXTPROC cppgl_glSetInvariantEXT;
PFNGLSETLOCALCONSTANTEXTPROC cppgl_glSetLocalConstantEXT;
PFNGLVARIANTBVEXTPROC cppgl_glVariantbvEXT;
PFNGLVARIANTSVEXTPROC cppgl_glVariantsvEXT;
PFNGLVARIANTIVEXTPROC cppgl_glVariantivEXT;
PFNGLVARIANTFVEXTPROC cppgl_glVariantfvEXT;
PFNGLVARIANTDVEXTPROC cppgl_glVariantdvEXT;
PFNGLVARIANTUBVEXTPROC cppgl_glVariantubvEXT;
PFNGLVARIANTUSVEXTPROC cppgl_glVariantusvEXT;
PFNGLVARIANTUIVEXTPROC cppgl_glVariantuivEXT;
PFNGLVARIANTPOINTEREXTPROC cppgl_glVariantPointerEXT;
PFNGLENABLEVARIANTCLIENTSTATEEXTPROC cppgl_glEnableVariantClientStateEXT;
PFNGLDISABLEVARIANTCLIENTSTATEEXTPROC cppgl_glDisableVariantClientStateEXT;
PFNGLBINDLIGHTPARAMETEREXTPROC cppgl_glBindLightParameterEXT;
PFNGLBINDMATERIALPARAMETEREXTPROC cppgl_glBindMaterialParameterEXT;
PFNGLBINDTEXGENPARAMETEREXTPROC cppgl_glBindTexGenParameterEXT;
PFNGLBINDTEXTUREUNITPARAMETEREXTPROC cppgl_glBindTextureUnitParameterEXT;
PFNGLBINDPARAMETEREXTPROC cppgl_glBindParameterEXT;
PFNGLISVARIANTENABLEDEXTPROC cppgl_glIsVariantEnabledEXT;
PFNGLGETVARIANTBOOLEANVEXTPROC cppgl_glGetVariantBooleanvEXT;
PFNGLGETVARIANTINTEGERVEXTPROC cppgl_glGetVariantIntegervEXT;
PFNGLGETVARIANTFLOATVEXTPROC cppgl_glGetVariantFloatvEXT;
PFNGLGETVARIANTPOINTERVEXTPROC cppgl_glGetVariantPointervEXT;
PFNGLGETINVARIANTBOOLEANVEXTPROC cppgl_glGetInvariantBooleanvEXT;
PFNGLGETINVARIANTINTEGERVEXTPROC cppgl_glGetInvariantIntegervEXT;
PFNGLGETINVARIANTFLOATVEXTPROC cppgl_glGetInvariantFloatvEXT;
PFNGLGETLOCALCONSTANTBOOLEANVEXTPROC cppgl_glGetLocalConstantBooleanvEXT;
PFNGLGETLOCALCONSTANTINTEGERVEXTPROC cppgl_glGetLocalConstantIntegervEXT;
PFNGLGETLOCALCONSTANTFLOATVEXTPROC cppgl_glGetLocalConstantFloatvEXT;
PFNGLVERTEXWEIGHTFEXTPROC cppgl_glVertexWeightfEXT;
PFNGLVERTEXWEIGHTFVEXTPROC cppgl_glVertexWeightfvEXT;
PFNGLVERTEXWEIGHTPOINTEREXTPROC cppgl_glVertexWeightPointerEXT;
PFNGLWINDOWRECTANGLESEXTPROC cppgl_glWindowRectanglesEXT;
PFNGLIMPORTSYNCEXTPROC cppgl_glImportSyncEXT;
PFNGLFRAMETERMINATORGREMEDYPROC cppgl_glFrameTerminatorGREMEDY;
PFNGLSTRINGMARKERGREMEDYPROC cppgl_glStringMarkerGREMEDY;
PFNGLIMAGETRANSFORMPARAMETERIHPPROC cppgl_glImageTransformParameteriHP;
PFNGLIMAGETRANSFORMPARAMETERFHPPROC cppgl_glImageTransformParameterfHP;
PFNGLIMAGETRANSFORMPARAMETERIVHPPROC cppgl_glImageTransformParameterivHP;
PFNGLIMAGETRANSFORMPARAMETERFVHPPROC cppgl_glImageTransformParameterfvHP;
PFNGLGETIMAGETRANSFORMPARAMETERIVHPPROC cppgl_glGetImageTransformParameterivHP;
PFNGLGETIMAGETRANSFORMPARAMETERFVHPPROC cppgl_glGetImageTransformParameterfvHP;
PFNGLMULTIMODEDRAWARRAYSIBMPROC cppgl_glMultiModeDrawArraysIBM;
PFNGLMULTIMODEDRAWELEMENTSIBMPROC cppgl_glMultiModeDrawElementsIBM;
PFNGLFLUSHSTATICDATAIBMPROC cppgl_glFlushStaticDataIBM;
PFNGLCOLORPOINTERLISTIBMPROC cppgl_glColorPointerListIBM;
PFNGLSECONDARYCOLORPOINTERLISTIBMPROC cppgl_glSecondaryColorPointerListIBM;
PFNGLEDGEFLAGPOINTERLISTIBMPROC cppgl_glEdgeFlagPointerListIBM;
PFNGLFOGCOORDPOINTERLISTIBMPROC cppgl_glFogCoordPointerListIBM;
PFNGLINDEXPOINTERLISTIBMPROC cppgl_glIndexPointerListIBM;
PFNGLNORMALPOINTERLISTIBMPROC cppgl_glNormalPointerListIBM;
PFNGLTEXCOORDPOINTERLISTIBMPROC cppgl_glTexCoordPointerListIBM;
PFNGLVERTEXPOINTERLISTIBMPROC cppgl_glVertexPointerListIBM;
PFNGLBLENDFUNCSEPARATEINGRPROC cppgl_glBlendFuncSeparateINGR;
PFNGLAPPLYFRAMEBUFFERATTACHMENTCMAAINTELPROC cppgl_glApplyFramebufferAttachmentCMAAINTEL;
PFNGLSYNCTEXTUREINTELPROC cppgl_glSyncTextureINTEL;
PFNGLUNMAPTEXTURE2DINTELPROC cppgl_glUnmapTexture2DINTEL;
PFNGLMAPTEXTURE2DINTELPROC cppgl_glMapTexture2DINTEL;
PFNGLVERTEXPOINTERVINTELPROC cppgl_glVertexPointervINTEL;
PFNGLNORMALPOINTERVINTELPROC cppgl_glNormalPointervINTEL;
PFNGLCOLORPOINTERVINTELPROC cppgl_glColorPointervINTEL;
PFNGLTEXCOORDPOINTERVINTELPROC cppgl_glTexCoordPointervINTEL;
PFNGLBEGINPERFQUERYINTELPROC cppgl_glBeginPerfQueryINTEL;
PFNGLCREATEPERFQUERYINTELPROC cppgl_glCreatePerfQueryINTEL;
PFNGLDELETEPERFQUERYINTELPROC cppgl_glDeletePerfQueryINTEL;
PFNGLENDPERFQUERYINTELPROC cppgl_glEndPerfQueryINTEL;
PFNGLGETFIRSTPERFQUERYIDINTELPROC cppgl_glGetFirstPerfQueryIdINTEL;
PFNGLGETNEXTPERFQUERYIDINTELPROC cppgl_glGetNextPerfQueryIdINTEL;
PFNGLGETPERFCOUNTERINFOINTELPROC cppgl_glGetPerfCounterInfoINTEL;
PFNGLGETPERFQUERYDATAINTELPROC cppgl_glGetPerfQueryDataINTEL;
PFNGLGETPERFQUERYIDBYNAMEINTELPROC cppgl_glGetPerfQueryIdByNameINTEL;
PFNGLGETPERFQUERYINFOINTELPROC cppgl_glGetPerfQueryInfoINTEL;
PFNGLBLENDBARRIERKHRPROC cppgl_glBlendBarrierKHR;
PFNGLDEBUGMESSAGECONTROLPROC cppgl_glDebugMessageControl;
PFNGLDEBUGMESSAGEINSERTPROC cppgl_glDebugMessageInsert;
PFNGLDEBUGMESSAGECALLBACKPROC cppgl_glDebugMessageCallback;
PFNGLGETDEBUGMESSAGELOGPROC cppgl_glGetDebugMessageLog;
PFNGLPUSHDEBUGGROUPPROC cppgl_glPushDebugGroup;
PFNGLPOPDEBUGGROUPPROC cppgl_glPopDebugGroup;
PFNGLOBJECTLABELPROC cppgl_glObjectLabel;
PFNGLGETOBJECTLABELPROC cppgl_glGetObjectLabel;
PFNGLOBJECTPTRLABELPROC cppgl_glObjectPtrLabel;
PFNGLGETOBJECTPTRLABELPROC cppgl_glGetObjectPtrLabel;
PFNGLDEBUGMESSAGECONTROLKHRPROC cppgl_glDebugMessageControlKHR;
PFNGLDEBUGMESSAGEINSERTKHRPROC cppgl_glDebugMessageInsertKHR;
PFNGLDEBUGMESSAGECALLBACKKHRPROC cppgl_glDebugMessageCallbackKHR;
PFNGLGETDEBUGMESSAGELOGKHRPROC cppgl_glGetDebugMessageLogKHR;
PFNGLPUSHDEBUGGROUPKHRPROC cppgl_glPushDebugGroupKHR;
PFNGLPOPDEBUGGROUPKHRPROC cppgl_glPopDebugGroupKHR;
PFNGLOBJECTLABELKHRPROC cppgl_glObjectLabelKHR;
PFNGLGETOBJECTLABELKHRPROC cppgl_glGetObjectLabelKHR;
PFNGLOBJECTPTRLABELKHRPROC cppgl_glObjectPtrLabelKHR;
PFNGLGETOBJECTPTRLABELKHRPROC cppgl_glGetObjectPtrLabelKHR;
PFNGLGETPOINTERVKHRPROC cppgl_glGetPointervKHR;
PFNGLGETGRAPHICSRESETSTATUSPROC cppgl_glGetGraphicsResetStatus;
PFNGLREADNPIXELSPROC cppgl_glReadnPixels;
PFNGLGETNUNIFORMFVPROC cppgl_glGetnUniformfv;
PFNGLGETNUNIFORMIVPROC cppgl_glGetnUniformiv;
PFNGLGETNUNIFORMUIVPROC cppgl_glGetnUniformuiv;
PFNGLGETGRAPHICSRESETSTATUSKHRPROC cppgl_glGetGraphicsResetStatusKHR;
PFNGLREADNPIXELSKHRPROC cppgl_glReadnPixelsKHR;
PFNGLGETNUNIFORMFVKHRPROC cppgl_glGetnUniformfvKHR;
PFNGLGETNUNIFORMIVKHRPROC cppgl_glGetnUniformivKHR;
PFNGLGETNUNIFORMUIVKHRPROC cppgl_glGetnUniformuivKHR;
PFNGLRESIZEBUFFERSMESAPROC cppgl_glResizeBuffersMESA;
PFNGLWINDOWPOS2DMESAPROC cppgl_glWindowPos2dMESA;
PFNGLWINDOWPOS2DVMESAPROC cppgl_glWindowPos2dvMESA;
PFNGLWINDOWPOS2FMESAPROC cppgl_glWindowPos2fMESA;
PFNGLWINDOWPOS2FVMESAPROC cppgl_glWindowPos2fvMESA;
PFNGLWINDOWPOS2IMESAPROC cppgl_glWindowPos2iMESA;
PFNGLWINDOWPOS2IVMESAPROC cppgl_glWindowPos2ivMESA;
PFNGLWINDOWPOS2SMESAPROC cppgl_glWindowPos2sMESA;
PFNGLWINDOWPOS2SVMESAPROC cppgl_glWindowPos2svMESA;
PFNGLWINDOWPOS3DMESAPROC cppgl_glWindowPos3dMESA;
PFNGLWINDOWPOS3DVMESAPROC cppgl_glWindowPos3dvMESA;
PFNGLWINDOWPOS3FMESAPROC cppgl_glWindowPos3fMESA;
PFNGLWINDOWPOS3FVMESAPROC cppgl_glWindowPos3fvMESA;
PFNGLWINDOWPOS3IMESAPROC cppgl_glWindowPos3iMESA;
PFNGLWINDOWPOS3IVMESAPROC cppgl_glWindowPos3ivMESA;
PFNGLWINDOWPOS3SMESAPROC cppgl_glWindowPos3sMESA;
PFNGLWINDOWPOS3SVMESAPROC cppgl_glWindowPos3svMESA;
PFNGLWINDOWPOS4DMESAPROC cppgl_glWindowPos4dMESA;
PFNGLWINDOWPOS4DVMESAPROC cppgl_glWindowPos4dvMESA;
PFNGLWINDOWPOS4FMESAPROC cppgl_glWindowPos4fMESA;
PFNGLWINDOWPOS4FVMESAPROC cppgl_glWindowPos4fvMESA;
PFNGLWINDOWPOS4IMESAPROC cppgl_glWindowPos4iMESA;
PFNGLWINDOWPOS4IVMESAPROC cppgl_glWindowPos4ivMESA;
PFNGLWINDOWPOS4SMESAPROC cppgl_glWindowPos4sMESA;
PFNGLWINDOWPOS4SVMESAPROC cppgl_glWindowPos4svMESA;
PFNGLBEGINCONDITIONALRENDERNVXPROC cppgl_glBeginConditionalRenderNVX;
PFNGLENDCONDITIONALRENDERNVXPROC cppgl_glEndConditionalRenderNVX;
PFNGLMULTIDRAWARRAYSINDIRECTBINDLESSNVPROC cppgl_glMultiDrawArraysIndirectBindlessNV;
PFNGLMULTIDRAWELEMENTSINDIRECTBINDLESSNVPROC cppgl_glMultiDrawElementsIndirectBindlessNV;
PFNGLMULTIDRAWARRAYSINDIRECTBINDLESSCOUNTNVPROC cppgl_glMultiDrawArraysIndirectBindlessCountNV;
PFNGLMULTIDRAWELEMENTSINDIRECTBINDLESSCOUNTNVPROC cppgl_glMultiDrawElementsIndirectBindlessCountNV;
PFNGLGETTEXTUREHANDLENVPROC cppgl_glGetTextureHandleNV;
PFNGLGETTEXTURESAMPLERHANDLENVPROC cppgl_glGetTextureSamplerHandleNV;
PFNGLMAKETEXTUREHANDLERESIDENTNVPROC cppgl_glMakeTextureHandleResidentNV;
PFNGLMAKETEXTUREHANDLENONRESIDENTNVPROC cppgl_glMakeTextureHandleNonResidentNV;
PFNGLGETIMAGEHANDLENVPROC cppgl_glGetImageHandleNV;
PFNGLMAKEIMAGEHANDLERESIDENTNVPROC cppgl_glMakeImageHandleResidentNV;
PFNGLMAKEIMAGEHANDLENONRESIDENTNVPROC cppgl_glMakeImageHandleNonResidentNV;
PFNGLUNIFORMHANDLEUI64NVPROC cppgl_glUniformHandleui64NV;
PFNGLUNIFORMHANDLEUI64VNVPROC cppgl_glUniformHandleui64vNV;
PFNGLPROGRAMUNIFORMHANDLEUI64NVPROC cppgl_glProgramUniformHandleui64NV;
PFNGLPROGRAMUNIFORMHANDLEUI64VNVPROC cppgl_glProgramUniformHandleui64vNV;
PFNGLISTEXTUREHANDLERESIDENTNVPROC cppgl_glIsTextureHandleResidentNV;
PFNGLISIMAGEHANDLERESIDENTNVPROC cppgl_glIsImageHandleResidentNV;
PFNGLBLENDPARAMETERINVPROC cppgl_glBlendParameteriNV;
PFNGLBLENDBARRIERNVPROC cppgl_glBlendBarrierNV;
PFNGLVIEWPORTPOSITIONWSCALENVPROC cppgl_glViewportPositionWScaleNV;
PFNGLCREATESTATESNVPROC cppgl_glCreateStatesNV;
PFNGLDELETESTATESNVPROC cppgl_glDeleteStatesNV;
PFNGLISSTATENVPROC cppgl_glIsStateNV;
PFNGLSTATECAPTURENVPROC cppgl_glStateCaptureNV;
PFNGLGETCOMMANDHEADERNVPROC cppgl_glGetCommandHeaderNV;
PFNGLGETSTAGEINDEXNVPROC cppgl_glGetStageIndexNV;
PFNGLDRAWCOMMANDSNVPROC cppgl_glDrawCommandsNV;
PFNGLDRAWCOMMANDSADDRESSNVPROC cppgl_glDrawCommandsAddressNV;
PFNGLDRAWCOMMANDSSTATESNVPROC cppgl_glDrawCommandsStatesNV;
PFNGLDRAWCOMMANDSSTATESADDRESSNVPROC cppgl_glDrawCommandsStatesAddressNV;
PFNGLCREATECOMMANDLISTSNVPROC cppgl_glCreateCommandListsNV;
PFNGLDELETECOMMANDLISTSNVPROC cppgl_glDeleteCommandListsNV;
PFNGLISCOMMANDLISTNVPROC cppgl_glIsCommandListNV;
PFNGLLISTDRAWCOMMANDSSTATESCLIENTNVPROC cppgl_glListDrawCommandsStatesClientNV;
PFNGLCOMMANDLISTSEGMENTSNVPROC cppgl_glCommandListSegmentsNV;
PFNGLCOMPILECOMMANDLISTNVPROC cppgl_glCompileCommandListNV;
PFNGLCALLCOMMANDLISTNVPROC cppgl_glCallCommandListNV;
PFNGLBEGINCONDITIONALRENDERNVPROC cppgl_glBeginConditionalRenderNV;
PFNGLENDCONDITIONALRENDERNVPROC cppgl_glEndConditionalRenderNV;
PFNGLSUBPIXELPRECISIONBIASNVPROC cppgl_glSubpixelPrecisionBiasNV;
PFNGLCONSERVATIVERASTERPARAMETERFNVPROC cppgl_glConservativeRasterParameterfNV;
PFNGLCONSERVATIVERASTERPARAMETERINVPROC cppgl_glConservativeRasterParameteriNV;
PFNGLCOPYIMAGESUBDATANVPROC cppgl_glCopyImageSubDataNV;
PFNGLDEPTHRANGEDNVPROC cppgl_glDepthRangedNV;
PFNGLCLEARDEPTHDNVPROC cppgl_glClearDepthdNV;
PFNGLDEPTHBOUNDSDNVPROC cppgl_glDepthBoundsdNV;
PFNGLDRAWTEXTURENVPROC cppgl_glDrawTextureNV;
PFNGLMAPCONTROLPOINTSNVPROC cppgl_glMapControlPointsNV;
PFNGLMAPPARAMETERIVNVPROC cppgl_glMapParameterivNV;
PFNGLMAPPARAMETERFVNVPROC cppgl_glMapParameterfvNV;
PFNGLGETMAPCONTROLPOINTSNVPROC cppgl_glGetMapControlPointsNV;
PFNGLGETMAPPARAMETERIVNVPROC cppgl_glGetMapParameterivNV;
PFNGLGETMAPPARAMETERFVNVPROC cppgl_glGetMapParameterfvNV;
PFNGLGETMAPATTRIBPARAMETERIVNVPROC cppgl_glGetMapAttribParameterivNV;
PFNGLGETMAPATTRIBPARAMETERFVNVPROC cppgl_glGetMapAttribParameterfvNV;
PFNGLEVALMAPSNVPROC cppgl_glEvalMapsNV;
PFNGLGETMULTISAMPLEFVNVPROC cppgl_glGetMultisamplefvNV;
PFNGLSAMPLEMASKINDEXEDNVPROC cppgl_glSampleMaskIndexedNV;
PFNGLTEXRENDERBUFFERNVPROC cppgl_glTexRenderbufferNV;
PFNGLDELETEFENCESNVPROC cppgl_glDeleteFencesNV;
PFNGLGENFENCESNVPROC cppgl_glGenFencesNV;
PFNGLISFENCENVPROC cppgl_glIsFenceNV;
PFNGLTESTFENCENVPROC cppgl_glTestFenceNV;
PFNGLGETFENCEIVNVPROC cppgl_glGetFenceivNV;
PFNGLFINISHFENCENVPROC cppgl_glFinishFenceNV;
PFNGLSETFENCENVPROC cppgl_glSetFenceNV;
PFNGLFRAGMENTCOVERAGECOLORNVPROC cppgl_glFragmentCoverageColorNV;
PFNGLPROGRAMNAMEDPARAMETER4FNVPROC cppgl_glProgramNamedParameter4fNV;
PFNGLPROGRAMNAMEDPARAMETER4FVNVPROC cppgl_glProgramNamedParameter4fvNV;
PFNGLPROGRAMNAMEDPARAMETER4DNVPROC cppgl_glProgramNamedParameter4dNV;
PFNGLPROGRAMNAMEDPARAMETER4DVNVPROC cppgl_glProgramNamedParameter4dvNV;
PFNGLGETPROGRAMNAMEDPARAMETERFVNVPROC cppgl_glGetProgramNamedParameterfvNV;
PFNGLGETPROGRAMNAMEDPARAMETERDVNVPROC cppgl_glGetProgramNamedParameterdvNV;
PFNGLCOVERAGEMODULATIONTABLENVPROC cppgl_glCoverageModulationTableNV;
PFNGLGETCOVERAGEMODULATIONTABLENVPROC cppgl_glGetCoverageModulationTableNV;
PFNGLCOVERAGEMODULATIONNVPROC cppgl_glCoverageModulationNV;
PFNGLRENDERBUFFERSTORAGEMULTISAMPLECOVERAGENVPROC cppgl_glRenderbufferStorageMultisampleCoverageNV;
PFNGLPROGRAMVERTEXLIMITNVPROC cppgl_glProgramVertexLimitNV;
PFNGLFRAMEBUFFERTEXTUREEXTPROC cppgl_glFramebufferTextureEXT;
PFNGLFRAMEBUFFERTEXTUREFACEEXTPROC cppgl_glFramebufferTextureFaceEXT;
PFNGLPROGRAMLOCALPARAMETERI4INVPROC cppgl_glProgramLocalParameterI4iNV;
PFNGLPROGRAMLOCALPARAMETERI4IVNVPROC cppgl_glProgramLocalParameterI4ivNV;
PFNGLPROGRAMLOCALPARAMETERSI4IVNVPROC cppgl_glProgramLocalParametersI4ivNV;
PFNGLPROGRAMLOCALPARAMETERI4UINVPROC cppgl_glProgramLocalParameterI4uiNV;
PFNGLPROGRAMLOCALPARAMETERI4UIVNVPROC cppgl_glProgramLocalParameterI4uivNV;
PFNGLPROGRAMLOCALPARAMETERSI4UIVNVPROC cppgl_glProgramLocalParametersI4uivNV;
PFNGLPROGRAMENVPARAMETERI4INVPROC cppgl_glProgramEnvParameterI4iNV;
PFNGLPROGRAMENVPARAMETERI4IVNVPROC cppgl_glProgramEnvParameterI4ivNV;
PFNGLPROGRAMENVPARAMETERSI4IVNVPROC cppgl_glProgramEnvParametersI4ivNV;
PFNGLPROGRAMENVPARAMETERI4UINVPROC cppgl_glProgramEnvParameterI4uiNV;
PFNGLPROGRAMENVPARAMETERI4UIVNVPROC cppgl_glProgramEnvParameterI4uivNV;
PFNGLPROGRAMENVPARAMETERSI4UIVNVPROC cppgl_glProgramEnvParametersI4uivNV;
PFNGLGETPROGRAMLOCALPARAMETERIIVNVPROC cppgl_glGetProgramLocalParameterIivNV;
PFNGLGETPROGRAMLOCALPARAMETERIUIVNVPROC cppgl_glGetProgramLocalParameterIuivNV;
PFNGLGETPROGRAMENVPARAMETERIIVNVPROC cppgl_glGetProgramEnvParameterIivNV;
PFNGLGETPROGRAMENVPARAMETERIUIVNVPROC cppgl_glGetProgramEnvParameterIuivNV;
PFNGLPROGRAMSUBROUTINEPARAMETERSUIVNVPROC cppgl_glProgramSubroutineParametersuivNV;
PFNGLGETPROGRAMSUBROUTINEPARAMETERUIVNVPROC cppgl_glGetProgramSubroutineParameteruivNV;
PFNGLVERTEX2HNVPROC cppgl_glVertex2hNV;
PFNGLVERTEX2HVNVPROC cppgl_glVertex2hvNV;
PFNGLVERTEX3HNVPROC cppgl_glVertex3hNV;
PFNGLVERTEX3HVNVPROC cppgl_glVertex3hvNV;
PFNGLVERTEX4HNVPROC cppgl_glVertex4hNV;
PFNGLVERTEX4HVNVPROC cppgl_glVertex4hvNV;
PFNGLNORMAL3HNVPROC cppgl_glNormal3hNV;
PFNGLNORMAL3HVNVPROC cppgl_glNormal3hvNV;
PFNGLCOLOR3HNVPROC cppgl_glColor3hNV;
PFNGLCOLOR3HVNVPROC cppgl_glColor3hvNV;
PFNGLCOLOR4HNVPROC cppgl_glColor4hNV;
PFNGLCOLOR4HVNVPROC cppgl_glColor4hvNV;
PFNGLTEXCOORD1HNVPROC cppgl_glTexCoord1hNV;
PFNGLTEXCOORD1HVNVPROC cppgl_glTexCoord1hvNV;
PFNGLTEXCOORD2HNVPROC cppgl_glTexCoord2hNV;
PFNGLTEXCOORD2HVNVPROC cppgl_glTexCoord2hvNV;
PFNGLTEXCOORD3HNVPROC cppgl_glTexCoord3hNV;
PFNGLTEXCOORD3HVNVPROC cppgl_glTexCoord3hvNV;
PFNGLTEXCOORD4HNVPROC cppgl_glTexCoord4hNV;
PFNGLTEXCOORD4HVNVPROC cppgl_glTexCoord4hvNV;
PFNGLMULTITEXCOORD1HNVPROC cppgl_glMultiTexCoord1hNV;
PFNGLMULTITEXCOORD1HVNVPROC cppgl_glMultiTexCoord1hvNV;
PFNGLMULTITEXCOORD2HNVPROC cppgl_glMultiTexCoord2hNV;
PFNGLMULTITEXCOORD2HVNVPROC cppgl_glMultiTexCoord2hvNV;
PFNGLMULTITEXCOORD3HNVPROC cppgl_glMultiTexCoord3hNV;
PFNGLMULTITEXCOORD3HVNVPROC cppgl_glMultiTexCoord3hvNV;
PFNGLMULTITEXCOORD4HNVPROC cppgl_glMultiTexCoord4hNV;
PFNGLMULTITEXCOORD4HVNVPROC cppgl_glMultiTexCoord4hvNV;
PFNGLFOGCOORDHNVPROC cppgl_glFogCoordhNV;
PFNGLFOGCOORDHVNVPROC cppgl_glFogCoordhvNV;
PFNGLSECONDARYCOLOR3HNVPROC cppgl_glSecondaryColor3hNV;
PFNGLSECONDARYCOLOR3HVNVPROC cppgl_glSecondaryColor3hvNV;
PFNGLVERTEXWEIGHTHNVPROC cppgl_glVertexWeighthNV;
PFNGLVERTEXWEIGHTHVNVPROC cppgl_glVertexWeighthvNV;
PFNGLVERTEXATTRIB1HNVPROC cppgl_glVertexAttrib1hNV;
PFNGLVERTEXATTRIB1HVNVPROC cppgl_glVertexAttrib1hvNV;
PFNGLVERTEXATTRIB2HNVPROC cppgl_glVertexAttrib2hNV;
PFNGLVERTEXATTRIB2HVNVPROC cppgl_glVertexAttrib2hvNV;
PFNGLVERTEXATTRIB3HNVPROC cppgl_glVertexAttrib3hNV;
PFNGLVERTEXATTRIB3HVNVPROC cppgl_glVertexAttrib3hvNV;
PFNGLVERTEXATTRIB4HNVPROC cppgl_glVertexAttrib4hNV;
PFNGLVERTEXATTRIB4HVNVPROC cppgl_glVertexAttrib4hvNV;
PFNGLVERTEXATTRIBS1HVNVPROC cppgl_glVertexAttribs1hvNV;
PFNGLVERTEXATTRIBS2HVNVPROC cppgl_glVertexAttribs2hvNV;
PFNGLVERTEXATTRIBS3HVNVPROC cppgl_glVertexAttribs3hvNV;
PFNGLVERTEXATTRIBS4HVNVPROC cppgl_glVertexAttribs4hvNV;
PFNGLGETINTERNALFORMATSAMPLEIVNVPROC cppgl_glGetInternalformatSampleivNV;
PFNGLGENOCCLUSIONQUERIESNVPROC cppgl_glGenOcclusionQueriesNV;
PFNGLDELETEOCCLUSIONQUERIESNVPROC cppgl_glDeleteOcclusionQueriesNV;
PFNGLISOCCLUSIONQUERYNVPROC cppgl_glIsOcclusionQueryNV;
PFNGLBEGINOCCLUSIONQUERYNVPROC cppgl_glBeginOcclusionQueryNV;
PFNGLENDOCCLUSIONQUERYNVPROC cppgl_glEndOcclusionQueryNV;
PFNGLGETOCCLUSIONQUERYIVNVPROC cppgl_glGetOcclusionQueryivNV;
PFNGLGETOCCLUSIONQUERYUIVNVPROC cppgl_glGetOcclusionQueryuivNV;
PFNGLPROGRAMBUFFERPARAMETERSFVNVPROC cppgl_glProgramBufferParametersfvNV;
PFNGLPROGRAMBUFFERPARAMETERSIIVNVPROC cppgl_glProgramBufferParametersIivNV;
PFNGLPROGRAMBUFFERPARAMETERSIUIVNVPROC cppgl_glProgramBufferParametersIuivNV;
PFNGLGENPATHSNVPROC cppgl_glGenPathsNV;
PFNGLDELETEPATHSNVPROC cppgl_glDeletePathsNV;
PFNGLISPATHNVPROC cppgl_glIsPathNV;
PFNGLPATHCOMMANDSNVPROC cppgl_glPathCommandsNV;
PFNGLPATHCOORDSNVPROC cppgl_glPathCoordsNV;
PFNGLPATHSUBCOMMANDSNVPROC cppgl_glPathSubCommandsNV;
PFNGLPATHSUBCOORDSNVPROC cppgl_glPathSubCoordsNV;
PFNGLPATHSTRINGNVPROC cppgl_glPathStringNV;
PFNGLPATHGLYPHSNVPROC cppgl_glPathGlyphsNV;
PFNGLPATHGLYPHRANGENVPROC cppgl_glPathGlyphRangeNV;
PFNGLWEIGHTPATHSNVPROC cppgl_glWeightPathsNV;
PFNGLCOPYPATHNVPROC cppgl_glCopyPathNV;
PFNGLINTERPOLATEPATHSNVPROC cppgl_glInterpolatePathsNV;
PFNGLTRANSFORMPATHNVPROC cppgl_glTransformPathNV;
PFNGLPATHPARAMETERIVNVPROC cppgl_glPathParameterivNV;
PFNGLPATHPARAMETERINVPROC cppgl_glPathParameteriNV;
PFNGLPATHPARAMETERFVNVPROC cppgl_glPathParameterfvNV;
PFNGLPATHPARAMETERFNVPROC cppgl_glPathParameterfNV;
PFNGLPATHDASHARRAYNVPROC cppgl_glPathDashArrayNV;
PFNGLPATHSTENCILFUNCNVPROC cppgl_glPathStencilFuncNV;
PFNGLPATHSTENCILDEPTHOFFSETNVPROC cppgl_glPathStencilDepthOffsetNV;
PFNGLSTENCILFILLPATHNVPROC cppgl_glStencilFillPathNV;
PFNGLSTENCILSTROKEPATHNVPROC cppgl_glStencilStrokePathNV;
PFNGLSTENCILFILLPATHINSTANCEDNVPROC cppgl_glStencilFillPathInstancedNV;
PFNGLSTENCILSTROKEPATHINSTANCEDNVPROC cppgl_glStencilStrokePathInstancedNV;
PFNGLPATHCOVERDEPTHFUNCNVPROC cppgl_glPathCoverDepthFuncNV;
PFNGLCOVERFILLPATHNVPROC cppgl_glCoverFillPathNV;
PFNGLCOVERSTROKEPATHNVPROC cppgl_glCoverStrokePathNV;
PFNGLCOVERFILLPATHINSTANCEDNVPROC cppgl_glCoverFillPathInstancedNV;
PFNGLCOVERSTROKEPATHINSTANCEDNVPROC cppgl_glCoverStrokePathInstancedNV;
PFNGLGETPATHPARAMETERIVNVPROC cppgl_glGetPathParameterivNV;
PFNGLGETPATHPARAMETERFVNVPROC cppgl_glGetPathParameterfvNV;
PFNGLGETPATHCOMMANDSNVPROC cppgl_glGetPathCommandsNV;
PFNGLGETPATHCOORDSNVPROC cppgl_glGetPathCoordsNV;
PFNGLGETPATHDASHARRAYNVPROC cppgl_glGetPathDashArrayNV;
PFNGLGETPATHMETRICSNVPROC cppgl_glGetPathMetricsNV;
PFNGLGETPATHMETRICRANGENVPROC cppgl_glGetPathMetricRangeNV;
PFNGLGETPATHSPACINGNVPROC cppgl_glGetPathSpacingNV;
PFNGLISPOINTINFILLPATHNVPROC cppgl_glIsPointInFillPathNV;
PFNGLISPOINTINSTROKEPATHNVPROC cppgl_glIsPointInStrokePathNV;
PFNGLGETPATHLENGTHNVPROC cppgl_glGetPathLengthNV;
PFNGLPOINTALONGPATHNVPROC cppgl_glPointAlongPathNV;
PFNGLMATRIXLOAD3X2FNVPROC cppgl_glMatrixLoad3x2fNV;
PFNGLMATRIXLOAD3X3FNVPROC cppgl_glMatrixLoad3x3fNV;
PFNGLMATRIXLOADTRANSPOSE3X3FNVPROC cppgl_glMatrixLoadTranspose3x3fNV;
PFNGLMATRIXMULT3X2FNVPROC cppgl_glMatrixMult3x2fNV;
PFNGLMATRIXMULT3X3FNVPROC cppgl_glMatrixMult3x3fNV;
PFNGLMATRIXMULTTRANSPOSE3X3FNVPROC cppgl_glMatrixMultTranspose3x3fNV;
PFNGLSTENCILTHENCOVERFILLPATHNVPROC cppgl_glStencilThenCoverFillPathNV;
PFNGLSTENCILTHENCOVERSTROKEPATHNVPROC cppgl_glStencilThenCoverStrokePathNV;
PFNGLSTENCILTHENCOVERFILLPATHINSTANCEDNVPROC cppgl_glStencilThenCoverFillPathInstancedNV;
PFNGLSTENCILTHENCOVERSTROKEPATHINSTANCEDNVPROC cppgl_glStencilThenCoverStrokePathInstancedNV;
PFNGLPATHGLYPHINDEXRANGENVPROC cppgl_glPathGlyphIndexRangeNV;
PFNGLPATHGLYPHINDEXARRAYNVPROC cppgl_glPathGlyphIndexArrayNV;
PFNGLPATHMEMORYGLYPHINDEXARRAYNVPROC cppgl_glPathMemoryGlyphIndexArrayNV;
PFNGLPROGRAMPATHFRAGMENTINPUTGENNVPROC cppgl_glProgramPathFragmentInputGenNV;
PFNGLGETPROGRAMRESOURCEFVNVPROC cppgl_glGetProgramResourcefvNV;
PFNGLPATHCOLORGENNVPROC cppgl_glPathColorGenNV;
PFNGLPATHTEXGENNVPROC cppgl_glPathTexGenNV;
PFNGLPATHFOGGENNVPROC cppgl_glPathFogGenNV;
PFNGLGETPATHCOLORGENIVNVPROC cppgl_glGetPathColorGenivNV;
PFNGLGETPATHCOLORGENFVNVPROC cppgl_glGetPathColorGenfvNV;
PFNGLGETPATHTEXGENIVNVPROC cppgl_glGetPathTexGenivNV;
PFNGLGETPATHTEXGENFVNVPROC cppgl_glGetPathTexGenfvNV;
PFNGLPIXELDATARANGENVPROC cppgl_glPixelDataRangeNV;
PFNGLFLUSHPIXELDATARANGENVPROC cppgl_glFlushPixelDataRangeNV;
PFNGLPOINTPARAMETERINVPROC cppgl_glPointParameteriNV;
PFNGLPOINTPARAMETERIVNVPROC cppgl_glPointParameterivNV;
PFNGLPRESENTFRAMEKEYEDNVPROC cppgl_glPresentFrameKeyedNV;
PFNGLPRESENTFRAMEDUALFILLNVPROC cppgl_glPresentFrameDualFillNV;
PFNGLGETVIDEOIVNVPROC cppgl_glGetVideoivNV;
PFNGLGETVIDEOUIVNVPROC cppgl_glGetVideouivNV;
PFNGLGETVIDEOI64VNVPROC cppgl_glGetVideoi64vNV;
PFNGLGETVIDEOUI64VNVPROC cppgl_glGetVideoui64vNV;
PFNGLPRIMITIVERESTARTNVPROC cppgl_glPrimitiveRestartNV;
PFNGLPRIMITIVERESTARTINDEXNVPROC cppgl_glPrimitiveRestartIndexNV;
PFNGLCOMBINERPARAMETERFVNVPROC cppgl_glCombinerParameterfvNV;
PFNGLCOMBINERPARAMETERFNVPROC cppgl_glCombinerParameterfNV;
PFNGLCOMBINERPARAMETERIVNVPROC cppgl_glCombinerParameterivNV;
PFNGLCOMBINERPARAMETERINVPROC cppgl_glCombinerParameteriNV;
PFNGLCOMBINERINPUTNVPROC cppgl_glCombinerInputNV;
PFNGLCOMBINEROUTPUTNVPROC cppgl_glCombinerOutputNV;
PFNGLFINALCOMBINERINPUTNVPROC cppgl_glFinalCombinerInputNV;
PFNGLGETCOMBINERINPUTPARAMETERFVNVPROC cppgl_glGetCombinerInputParameterfvNV;
PFNGLGETCOMBINERINPUTPARAMETERIVNVPROC cppgl_glGetCombinerInputParameterivNV;
PFNGLGETCOMBINEROUTPUTPARAMETERFVNVPROC cppgl_glGetCombinerOutputParameterfvNV;
PFNGLGETCOMBINEROUTPUTPARAMETERIVNVPROC cppgl_glGetCombinerOutputParameterivNV;
PFNGLGETFINALCOMBINERINPUTPARAMETERFVNVPROC cppgl_glGetFinalCombinerInputParameterfvNV;
PFNGLGETFINALCOMBINERINPUTPARAMETERIVNVPROC cppgl_glGetFinalCombinerInputParameterivNV;
PFNGLCOMBINERSTAGEPARAMETERFVNVPROC cppgl_glCombinerStageParameterfvNV;
PFNGLGETCOMBINERSTAGEPARAMETERFVNVPROC cppgl_glGetCombinerStageParameterfvNV;
PFNGLFRAMEBUFFERSAMPLELOCATIONSFVNVPROC cppgl_glFramebufferSampleLocationsfvNV;
PFNGLNAMEDFRAMEBUFFERSAMPLELOCATIONSFVNVPROC cppgl_glNamedFramebufferSampleLocationsfvNV;
PFNGLRESOLVEDEPTHVALUESNVPROC cppgl_glResolveDepthValuesNV;
PFNGLMAKEBUFFERRESIDENTNVPROC cppgl_glMakeBufferResidentNV;
PFNGLMAKEBUFFERNONRESIDENTNVPROC cppgl_glMakeBufferNonResidentNV;
PFNGLISBUFFERRESIDENTNVPROC cppgl_glIsBufferResidentNV;
PFNGLMAKENAMEDBUFFERRESIDENTNVPROC cppgl_glMakeNamedBufferResidentNV;
PFNGLMAKENAMEDBUFFERNONRESIDENTNVPROC cppgl_glMakeNamedBufferNonResidentNV;
PFNGLISNAMEDBUFFERRESIDENTNVPROC cppgl_glIsNamedBufferResidentNV;
PFNGLGETBUFFERPARAMETERUI64VNVPROC cppgl_glGetBufferParameterui64vNV;
PFNGLGETNAMEDBUFFERPARAMETERUI64VNVPROC cppgl_glGetNamedBufferParameterui64vNV;
PFNGLGETINTEGERUI64VNVPROC cppgl_glGetIntegerui64vNV;
PFNGLUNIFORMUI64NVPROC cppgl_glUniformui64NV;
PFNGLUNIFORMUI64VNVPROC cppgl_glUniformui64vNV;
PFNGLPROGRAMUNIFORMUI64NVPROC cppgl_glProgramUniformui64NV;
PFNGLPROGRAMUNIFORMUI64VNVPROC cppgl_glProgramUniformui64vNV;
PFNGLTEXTUREBARRIERNVPROC cppgl_glTextureBarrierNV;
PFNGLTEXIMAGE2DMULTISAMPLECOVERAGENVPROC cppgl_glTexImage2DMultisampleCoverageNV;
PFNGLTEXIMAGE3DMULTISAMPLECOVERAGENVPROC cppgl_glTexImage3DMultisampleCoverageNV;
PFNGLTEXTUREIMAGE2DMULTISAMPLENVPROC cppgl_glTextureImage2DMultisampleNV;
PFNGLTEXTUREIMAGE3DMULTISAMPLENVPROC cppgl_glTextureImage3DMultisampleNV;
PFNGLTEXTUREIMAGE2DMULTISAMPLECOVERAGENVPROC cppgl_glTextureImage2DMultisampleCoverageNV;
PFNGLTEXTUREIMAGE3DMULTISAMPLECOVERAGENVPROC cppgl_glTextureImage3DMultisampleCoverageNV;
PFNGLBEGINTRANSFORMFEEDBACKNVPROC cppgl_glBeginTransformFeedbackNV;
PFNGLENDTRANSFORMFEEDBACKNVPROC cppgl_glEndTransformFeedbackNV;
PFNGLTRANSFORMFEEDBACKATTRIBSNVPROC cppgl_glTransformFeedbackAttribsNV;
PFNGLBINDBUFFERRANGENVPROC cppgl_glBindBufferRangeNV;
PFNGLBINDBUFFEROFFSETNVPROC cppgl_glBindBufferOffsetNV;
PFNGLBINDBUFFERBASENVPROC cppgl_glBindBufferBaseNV;
PFNGLTRANSFORMFEEDBACKVARYINGSNVPROC cppgl_glTransformFeedbackVaryingsNV;
PFNGLACTIVEVARYINGNVPROC cppgl_glActiveVaryingNV;
PFNGLGETVARYINGLOCATIONNVPROC cppgl_glGetVaryingLocationNV;
PFNGLGETACTIVEVARYINGNVPROC cppgl_glGetActiveVaryingNV;
PFNGLGETTRANSFORMFEEDBACKVARYINGNVPROC cppgl_glGetTransformFeedbackVaryingNV;
PFNGLTRANSFORMFEEDBACKSTREAMATTRIBSNVPROC cppgl_glTransformFeedbackStreamAttribsNV;
PFNGLBINDTRANSFORMFEEDBACKNVPROC cppgl_glBindTransformFeedbackNV;
PFNGLDELETETRANSFORMFEEDBACKSNVPROC cppgl_glDeleteTransformFeedbacksNV;
PFNGLGENTRANSFORMFEEDBACKSNVPROC cppgl_glGenTransformFeedbacksNV;
PFNGLISTRANSFORMFEEDBACKNVPROC cppgl_glIsTransformFeedbackNV;
PFNGLPAUSETRANSFORMFEEDBACKNVPROC cppgl_glPauseTransformFeedbackNV;
PFNGLRESUMETRANSFORMFEEDBACKNVPROC cppgl_glResumeTransformFeedbackNV;
PFNGLDRAWTRANSFORMFEEDBACKNVPROC cppgl_glDrawTransformFeedbackNV;
PFNGLVDPAUINITNVPROC cppgl_glVDPAUInitNV;
PFNGLVDPAUFININVPROC cppgl_glVDPAUFiniNV;
PFNGLVDPAUREGISTERVIDEOSURFACENVPROC cppgl_glVDPAURegisterVideoSurfaceNV;
PFNGLVDPAUREGISTEROUTPUTSURFACENVPROC cppgl_glVDPAURegisterOutputSurfaceNV;
PFNGLVDPAUISSURFACENVPROC cppgl_glVDPAUIsSurfaceNV;
PFNGLVDPAUUNREGISTERSURFACENVPROC cppgl_glVDPAUUnregisterSurfaceNV;
PFNGLVDPAUGETSURFACEIVNVPROC cppgl_glVDPAUGetSurfaceivNV;
PFNGLVDPAUSURFACEACCESSNVPROC cppgl_glVDPAUSurfaceAccessNV;
PFNGLVDPAUMAPSURFACESNVPROC cppgl_glVDPAUMapSurfacesNV;
PFNGLVDPAUUNMAPSURFACESNVPROC cppgl_glVDPAUUnmapSurfacesNV;
PFNGLFLUSHVERTEXARRAYRANGENVPROC cppgl_glFlushVertexArrayRangeNV;
PFNGLVERTEXARRAYRANGENVPROC cppgl_glVertexArrayRangeNV;
PFNGLVERTEXATTRIBL1I64NVPROC cppgl_glVertexAttribL1i64NV;
PFNGLVERTEXATTRIBL2I64NVPROC cppgl_glVertexAttribL2i64NV;
PFNGLVERTEXATTRIBL3I64NVPROC cppgl_glVertexAttribL3i64NV;
PFNGLVERTEXATTRIBL4I64NVPROC cppgl_glVertexAttribL4i64NV;
PFNGLVERTEXATTRIBL1I64VNVPROC cppgl_glVertexAttribL1i64vNV;
PFNGLVERTEXATTRIBL2I64VNVPROC cppgl_glVertexAttribL2i64vNV;
PFNGLVERTEXATTRIBL3I64VNVPROC cppgl_glVertexAttribL3i64vNV;
PFNGLVERTEXATTRIBL4I64VNVPROC cppgl_glVertexAttribL4i64vNV;
PFNGLVERTEXATTRIBL1UI64NVPROC cppgl_glVertexAttribL1ui64NV;
PFNGLVERTEXATTRIBL2UI64NVPROC cppgl_glVertexAttribL2ui64NV;
PFNGLVERTEXATTRIBL3UI64NVPROC cppgl_glVertexAttribL3ui64NV;
PFNGLVERTEXATTRIBL4UI64NVPROC cppgl_glVertexAttribL4ui64NV;
PFNGLVERTEXATTRIBL1UI64VNVPROC cppgl_glVertexAttribL1ui64vNV;
PFNGLVERTEXATTRIBL2UI64VNVPROC cppgl_glVertexAttribL2ui64vNV;
PFNGLVERTEXATTRIBL3UI64VNVPROC cppgl_glVertexAttribL3ui64vNV;
PFNGLVERTEXATTRIBL4UI64VNVPROC cppgl_glVertexAttribL4ui64vNV;
PFNGLGETVERTEXATTRIBLI64VNVPROC cppgl_glGetVertexAttribLi64vNV;
PFNGLGETVERTEXATTRIBLUI64VNVPROC cppgl_glGetVertexAttribLui64vNV;
PFNGLVERTEXATTRIBLFORMATNVPROC cppgl_glVertexAttribLFormatNV;
PFNGLBUFFERADDRESSRANGENVPROC cppgl_glBufferAddressRangeNV;
PFNGLVERTEXFORMATNVPROC cppgl_glVertexFormatNV;
PFNGLNORMALFORMATNVPROC cppgl_glNormalFormatNV;
PFNGLCOLORFORMATNVPROC cppgl_glColorFormatNV;
PFNGLINDEXFORMATNVPROC cppgl_glIndexFormatNV;
PFNGLTEXCOORDFORMATNVPROC cppgl_glTexCoordFormatNV;
PFNGLEDGEFLAGFORMATNVPROC cppgl_glEdgeFlagFormatNV;
PFNGLSECONDARYCOLORFORMATNVPROC cppgl_glSecondaryColorFormatNV;
PFNGLFOGCOORDFORMATNVPROC cppgl_glFogCoordFormatNV;
PFNGLVERTEXATTRIBFORMATNVPROC cppgl_glVertexAttribFormatNV;
PFNGLVERTEXATTRIBIFORMATNVPROC cppgl_glVertexAttribIFormatNV;
PFNGLGETINTEGERUI64I_VNVPROC cppgl_glGetIntegerui64i_vNV;
PFNGLAREPROGRAMSRESIDENTNVPROC cppgl_glAreProgramsResidentNV;
PFNGLBINDPROGRAMNVPROC cppgl_glBindProgramNV;
PFNGLDELETEPROGRAMSNVPROC cppgl_glDeleteProgramsNV;
PFNGLEXECUTEPROGRAMNVPROC cppgl_glExecuteProgramNV;
PFNGLGENPROGRAMSNVPROC cppgl_glGenProgramsNV;
PFNGLGETPROGRAMPARAMETERDVNVPROC cppgl_glGetProgramParameterdvNV;
PFNGLGETPROGRAMPARAMETERFVNVPROC cppgl_glGetProgramParameterfvNV;
PFNGLGETPROGRAMIVNVPROC cppgl_glGetProgramivNV;
PFNGLGETPROGRAMSTRINGNVPROC cppgl_glGetProgramStringNV;
PFNGLGETTRACKMATRIXIVNVPROC cppgl_glGetTrackMatrixivNV;
PFNGLGETVERTEXATTRIBDVNVPROC cppgl_glGetVertexAttribdvNV;
PFNGLGETVERTEXATTRIBFVNVPROC cppgl_glGetVertexAttribfvNV;
PFNGLGETVERTEXATTRIBIVNVPROC cppgl_glGetVertexAttribivNV;
PFNGLGETVERTEXATTRIBPOINTERVNVPROC cppgl_glGetVertexAttribPointervNV;
PFNGLISPROGRAMNVPROC cppgl_glIsProgramNV;
PFNGLLOADPROGRAMNVPROC cppgl_glLoadProgramNV;
PFNGLPROGRAMPARAMETER4DNVPROC cppgl_glProgramParameter4dNV;
PFNGLPROGRAMPARAMETER4DVNVPROC cppgl_glProgramParameter4dvNV;
PFNGLPROGRAMPARAMETER4FNVPROC cppgl_glProgramParameter4fNV;
PFNGLPROGRAMPARAMETER4FVNVPROC cppgl_glProgramParameter4fvNV;
PFNGLPROGRAMPARAMETERS4DVNVPROC cppgl_glProgramParameters4dvNV;
PFNGLPROGRAMPARAMETERS4FVNVPROC cppgl_glProgramParameters4fvNV;
PFNGLREQUESTRESIDENTPROGRAMSNVPROC cppgl_glRequestResidentProgramsNV;
PFNGLTRACKMATRIXNVPROC cppgl_glTrackMatrixNV;
PFNGLVERTEXATTRIBPOINTERNVPROC cppgl_glVertexAttribPointerNV;
PFNGLVERTEXATTRIB1DNVPROC cppgl_glVertexAttrib1dNV;
PFNGLVERTEXATTRIB1DVNVPROC cppgl_glVertexAttrib1dvNV;
PFNGLVERTEXATTRIB1FNVPROC cppgl_glVertexAttrib1fNV;
PFNGLVERTEXATTRIB1FVNVPROC cppgl_glVertexAttrib1fvNV;
PFNGLVERTEXATTRIB1SNVPROC cppgl_glVertexAttrib1sNV;
PFNGLVERTEXATTRIB1SVNVPROC cppgl_glVertexAttrib1svNV;
PFNGLVERTEXATTRIB2DNVPROC cppgl_glVertexAttrib2dNV;
PFNGLVERTEXATTRIB2DVNVPROC cppgl_glVertexAttrib2dvNV;
PFNGLVERTEXATTRIB2FNVPROC cppgl_glVertexAttrib2fNV;
PFNGLVERTEXATTRIB2FVNVPROC cppgl_glVertexAttrib2fvNV;
PFNGLVERTEXATTRIB2SNVPROC cppgl_glVertexAttrib2sNV;
PFNGLVERTEXATTRIB2SVNVPROC cppgl_glVertexAttrib2svNV;
PFNGLVERTEXATTRIB3DNVPROC cppgl_glVertexAttrib3dNV;
PFNGLVERTEXATTRIB3DVNVPROC cppgl_glVertexAttrib3dvNV;
PFNGLVERTEXATTRIB3FNVPROC cppgl_glVertexAttrib3fNV;
PFNGLVERTEXATTRIB3FVNVPROC cppgl_glVertexAttrib3fvNV;
PFNGLVERTEXATTRIB3SNVPROC cppgl_glVertexAttrib3sNV;
PFNGLVERTEXATTRIB3SVNVPROC cppgl_glVertexAttrib3svNV;
PFNGLVERTEXATTRIB4DNVPROC cppgl_glVertexAttrib4dNV;
PFNGLVERTEXATTRIB4DVNVPROC cppgl_glVertexAttrib4dvNV;
PFNGLVERTEXATTRIB4FNVPROC cppgl_glVertexAttrib4fNV;
PFNGLVERTEXATTRIB4FVNVPROC cppgl_glVertexAttrib4fvNV;
PFNGLVERTEXATTRIB4SNVPROC cppgl_glVertexAttrib4sNV;
PFNGLVERTEXATTRIB4SVNVPROC cppgl_glVertexAttrib4svNV;
PFNGLVERTEXATTRIB4UBNVPROC cppgl_glVertexAttrib4ubNV;
PFNGLVERTEXATTRIB4UBVNVPROC cppgl_glVertexAttrib4ubvNV;
PFNGLVERTEXATTRIBS1DVNVPROC cppgl_glVertexAttribs1dvNV;
PFNGLVERTEXATTRIBS1FVNVPROC cppgl_glVertexAttribs1fvNV;
PFNGLVERTEXATTRIBS1SVNVPROC cppgl_glVertexAttribs1svNV;
PFNGLVERTEXATTRIBS2DVNVPROC cppgl_glVertexAttribs2dvNV;
PFNGLVERTEXATTRIBS2FVNVPROC cppgl_glVertexAttribs2fvNV;
PFNGLVERTEXATTRIBS2SVNVPROC cppgl_glVertexAttribs2svNV;
PFNGLVERTEXATTRIBS3DVNVPROC cppgl_glVertexAttribs3dvNV;
PFNGLVERTEXATTRIBS3FVNVPROC cppgl_glVertexAttribs3fvNV;
PFNGLVERTEXATTRIBS3SVNVPROC cppgl_glVertexAttribs3svNV;
PFNGLVERTEXATTRIBS4DVNVPROC cppgl_glVertexAttribs4dvNV;
PFNGLVERTEXATTRIBS4FVNVPROC cppgl_glVertexAttribs4fvNV;
PFNGLVERTEXATTRIBS4SVNVPROC cppgl_glVertexAttribs4svNV;
PFNGLVERTEXATTRIBS4UBVNVPROC cppgl_glVertexAttribs4ubvNV;
PFNGLVERTEXATTRIBI1IEXTPROC cppgl_glVertexAttribI1iEXT;
PFNGLVERTEXATTRIBI2IEXTPROC cppgl_glVertexAttribI2iEXT;
PFNGLVERTEXATTRIBI3IEXTPROC cppgl_glVertexAttribI3iEXT;
PFNGLVERTEXATTRIBI4IEXTPROC cppgl_glVertexAttribI4iEXT;
PFNGLVERTEXATTRIBI1UIEXTPROC cppgl_glVertexAttribI1uiEXT;
PFNGLVERTEXATTRIBI2UIEXTPROC cppgl_glVertexAttribI2uiEXT;
PFNGLVERTEXATTRIBI3UIEXTPROC cppgl_glVertexAttribI3uiEXT;
PFNGLVERTEXATTRIBI4UIEXTPROC cppgl_glVertexAttribI4uiEXT;
PFNGLVERTEXATTRIBI1IVEXTPROC cppgl_glVertexAttribI1ivEXT;
PFNGLVERTEXATTRIBI2IVEXTPROC cppgl_glVertexAttribI2ivEXT;
PFNGLVERTEXATTRIBI3IVEXTPROC cppgl_glVertexAttribI3ivEXT;
PFNGLVERTEXATTRIBI4IVEXTPROC cppgl_glVertexAttribI4ivEXT;
PFNGLVERTEXATTRIBI1UIVEXTPROC cppgl_glVertexAttribI1uivEXT;
PFNGLVERTEXATTRIBI2UIVEXTPROC cppgl_glVertexAttribI2uivEXT;
PFNGLVERTEXATTRIBI3UIVEXTPROC cppgl_glVertexAttribI3uivEXT;
PFNGLVERTEXATTRIBI4UIVEXTPROC cppgl_glVertexAttribI4uivEXT;
PFNGLVERTEXATTRIBI4BVEXTPROC cppgl_glVertexAttribI4bvEXT;
PFNGLVERTEXATTRIBI4SVEXTPROC cppgl_glVertexAttribI4svEXT;
PFNGLVERTEXATTRIBI4UBVEXTPROC cppgl_glVertexAttribI4ubvEXT;
PFNGLVERTEXATTRIBI4USVEXTPROC cppgl_glVertexAttribI4usvEXT;
PFNGLVERTEXATTRIBIPOINTEREXTPROC cppgl_glVertexAttribIPointerEXT;
PFNGLGETVERTEXATTRIBIIVEXTPROC cppgl_glGetVertexAttribIivEXT;
PFNGLGETVERTEXATTRIBIUIVEXTPROC cppgl_glGetVertexAttribIuivEXT;
PFNGLBEGINVIDEOCAPTURENVPROC cppgl_glBeginVideoCaptureNV;
PFNGLBINDVIDEOCAPTURESTREAMBUFFERNVPROC cppgl_glBindVideoCaptureStreamBufferNV;
PFNGLBINDVIDEOCAPTURESTREAMTEXTURENVPROC cppgl_glBindVideoCaptureStreamTextureNV;
PFNGLENDVIDEOCAPTURENVPROC cppgl_glEndVideoCaptureNV;
PFNGLGETVIDEOCAPTUREIVNVPROC cppgl_glGetVideoCaptureivNV;
PFNGLGETVIDEOCAPTURESTREAMIVNVPROC cppgl_glGetVideoCaptureStreamivNV;
PFNGLGETVIDEOCAPTURESTREAMFVNVPROC cppgl_glGetVideoCaptureStreamfvNV;
PFNGLGETVIDEOCAPTURESTREAMDVNVPROC cppgl_glGetVideoCaptureStreamdvNV;
PFNGLVIDEOCAPTURENVPROC cppgl_glVideoCaptureNV;
PFNGLVIDEOCAPTURESTREAMPARAMETERIVNVPROC cppgl_glVideoCaptureStreamParameterivNV;
PFNGLVIDEOCAPTURESTREAMPARAMETERFVNVPROC cppgl_glVideoCaptureStreamParameterfvNV;
PFNGLVIDEOCAPTURESTREAMPARAMETERDVNVPROC cppgl_glVideoCaptureStreamParameterdvNV;
PFNGLVIEWPORTSWIZZLENVPROC cppgl_glViewportSwizzleNV;
PFNGLMULTITEXCOORD1BOESPROC cppgl_glMultiTexCoord1bOES;
PFNGLMULTITEXCOORD1BVOESPROC cppgl_glMultiTexCoord1bvOES;
PFNGLMULTITEXCOORD2BOESPROC cppgl_glMultiTexCoord2bOES;
PFNGLMULTITEXCOORD2BVOESPROC cppgl_glMultiTexCoord2bvOES;
PFNGLMULTITEXCOORD3BOESPROC cppgl_glMultiTexCoord3bOES;
PFNGLMULTITEXCOORD3BVOESPROC cppgl_glMultiTexCoord3bvOES;
PFNGLMULTITEXCOORD4BOESPROC cppgl_glMultiTexCoord4bOES;
PFNGLMULTITEXCOORD4BVOESPROC cppgl_glMultiTexCoord4bvOES;
PFNGLTEXCOORD1BOESPROC cppgl_glTexCoord1bOES;
PFNGLTEXCOORD1BVOESPROC cppgl_glTexCoord1bvOES;
PFNGLTEXCOORD2BOESPROC cppgl_glTexCoord2bOES;
PFNGLTEXCOORD2BVOESPROC cppgl_glTexCoord2bvOES;
PFNGLTEXCOORD3BOESPROC cppgl_glTexCoord3bOES;
PFNGLTEXCOORD3BVOESPROC cppgl_glTexCoord3bvOES;
PFNGLTEXCOORD4BOESPROC cppgl_glTexCoord4bOES;
PFNGLTEXCOORD4BVOESPROC cppgl_glTexCoord4bvOES;
PFNGLVERTEX2BOESPROC cppgl_glVertex2bOES;
PFNGLVERTEX2BVOESPROC cppgl_glVertex2bvOES;
PFNGLVERTEX3BOESPROC cppgl_glVertex3bOES;
PFNGLVERTEX3BVOESPROC cppgl_glVertex3bvOES;
PFNGLVERTEX4BOESPROC cppgl_glVertex4bOES;
PFNGLVERTEX4BVOESPROC cppgl_glVertex4bvOES;
PFNGLALPHAFUNCXOESPROC cppgl_glAlphaFuncxOES;
PFNGLCLEARCOLORXOESPROC cppgl_glClearColorxOES;
PFNGLCLEARDEPTHXOESPROC cppgl_glClearDepthxOES;
PFNGLCLIPPLANEXOESPROC cppgl_glClipPlanexOES;
PFNGLCOLOR4XOESPROC cppgl_glColor4xOES;
PFNGLDEPTHRANGEXOESPROC cppgl_glDepthRangexOES;
PFNGLFOGXOESPROC cppgl_glFogxOES;
PFNGLFOGXVOESPROC cppgl_glFogxvOES;
PFNGLFRUSTUMXOESPROC cppgl_glFrustumxOES;
PFNGLGETCLIPPLANEXOESPROC cppgl_glGetClipPlanexOES;
PFNGLGETFIXEDVOESPROC cppgl_glGetFixedvOES;
PFNGLGETTEXENVXVOESPROC cppgl_glGetTexEnvxvOES;
PFNGLGETTEXPARAMETERXVOESPROC cppgl_glGetTexParameterxvOES;
PFNGLLIGHTMODELXOESPROC cppgl_glLightModelxOES;
PFNGLLIGHTMODELXVOESPROC cppgl_glLightModelxvOES;
PFNGLLIGHTXOESPROC cppgl_glLightxOES;
PFNGLLIGHTXVOESPROC cppgl_glLightxvOES;
PFNGLLINEWIDTHXOESPROC cppgl_glLineWidthxOES;
PFNGLLOADMATRIXXOESPROC cppgl_glLoadMatrixxOES;
PFNGLMATERIALXOESPROC cppgl_glMaterialxOES;
PFNGLMATERIALXVOESPROC cppgl_glMaterialxvOES;
PFNGLMULTMATRIXXOESPROC cppgl_glMultMatrixxOES;
PFNGLMULTITEXCOORD4XOESPROC cppgl_glMultiTexCoord4xOES;
PFNGLNORMAL3XOESPROC cppgl_glNormal3xOES;
PFNGLORTHOXOESPROC cppgl_glOrthoxOES;
PFNGLPOINTPARAMETERXVOESPROC cppgl_glPointParameterxvOES;
PFNGLPOINTSIZEXOESPROC cppgl_glPointSizexOES;
PFNGLPOLYGONOFFSETXOESPROC cppgl_glPolygonOffsetxOES;
PFNGLROTATEXOESPROC cppgl_glRotatexOES;
PFNGLSCALEXOESPROC cppgl_glScalexOES;
PFNGLTEXENVXOESPROC cppgl_glTexEnvxOES;
PFNGLTEXENVXVOESPROC cppgl_glTexEnvxvOES;
PFNGLTEXPARAMETERXOESPROC cppgl_glTexParameterxOES;
PFNGLTEXPARAMETERXVOESPROC cppgl_glTexParameterxvOES;
PFNGLTRANSLATEXOESPROC cppgl_glTranslatexOES;
PFNGLGETLIGHTXVOESPROC cppgl_glGetLightxvOES;
PFNGLGETMATERIALXVOESPROC cppgl_glGetMaterialxvOES;
PFNGLPOINTPARAMETERXOESPROC cppgl_glPointParameterxOES;
PFNGLSAMPLECOVERAGEXOESPROC cppgl_glSampleCoveragexOES;
PFNGLACCUMXOESPROC cppgl_glAccumxOES;
PFNGLBITMAPXOESPROC cppgl_glBitmapxOES;
PFNGLBLENDCOLORXOESPROC cppgl_glBlendColorxOES;
PFNGLCLEARACCUMXOESPROC cppgl_glClearAccumxOES;
PFNGLCOLOR3XOESPROC cppgl_glColor3xOES;
PFNGLCOLOR3XVOESPROC cppgl_glColor3xvOES;
PFNGLCOLOR4XVOESPROC cppgl_glColor4xvOES;
PFNGLCONVOLUTIONPARAMETERXOESPROC cppgl_glConvolutionParameterxOES;
PFNGLCONVOLUTIONPARAMETERXVOESPROC cppgl_glConvolutionParameterxvOES;
PFNGLEVALCOORD1XOESPROC cppgl_glEvalCoord1xOES;
PFNGLEVALCOORD1XVOESPROC cppgl_glEvalCoord1xvOES;
PFNGLEVALCOORD2XOESPROC cppgl_glEvalCoord2xOES;
PFNGLEVALCOORD2XVOESPROC cppgl_glEvalCoord2xvOES;
PFNGLFEEDBACKBUFFERXOESPROC cppgl_glFeedbackBufferxOES;
PFNGLGETCONVOLUTIONPARAMETERXVOESPROC cppgl_glGetConvolutionParameterxvOES;
PFNGLGETHISTOGRAMPARAMETERXVOESPROC cppgl_glGetHistogramParameterxvOES;
PFNGLGETLIGHTXOESPROC cppgl_glGetLightxOES;
PFNGLGETMAPXVOESPROC cppgl_glGetMapxvOES;
PFNGLGETMATERIALXOESPROC cppgl_glGetMaterialxOES;
PFNGLGETPIXELMAPXVPROC cppgl_glGetPixelMapxv;
PFNGLGETTEXGENXVOESPROC cppgl_glGetTexGenxvOES;
PFNGLGETTEXLEVELPARAMETERXVOESPROC cppgl_glGetTexLevelParameterxvOES;
PFNGLINDEXXOESPROC cppgl_glIndexxOES;
PFNGLINDEXXVOESPROC cppgl_glIndexxvOES;
PFNGLLOADTRANSPOSEMATRIXXOESPROC cppgl_glLoadTransposeMatrixxOES;
PFNGLMAP1XOESPROC cppgl_glMap1xOES;
PFNGLMAP2XOESPROC cppgl_glMap2xOES;
PFNGLMAPGRID1XOESPROC cppgl_glMapGrid1xOES;
PFNGLMAPGRID2XOESPROC cppgl_glMapGrid2xOES;
PFNGLMULTTRANSPOSEMATRIXXOESPROC cppgl_glMultTransposeMatrixxOES;
PFNGLMULTITEXCOORD1XOESPROC cppgl_glMultiTexCoord1xOES;
PFNGLMULTITEXCOORD1XVOESPROC cppgl_glMultiTexCoord1xvOES;
PFNGLMULTITEXCOORD2XOESPROC cppgl_glMultiTexCoord2xOES;
PFNGLMULTITEXCOORD2XVOESPROC cppgl_glMultiTexCoord2xvOES;
PFNGLMULTITEXCOORD3XOESPROC cppgl_glMultiTexCoord3xOES;
PFNGLMULTITEXCOORD3XVOESPROC cppgl_glMultiTexCoord3xvOES;
PFNGLMULTITEXCOORD4XVOESPROC cppgl_glMultiTexCoord4xvOES;
PFNGLNORMAL3XVOESPROC cppgl_glNormal3xvOES;
PFNGLPASSTHROUGHXOESPROC cppgl_glPassThroughxOES;
PFNGLPIXELMAPXPROC cppgl_glPixelMapx;
PFNGLPIXELSTOREXPROC cppgl_glPixelStorex;
PFNGLPIXELTRANSFERXOESPROC cppgl_glPixelTransferxOES;
PFNGLPIXELZOOMXOESPROC cppgl_glPixelZoomxOES;
PFNGLPRIORITIZETEXTURESXOESPROC cppgl_glPrioritizeTexturesxOES;
PFNGLRASTERPOS2XOESPROC cppgl_glRasterPos2xOES;
PFNGLRASTERPOS2XVOESPROC cppgl_glRasterPos2xvOES;
PFNGLRASTERPOS3XOESPROC cppgl_glRasterPos3xOES;
PFNGLRASTERPOS3XVOESPROC cppgl_glRasterPos3xvOES;
PFNGLRASTERPOS4XOESPROC cppgl_glRasterPos4xOES;
PFNGLRASTERPOS4XVOESPROC cppgl_glRasterPos4xvOES;
PFNGLRECTXOESPROC cppgl_glRectxOES;
PFNGLRECTXVOESPROC cppgl_glRectxvOES;
PFNGLTEXCOORD1XOESPROC cppgl_glTexCoord1xOES;
PFNGLTEXCOORD1XVOESPROC cppgl_glTexCoord1xvOES;
PFNGLTEXCOORD2XOESPROC cppgl_glTexCoord2xOES;
PFNGLTEXCOORD2XVOESPROC cppgl_glTexCoord2xvOES;
PFNGLTEXCOORD3XOESPROC cppgl_glTexCoord3xOES;
PFNGLTEXCOORD3XVOESPROC cppgl_glTexCoord3xvOES;
PFNGLTEXCOORD4XOESPROC cppgl_glTexCoord4xOES;
PFNGLTEXCOORD4XVOESPROC cppgl_glTexCoord4xvOES;
PFNGLTEXGENXOESPROC cppgl_glTexGenxOES;
PFNGLTEXGENXVOESPROC cppgl_glTexGenxvOES;
PFNGLVERTEX2XOESPROC cppgl_glVertex2xOES;
PFNGLVERTEX2XVOESPROC cppgl_glVertex2xvOES;
PFNGLVERTEX3XOESPROC cppgl_glVertex3xOES;
PFNGLVERTEX3XVOESPROC cppgl_glVertex3xvOES;
PFNGLVERTEX4XOESPROC cppgl_glVertex4xOES;
PFNGLVERTEX4XVOESPROC cppgl_glVertex4xvOES;
PFNGLQUERYMATRIXXOESPROC cppgl_glQueryMatrixxOES;
PFNGLCLEARDEPTHFOESPROC cppgl_glClearDepthfOES;
PFNGLCLIPPLANEFOESPROC cppgl_glClipPlanefOES;
PFNGLDEPTHRANGEFOESPROC cppgl_glDepthRangefOES;
PFNGLFRUSTUMFOESPROC cppgl_glFrustumfOES;
PFNGLGETCLIPPLANEFOESPROC cppgl_glGetClipPlanefOES;
PFNGLORTHOFOESPROC cppgl_glOrthofOES;
PFNGLFRAMEBUFFERTEXTUREMULTIVIEWOVRPROC cppgl_glFramebufferTextureMultiviewOVR;
PFNGLHINTPGIPROC cppgl_glHintPGI;
PFNGLDETAILTEXFUNCSGISPROC cppgl_glDetailTexFuncSGIS;
PFNGLGETDETAILTEXFUNCSGISPROC cppgl_glGetDetailTexFuncSGIS;
PFNGLFOGFUNCSGISPROC cppgl_glFogFuncSGIS;
PFNGLGETFOGFUNCSGISPROC cppgl_glGetFogFuncSGIS;
PFNGLSAMPLEMASKSGISPROC cppgl_glSampleMaskSGIS;
PFNGLSAMPLEPATTERNSGISPROC cppgl_glSamplePatternSGIS;
PFNGLPIXELTEXGENPARAMETERISGISPROC cppgl_glPixelTexGenParameteriSGIS;
PFNGLPIXELTEXGENPARAMETERIVSGISPROC cppgl_glPixelTexGenParameterivSGIS;
PFNGLPIXELTEXGENPARAMETERFSGISPROC cppgl_glPixelTexGenParameterfSGIS;
PFNGLPIXELTEXGENPARAMETERFVSGISPROC cppgl_glPixelTexGenParameterfvSGIS;
PFNGLGETPIXELTEXGENPARAMETERIVSGISPROC cppgl_glGetPixelTexGenParameterivSGIS;
PFNGLGETPIXELTEXGENPARAMETERFVSGISPROC cppgl_glGetPixelTexGenParameterfvSGIS;
PFNGLPOINTPARAMETERFSGISPROC cppgl_glPointParameterfSGIS;
PFNGLPOINTPARAMETERFVSGISPROC cppgl_glPointParameterfvSGIS;
PFNGLSHARPENTEXFUNCSGISPROC cppgl_glSharpenTexFuncSGIS;
PFNGLGETSHARPENTEXFUNCSGISPROC cppgl_glGetSharpenTexFuncSGIS;
PFNGLTEXIMAGE4DSGISPROC cppgl_glTexImage4DSGIS;
PFNGLTEXSUBIMAGE4DSGISPROC cppgl_glTexSubImage4DSGIS;
PFNGLTEXTURECOLORMASKSGISPROC cppgl_glTextureColorMaskSGIS;
PFNGLGETTEXFILTERFUNCSGISPROC cppgl_glGetTexFilterFuncSGIS;
PFNGLTEXFILTERFUNCSGISPROC cppgl_glTexFilterFuncSGIS;
PFNGLASYNCMARKERSGIXPROC cppgl_glAsyncMarkerSGIX;
PFNGLFINISHASYNCSGIXPROC cppgl_glFinishAsyncSGIX;
PFNGLPOLLASYNCSGIXPROC cppgl_glPollAsyncSGIX;
PFNGLGENASYNCMARKERSSGIXPROC cppgl_glGenAsyncMarkersSGIX;
PFNGLDELETEASYNCMARKERSSGIXPROC cppgl_glDeleteAsyncMarkersSGIX;
PFNGLISASYNCMARKERSGIXPROC cppgl_glIsAsyncMarkerSGIX;
PFNGLFLUSHRASTERSGIXPROC cppgl_glFlushRasterSGIX;
PFNGLFRAGMENTCOLORMATERIALSGIXPROC cppgl_glFragmentColorMaterialSGIX;
PFNGLFRAGMENTLIGHTFSGIXPROC cppgl_glFragmentLightfSGIX;
PFNGLFRAGMENTLIGHTFVSGIXPROC cppgl_glFragmentLightfvSGIX;
PFNGLFRAGMENTLIGHTISGIXPROC cppgl_glFragmentLightiSGIX;
PFNGLFRAGMENTLIGHTIVSGIXPROC cppgl_glFragmentLightivSGIX;
PFNGLFRAGMENTLIGHTMODELFSGIXPROC cppgl_glFragmentLightModelfSGIX;
PFNGLFRAGMENTLIGHTMODELFVSGIXPROC cppgl_glFragmentLightModelfvSGIX;
PFNGLFRAGMENTLIGHTMODELISGIXPROC cppgl_glFragmentLightModeliSGIX;
PFNGLFRAGMENTLIGHTMODELIVSGIXPROC cppgl_glFragmentLightModelivSGIX;
PFNGLFRAGMENTMATERIALFSGIXPROC cppgl_glFragmentMaterialfSGIX;
PFNGLFRAGMENTMATERIALFVSGIXPROC cppgl_glFragmentMaterialfvSGIX;
PFNGLFRAGMENTMATERIALISGIXPROC cppgl_glFragmentMaterialiSGIX;
PFNGLFRAGMENTMATERIALIVSGIXPROC cppgl_glFragmentMaterialivSGIX;
PFNGLGETFRAGMENTLIGHTFVSGIXPROC cppgl_glGetFragmentLightfvSGIX;
PFNGLGETFRAGMENTLIGHTIVSGIXPROC cppgl_glGetFragmentLightivSGIX;
PFNGLGETFRAGMENTMATERIALFVSGIXPROC cppgl_glGetFragmentMaterialfvSGIX;
PFNGLGETFRAGMENTMATERIALIVSGIXPROC cppgl_glGetFragmentMaterialivSGIX;
PFNGLLIGHTENVISGIXPROC cppgl_glLightEnviSGIX;
PFNGLFRAMEZOOMSGIXPROC cppgl_glFrameZoomSGIX;
PFNGLIGLOOINTERFACESGIXPROC cppgl_glIglooInterfaceSGIX;
PFNGLGETINSTRUMENTSSGIXPROC cppgl_glGetInstrumentsSGIX;
PFNGLINSTRUMENTSBUFFERSGIXPROC cppgl_glInstrumentsBufferSGIX;
PFNGLPOLLINSTRUMENTSSGIXPROC cppgl_glPollInstrumentsSGIX;
PFNGLREADINSTRUMENTSSGIXPROC cppgl_glReadInstrumentsSGIX;
PFNGLSTARTINSTRUMENTSSGIXPROC cppgl_glStartInstrumentsSGIX;
PFNGLSTOPINSTRUMENTSSGIXPROC cppgl_glStopInstrumentsSGIX;
PFNGLGETLISTPARAMETERFVSGIXPROC cppgl_glGetListParameterfvSGIX;
PFNGLGETLISTPARAMETERIVSGIXPROC cppgl_glGetListParameterivSGIX;
PFNGLLISTPARAMETERFSGIXPROC cppgl_glListParameterfSGIX;
PFNGLLISTPARAMETERFVSGIXPROC cppgl_glListParameterfvSGIX;
PFNGLLISTPARAMETERISGIXPROC cppgl_glListParameteriSGIX;
PFNGLLISTPARAMETERIVSGIXPROC cppgl_glListParameterivSGIX;
PFNGLPIXELTEXGENSGIXPROC cppgl_glPixelTexGenSGIX;
PFNGLDEFORMATIONMAP3DSGIXPROC cppgl_glDeformationMap3dSGIX;
PFNGLDEFORMATIONMAP3FSGIXPROC cppgl_glDeformationMap3fSGIX;
PFNGLDEFORMSGIXPROC cppgl_glDeformSGIX;
PFNGLLOADIDENTITYDEFORMATIONMAPSGIXPROC cppgl_glLoadIdentityDeformationMapSGIX;
PFNGLREFERENCEPLANESGIXPROC cppgl_glReferencePlaneSGIX;
PFNGLSPRITEPARAMETERFSGIXPROC cppgl_glSpriteParameterfSGIX;
PFNGLSPRITEPARAMETERFVSGIXPROC cppgl_glSpriteParameterfvSGIX;
PFNGLSPRITEPARAMETERISGIXPROC cppgl_glSpriteParameteriSGIX;
PFNGLSPRITEPARAMETERIVSGIXPROC cppgl_glSpriteParameterivSGIX;
PFNGLTAGSAMPLEBUFFERSGIXPROC cppgl_glTagSampleBufferSGIX;
PFNGLCOLORTABLESGIPROC cppgl_glColorTableSGI;
PFNGLCOLORTABLEPARAMETERFVSGIPROC cppgl_glColorTableParameterfvSGI;
PFNGLCOLORTABLEPARAMETERIVSGIPROC cppgl_glColorTableParameterivSGI;
PFNGLCOPYCOLORTABLESGIPROC cppgl_glCopyColorTableSGI;
PFNGLGETCOLORTABLESGIPROC cppgl_glGetColorTableSGI;
PFNGLGETCOLORTABLEPARAMETERFVSGIPROC cppgl_glGetColorTableParameterfvSGI;
PFNGLGETCOLORTABLEPARAMETERIVSGIPROC cppgl_glGetColorTableParameterivSGI;
PFNGLFINISHTEXTURESUNXPROC cppgl_glFinishTextureSUNX;
PFNGLGLOBALALPHAFACTORBSUNPROC cppgl_glGlobalAlphaFactorbSUN;
PFNGLGLOBALALPHAFACTORSSUNPROC cppgl_glGlobalAlphaFactorsSUN;
PFNGLGLOBALALPHAFACTORISUNPROC cppgl_glGlobalAlphaFactoriSUN;
PFNGLGLOBALALPHAFACTORFSUNPROC cppgl_glGlobalAlphaFactorfSUN;
PFNGLGLOBALALPHAFACTORDSUNPROC cppgl_glGlobalAlphaFactordSUN;
PFNGLGLOBALALPHAFACTORUBSUNPROC cppgl_glGlobalAlphaFactorubSUN;
PFNGLGLOBALALPHAFACTORUSSUNPROC cppgl_glGlobalAlphaFactorusSUN;
PFNGLGLOBALALPHAFACTORUISUNPROC cppgl_glGlobalAlphaFactoruiSUN;
PFNGLDRAWMESHARRAYSSUNPROC cppgl_glDrawMeshArraysSUN;
PFNGLREPLACEMENTCODEUISUNPROC cppgl_glReplacementCodeuiSUN;
PFNGLREPLACEMENTCODEUSSUNPROC cppgl_glReplacementCodeusSUN;
PFNGLREPLACEMENTCODEUBSUNPROC cppgl_glReplacementCodeubSUN;
PFNGLREPLACEMENTCODEUIVSUNPROC cppgl_glReplacementCodeuivSUN;
PFNGLREPLACEMENTCODEUSVSUNPROC cppgl_glReplacementCodeusvSUN;
PFNGLREPLACEMENTCODEUBVSUNPROC cppgl_glReplacementCodeubvSUN;
PFNGLREPLACEMENTCODEPOINTERSUNPROC cppgl_glReplacementCodePointerSUN;
PFNGLCOLOR4UBVERTEX2FSUNPROC cppgl_glColor4ubVertex2fSUN;
PFNGLCOLOR4UBVERTEX2FVSUNPROC cppgl_glColor4ubVertex2fvSUN;
PFNGLCOLOR4UBVERTEX3FSUNPROC cppgl_glColor4ubVertex3fSUN;
PFNGLCOLOR4UBVERTEX3FVSUNPROC cppgl_glColor4ubVertex3fvSUN;
PFNGLCOLOR3FVERTEX3FSUNPROC cppgl_glColor3fVertex3fSUN;
PFNGLCOLOR3FVERTEX3FVSUNPROC cppgl_glColor3fVertex3fvSUN;
PFNGLNORMAL3FVERTEX3FSUNPROC cppgl_glNormal3fVertex3fSUN;
PFNGLNORMAL3FVERTEX3FVSUNPROC cppgl_glNormal3fVertex3fvSUN;
PFNGLCOLOR4FNORMAL3FVERTEX3FSUNPROC cppgl_glColor4fNormal3fVertex3fSUN;
PFNGLCOLOR4FNORMAL3FVERTEX3FVSUNPROC cppgl_glColor4fNormal3fVertex3fvSUN;
PFNGLTEXCOORD2FVERTEX3FSUNPROC cppgl_glTexCoord2fVertex3fSUN;
PFNGLTEXCOORD2FVERTEX3FVSUNPROC cppgl_glTexCoord2fVertex3fvSUN;
PFNGLTEXCOORD4FVERTEX4FSUNPROC cppgl_glTexCoord4fVertex4fSUN;
PFNGLTEXCOORD4FVERTEX4FVSUNPROC cppgl_glTexCoord4fVertex4fvSUN;
PFNGLTEXCOORD2FCOLOR4UBVERTEX3FSUNPROC cppgl_glTexCoord2fColor4ubVertex3fSUN;
PFNGLTEXCOORD2FCOLOR4UBVERTEX3FVSUNPROC cppgl_glTexCoord2fColor4ubVertex3fvSUN;
PFNGLTEXCOORD2FCOLOR3FVERTEX3FSUNPROC cppgl_glTexCoord2fColor3fVertex3fSUN;
PFNGLTEXCOORD2FCOLOR3FVERTEX3FVSUNPROC cppgl_glTexCoord2fColor3fVertex3fvSUN;
PFNGLTEXCOORD2FNORMAL3FVERTEX3FSUNPROC cppgl_glTexCoord2fNormal3fVertex3fSUN;
PFNGLTEXCOORD2FNORMAL3FVERTEX3FVSUNPROC cppgl_glTexCoord2fNormal3fVertex3fvSUN;
PFNGLTEXCOORD2FCOLOR4FNORMAL3FVERTEX3FSUNPROC cppgl_glTexCoord2fColor4fNormal3fVertex3fSUN;
PFNGLTEXCOORD2FCOLOR4FNORMAL3FVERTEX3FVSUNPROC cppgl_glTexCoord2fColor4fNormal3fVertex3fvSUN;
PFNGLTEXCOORD4FCOLOR4FNORMAL3FVERTEX4FSUNPROC cppgl_glTexCoord4fColor4fNormal3fVertex4fSUN;
PFNGLTEXCOORD4FCOLOR4FNORMAL3FVERTEX4FVSUNPROC cppgl_glTexCoord4fColor4fNormal3fVertex4fvSUN;
PFNGLREPLACEMENTCODEUIVERTEX3FSUNPROC cppgl_glReplacementCodeuiVertex3fSUN;
PFNGLREPLACEMENTCODEUIVERTEX3FVSUNPROC cppgl_glReplacementCodeuiVertex3fvSUN;
PFNGLREPLACEMENTCODEUICOLOR4UBVERTEX3FSUNPROC cppgl_glReplacementCodeuiColor4ubVertex3fSUN;
PFNGLREPLACEMENTCODEUICOLOR4UBVERTEX3FVSUNPROC cppgl_glReplacementCodeuiColor4ubVertex3fvSUN;
PFNGLREPLACEMENTCODEUICOLOR3FVERTEX3FSUNPROC cppgl_glReplacementCodeuiColor3fVertex3fSUN;
PFNGLREPLACEMENTCODEUICOLOR3FVERTEX3FVSUNPROC cppgl_glReplacementCodeuiColor3fVertex3fvSUN;
PFNGLREPLACEMENTCODEUINORMAL3FVERTEX3FSUNPROC cppgl_glReplacementCodeuiNormal3fVertex3fSUN;
PFNGLREPLACEMENTCODEUINORMAL3FVERTEX3FVSUNPROC cppgl_glReplacementCodeuiNormal3fVertex3fvSUN;
PFNGLREPLACEMENTCODEUICOLOR4FNORMAL3FVERTEX3FSUNPROC cppgl_glReplacementCodeuiColor4fNormal3fVertex3fSUN;
PFNGLREPLACEMENTCODEUICOLOR4FNORMAL3FVERTEX3FVSUNPROC cppgl_glReplacementCodeuiColor4fNormal3fVertex3fvSUN;
PFNGLREPLACEMENTCODEUITEXCOORD2FVERTEX3FSUNPROC cppgl_glReplacementCodeuiTexCoord2fVertex3fSUN;
PFNGLREPLACEMENTCODEUITEXCOORD2FVERTEX3FVSUNPROC cppgl_glReplacementCodeuiTexCoord2fVertex3fvSUN;
PFNGLREPLACEMENTCODEUITEXCOORD2FNORMAL3FVERTEX3FSUNPROC cppgl_glReplacementCodeuiTexCoord2fNormal3fVertex3fSUN;
PFNGLREPLACEMENTCODEUITEXCOORD2FNORMAL3FVERTEX3FVSUNPROC cppgl_glReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN;
PFNGLREPLACEMENTCODEUITEXCOORD2FCOLOR4FNORMAL3FVERTEX3FSUNPROC cppgl_glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN;
PFNGLREPLACEMENTCODEUITEXCOORD2FCOLOR4FNORMAL3FVERTEX3FVSUNPROC cppgl_glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN;
static void load_GL_VERSION_1_0(CPPGLloadproc load) {
	if(!CPPGL_GL_VERSION_1_0) return;
	cppgl_glCullFace = (PFNGLCULLFACEPROC)load("glCullFace");
	cppgl_glFrontFace = (PFNGLFRONTFACEPROC)load("glFrontFace");
	cppgl_glHint = (PFNGLHINTPROC)load("glHint");
	cppgl_glLineWidth = (PFNGLLINEWIDTHPROC)load("glLineWidth");
	cppgl_glPointSize = (PFNGLPOINTSIZEPROC)load("glPointSize");
	cppgl_glPolygonMode = (PFNGLPOLYGONMODEPROC)load("glPolygonMode");
	cppgl_glScissor = (PFNGLSCISSORPROC)load("glScissor");
	cppgl_glTexParameterf = (PFNGLTEXPARAMETERFPROC)load("glTexParameterf");
	cppgl_glTexParameterfv = (PFNGLTEXPARAMETERFVPROC)load("glTexParameterfv");
	cppgl_glTexParameteri = (PFNGLTEXPARAMETERIPROC)load("glTexParameteri");
	cppgl_glTexParameteriv = (PFNGLTEXPARAMETERIVPROC)load("glTexParameteriv");
	cppgl_glTexImage1D = (PFNGLTEXIMAGE1DPROC)load("glTexImage1D");
	cppgl_glTexImage2D = (PFNGLTEXIMAGE2DPROC)load("glTexImage2D");
	cppgl_glDrawBuffer = (PFNGLDRAWBUFFERPROC)load("glDrawBuffer");
	cppgl_glClear = (PFNGLCLEARPROC)load("glClear");
	cppgl_glClearColor = (PFNGLCLEARCOLORPROC)load("glClearColor");
	cppgl_glClearStencil = (PFNGLCLEARSTENCILPROC)load("glClearStencil");
	cppgl_glClearDepth = (PFNGLCLEARDEPTHPROC)load("glClearDepth");
	cppgl_glStencilMask = (PFNGLSTENCILMASKPROC)load("glStencilMask");
	cppgl_glColorMask = (PFNGLCOLORMASKPROC)load("glColorMask");
	cppgl_glDepthMask = (PFNGLDEPTHMASKPROC)load("glDepthMask");
	cppgl_glDisable = (PFNGLDISABLEPROC)load("glDisable");
	cppgl_glEnable = (PFNGLENABLEPROC)load("glEnable");
	cppgl_glFinish = (PFNGLFINISHPROC)load("glFinish");
	cppgl_glFlush = (PFNGLFLUSHPROC)load("glFlush");
	cppgl_glBlendFunc = (PFNGLBLENDFUNCPROC)load("glBlendFunc");
	cppgl_glLogicOp = (PFNGLLOGICOPPROC)load("glLogicOp");
	cppgl_glStencilFunc = (PFNGLSTENCILFUNCPROC)load("glStencilFunc");
	cppgl_glStencilOp = (PFNGLSTENCILOPPROC)load("glStencilOp");
	cppgl_glDepthFunc = (PFNGLDEPTHFUNCPROC)load("glDepthFunc");
	cppgl_glPixelStoref = (PFNGLPIXELSTOREFPROC)load("glPixelStoref");
	cppgl_glPixelStorei = (PFNGLPIXELSTOREIPROC)load("glPixelStorei");
	cppgl_glReadBuffer = (PFNGLREADBUFFERPROC)load("glReadBuffer");
	cppgl_glReadPixels = (PFNGLREADPIXELSPROC)load("glReadPixels");
	cppgl_glGetBooleanv = (PFNGLGETBOOLEANVPROC)load("glGetBooleanv");
	cppgl_glGetDoublev = (PFNGLGETDOUBLEVPROC)load("glGetDoublev");
	cppgl_glGetError = (PFNGLGETERRORPROC)load("glGetError");
	cppgl_glGetFloatv = (PFNGLGETFLOATVPROC)load("glGetFloatv");
	cppgl_glGetIntegerv = (PFNGLGETINTEGERVPROC)load("glGetIntegerv");
	cppgl_glGetString = (PFNGLGETSTRINGPROC)load("glGetString");
	cppgl_glGetTexImage = (PFNGLGETTEXIMAGEPROC)load("glGetTexImage");
	cppgl_glGetTexParameterfv = (PFNGLGETTEXPARAMETERFVPROC)load("glGetTexParameterfv");
	cppgl_glGetTexParameteriv = (PFNGLGETTEXPARAMETERIVPROC)load("glGetTexParameteriv");
	cppgl_glGetTexLevelParameterfv = (PFNGLGETTEXLEVELPARAMETERFVPROC)load("glGetTexLevelParameterfv");
	cppgl_glGetTexLevelParameteriv = (PFNGLGETTEXLEVELPARAMETERIVPROC)load("glGetTexLevelParameteriv");
	cppgl_glIsEnabled = (PFNGLISENABLEDPROC)load("glIsEnabled");
	cppgl_glDepthRange = (PFNGLDEPTHRANGEPROC)load("glDepthRange");
	cppgl_glViewport = (PFNGLVIEWPORTPROC)load("glViewport");
	cppgl_glNewList = (PFNGLNEWLISTPROC)load("glNewList");
	cppgl_glEndList = (PFNGLENDLISTPROC)load("glEndList");
	cppgl_glCallList = (PFNGLCALLLISTPROC)load("glCallList");
	cppgl_glCallLists = (PFNGLCALLLISTSPROC)load("glCallLists");
	cppgl_glDeleteLists = (PFNGLDELETELISTSPROC)load("glDeleteLists");
	cppgl_glGenLists = (PFNGLGENLISTSPROC)load("glGenLists");
	cppgl_glListBase = (PFNGLLISTBASEPROC)load("glListBase");
	cppgl_glBegin = (PFNGLBEGINPROC)load("glBegin");
	cppgl_glBitmap = (PFNGLBITMAPPROC)load("glBitmap");
	cppgl_glColor3b = (PFNGLCOLOR3BPROC)load("glColor3b");
	cppgl_glColor3bv = (PFNGLCOLOR3BVPROC)load("glColor3bv");
	cppgl_glColor3d = (PFNGLCOLOR3DPROC)load("glColor3d");
	cppgl_glColor3dv = (PFNGLCOLOR3DVPROC)load("glColor3dv");
	cppgl_glColor3f = (PFNGLCOLOR3FPROC)load("glColor3f");
	cppgl_glColor3fv = (PFNGLCOLOR3FVPROC)load("glColor3fv");
	cppgl_glColor3i = (PFNGLCOLOR3IPROC)load("glColor3i");
	cppgl_glColor3iv = (PFNGLCOLOR3IVPROC)load("glColor3iv");
	cppgl_glColor3s = (PFNGLCOLOR3SPROC)load("glColor3s");
	cppgl_glColor3sv = (PFNGLCOLOR3SVPROC)load("glColor3sv");
	cppgl_glColor3ub = (PFNGLCOLOR3UBPROC)load("glColor3ub");
	cppgl_glColor3ubv = (PFNGLCOLOR3UBVPROC)load("glColor3ubv");
	cppgl_glColor3ui = (PFNGLCOLOR3UIPROC)load("glColor3ui");
	cppgl_glColor3uiv = (PFNGLCOLOR3UIVPROC)load("glColor3uiv");
	cppgl_glColor3us = (PFNGLCOLOR3USPROC)load("glColor3us");
	cppgl_glColor3usv = (PFNGLCOLOR3USVPROC)load("glColor3usv");
	cppgl_glColor4b = (PFNGLCOLOR4BPROC)load("glColor4b");
	cppgl_glColor4bv = (PFNGLCOLOR4BVPROC)load("glColor4bv");
	cppgl_glColor4d = (PFNGLCOLOR4DPROC)load("glColor4d");
	cppgl_glColor4dv = (PFNGLCOLOR4DVPROC)load("glColor4dv");
	cppgl_glColor4f = (PFNGLCOLOR4FPROC)load("glColor4f");
	cppgl_glColor4fv = (PFNGLCOLOR4FVPROC)load("glColor4fv");
	cppgl_glColor4i = (PFNGLCOLOR4IPROC)load("glColor4i");
	cppgl_glColor4iv = (PFNGLCOLOR4IVPROC)load("glColor4iv");
	cppgl_glColor4s = (PFNGLCOLOR4SPROC)load("glColor4s");
	cppgl_glColor4sv = (PFNGLCOLOR4SVPROC)load("glColor4sv");
	cppgl_glColor4ub = (PFNGLCOLOR4UBPROC)load("glColor4ub");
	cppgl_glColor4ubv = (PFNGLCOLOR4UBVPROC)load("glColor4ubv");
	cppgl_glColor4ui = (PFNGLCOLOR4UIPROC)load("glColor4ui");
	cppgl_glColor4uiv = (PFNGLCOLOR4UIVPROC)load("glColor4uiv");
	cppgl_glColor4us = (PFNGLCOLOR4USPROC)load("glColor4us");
	cppgl_glColor4usv = (PFNGLCOLOR4USVPROC)load("glColor4usv");
	cppgl_glEdgeFlag = (PFNGLEDGEFLAGPROC)load("glEdgeFlag");
	cppgl_glEdgeFlagv = (PFNGLEDGEFLAGVPROC)load("glEdgeFlagv");
	cppgl_glEnd = (PFNGLENDPROC)load("glEnd");
	cppgl_glIndexd = (PFNGLINDEXDPROC)load("glIndexd");
	cppgl_glIndexdv = (PFNGLINDEXDVPROC)load("glIndexdv");
	cppgl_glIndexf = (PFNGLINDEXFPROC)load("glIndexf");
	cppgl_glIndexfv = (PFNGLINDEXFVPROC)load("glIndexfv");
	cppgl_glIndexi = (PFNGLINDEXIPROC)load("glIndexi");
	cppgl_glIndexiv = (PFNGLINDEXIVPROC)load("glIndexiv");
	cppgl_glIndexs = (PFNGLINDEXSPROC)load("glIndexs");
	cppgl_glIndexsv = (PFNGLINDEXSVPROC)load("glIndexsv");
	cppgl_glNormal3b = (PFNGLNORMAL3BPROC)load("glNormal3b");
	cppgl_glNormal3bv = (PFNGLNORMAL3BVPROC)load("glNormal3bv");
	cppgl_glNormal3d = (PFNGLNORMAL3DPROC)load("glNormal3d");
	cppgl_glNormal3dv = (PFNGLNORMAL3DVPROC)load("glNormal3dv");
	cppgl_glNormal3f = (PFNGLNORMAL3FPROC)load("glNormal3f");
	cppgl_glNormal3fv = (PFNGLNORMAL3FVPROC)load("glNormal3fv");
	cppgl_glNormal3i = (PFNGLNORMAL3IPROC)load("glNormal3i");
	cppgl_glNormal3iv = (PFNGLNORMAL3IVPROC)load("glNormal3iv");
	cppgl_glNormal3s = (PFNGLNORMAL3SPROC)load("glNormal3s");
	cppgl_glNormal3sv = (PFNGLNORMAL3SVPROC)load("glNormal3sv");
	cppgl_glRasterPos2d = (PFNGLRASTERPOS2DPROC)load("glRasterPos2d");
	cppgl_glRasterPos2dv = (PFNGLRASTERPOS2DVPROC)load("glRasterPos2dv");
	cppgl_glRasterPos2f = (PFNGLRASTERPOS2FPROC)load("glRasterPos2f");
	cppgl_glRasterPos2fv = (PFNGLRASTERPOS2FVPROC)load("glRasterPos2fv");
	cppgl_glRasterPos2i = (PFNGLRASTERPOS2IPROC)load("glRasterPos2i");
	cppgl_glRasterPos2iv = (PFNGLRASTERPOS2IVPROC)load("glRasterPos2iv");
	cppgl_glRasterPos2s = (PFNGLRASTERPOS2SPROC)load("glRasterPos2s");
	cppgl_glRasterPos2sv = (PFNGLRASTERPOS2SVPROC)load("glRasterPos2sv");
	cppgl_glRasterPos3d = (PFNGLRASTERPOS3DPROC)load("glRasterPos3d");
	cppgl_glRasterPos3dv = (PFNGLRASTERPOS3DVPROC)load("glRasterPos3dv");
	cppgl_glRasterPos3f = (PFNGLRASTERPOS3FPROC)load("glRasterPos3f");
	cppgl_glRasterPos3fv = (PFNGLRASTERPOS3FVPROC)load("glRasterPos3fv");
	cppgl_glRasterPos3i = (PFNGLRASTERPOS3IPROC)load("glRasterPos3i");
	cppgl_glRasterPos3iv = (PFNGLRASTERPOS3IVPROC)load("glRasterPos3iv");
	cppgl_glRasterPos3s = (PFNGLRASTERPOS3SPROC)load("glRasterPos3s");
	cppgl_glRasterPos3sv = (PFNGLRASTERPOS3SVPROC)load("glRasterPos3sv");
	cppgl_glRasterPos4d = (PFNGLRASTERPOS4DPROC)load("glRasterPos4d");
	cppgl_glRasterPos4dv = (PFNGLRASTERPOS4DVPROC)load("glRasterPos4dv");
	cppgl_glRasterPos4f = (PFNGLRASTERPOS4FPROC)load("glRasterPos4f");
	cppgl_glRasterPos4fv = (PFNGLRASTERPOS4FVPROC)load("glRasterPos4fv");
	cppgl_glRasterPos4i = (PFNGLRASTERPOS4IPROC)load("glRasterPos4i");
	cppgl_glRasterPos4iv = (PFNGLRASTERPOS4IVPROC)load("glRasterPos4iv");
	cppgl_glRasterPos4s = (PFNGLRASTERPOS4SPROC)load("glRasterPos4s");
	cppgl_glRasterPos4sv = (PFNGLRASTERPOS4SVPROC)load("glRasterPos4sv");
	cppgl_glRectd = (PFNGLRECTDPROC)load("glRectd");
	cppgl_glRectdv = (PFNGLRECTDVPROC)load("glRectdv");
	cppgl_glRectf = (PFNGLRECTFPROC)load("glRectf");
	cppgl_glRectfv = (PFNGLRECTFVPROC)load("glRectfv");
	cppgl_glRecti = (PFNGLRECTIPROC)load("glRecti");
	cppgl_glRectiv = (PFNGLRECTIVPROC)load("glRectiv");
	cppgl_glRects = (PFNGLRECTSPROC)load("glRects");
	cppgl_glRectsv = (PFNGLRECTSVPROC)load("glRectsv");
	cppgl_glTexCoord1d = (PFNGLTEXCOORD1DPROC)load("glTexCoord1d");
	cppgl_glTexCoord1dv = (PFNGLTEXCOORD1DVPROC)load("glTexCoord1dv");
	cppgl_glTexCoord1f = (PFNGLTEXCOORD1FPROC)load("glTexCoord1f");
	cppgl_glTexCoord1fv = (PFNGLTEXCOORD1FVPROC)load("glTexCoord1fv");
	cppgl_glTexCoord1i = (PFNGLTEXCOORD1IPROC)load("glTexCoord1i");
	cppgl_glTexCoord1iv = (PFNGLTEXCOORD1IVPROC)load("glTexCoord1iv");
	cppgl_glTexCoord1s = (PFNGLTEXCOORD1SPROC)load("glTexCoord1s");
	cppgl_glTexCoord1sv = (PFNGLTEXCOORD1SVPROC)load("glTexCoord1sv");
	cppgl_glTexCoord2d = (PFNGLTEXCOORD2DPROC)load("glTexCoord2d");
	cppgl_glTexCoord2dv = (PFNGLTEXCOORD2DVPROC)load("glTexCoord2dv");
	cppgl_glTexCoord2f = (PFNGLTEXCOORD2FPROC)load("glTexCoord2f");
	cppgl_glTexCoord2fv = (PFNGLTEXCOORD2FVPROC)load("glTexCoord2fv");
	cppgl_glTexCoord2i = (PFNGLTEXCOORD2IPROC)load("glTexCoord2i");
	cppgl_glTexCoord2iv = (PFNGLTEXCOORD2IVPROC)load("glTexCoord2iv");
	cppgl_glTexCoord2s = (PFNGLTEXCOORD2SPROC)load("glTexCoord2s");
	cppgl_glTexCoord2sv = (PFNGLTEXCOORD2SVPROC)load("glTexCoord2sv");
	cppgl_glTexCoord3d = (PFNGLTEXCOORD3DPROC)load("glTexCoord3d");
	cppgl_glTexCoord3dv = (PFNGLTEXCOORD3DVPROC)load("glTexCoord3dv");
	cppgl_glTexCoord3f = (PFNGLTEXCOORD3FPROC)load("glTexCoord3f");
	cppgl_glTexCoord3fv = (PFNGLTEXCOORD3FVPROC)load("glTexCoord3fv");
	cppgl_glTexCoord3i = (PFNGLTEXCOORD3IPROC)load("glTexCoord3i");
	cppgl_glTexCoord3iv = (PFNGLTEXCOORD3IVPROC)load("glTexCoord3iv");
	cppgl_glTexCoord3s = (PFNGLTEXCOORD3SPROC)load("glTexCoord3s");
	cppgl_glTexCoord3sv = (PFNGLTEXCOORD3SVPROC)load("glTexCoord3sv");
	cppgl_glTexCoord4d = (PFNGLTEXCOORD4DPROC)load("glTexCoord4d");
	cppgl_glTexCoord4dv = (PFNGLTEXCOORD4DVPROC)load("glTexCoord4dv");
	cppgl_glTexCoord4f = (PFNGLTEXCOORD4FPROC)load("glTexCoord4f");
	cppgl_glTexCoord4fv = (PFNGLTEXCOORD4FVPROC)load("glTexCoord4fv");
	cppgl_glTexCoord4i = (PFNGLTEXCOORD4IPROC)load("glTexCoord4i");
	cppgl_glTexCoord4iv = (PFNGLTEXCOORD4IVPROC)load("glTexCoord4iv");
	cppgl_glTexCoord4s = (PFNGLTEXCOORD4SPROC)load("glTexCoord4s");
	cppgl_glTexCoord4sv = (PFNGLTEXCOORD4SVPROC)load("glTexCoord4sv");
	cppgl_glVertex2d = (PFNGLVERTEX2DPROC)load("glVertex2d");
	cppgl_glVertex2dv = (PFNGLVERTEX2DVPROC)load("glVertex2dv");
	cppgl_glVertex2f = (PFNGLVERTEX2FPROC)load("glVertex2f");
	cppgl_glVertex2fv = (PFNGLVERTEX2FVPROC)load("glVertex2fv");
	cppgl_glVertex2i = (PFNGLVERTEX2IPROC)load("glVertex2i");
	cppgl_glVertex2iv = (PFNGLVERTEX2IVPROC)load("glVertex2iv");
	cppgl_glVertex2s = (PFNGLVERTEX2SPROC)load("glVertex2s");
	cppgl_glVertex2sv = (PFNGLVERTEX2SVPROC)load("glVertex2sv");
	cppgl_glVertex3d = (PFNGLVERTEX3DPROC)load("glVertex3d");
	cppgl_glVertex3dv = (PFNGLVERTEX3DVPROC)load("glVertex3dv");
	cppgl_glVertex3f = (PFNGLVERTEX3FPROC)load("glVertex3f");
	cppgl_glVertex3fv = (PFNGLVERTEX3FVPROC)load("glVertex3fv");
	cppgl_glVertex3i = (PFNGLVERTEX3IPROC)load("glVertex3i");
	cppgl_glVertex3iv = (PFNGLVERTEX3IVPROC)load("glVertex3iv");
	cppgl_glVertex3s = (PFNGLVERTEX3SPROC)load("glVertex3s");
	cppgl_glVertex3sv = (PFNGLVERTEX3SVPROC)load("glVertex3sv");
	cppgl_glVertex4d = (PFNGLVERTEX4DPROC)load("glVertex4d");
	cppgl_glVertex4dv = (PFNGLVERTEX4DVPROC)load("glVertex4dv");
	cppgl_glVertex4f = (PFNGLVERTEX4FPROC)load("glVertex4f");
	cppgl_glVertex4fv = (PFNGLVERTEX4FVPROC)load("glVertex4fv");
	cppgl_glVertex4i = (PFNGLVERTEX4IPROC)load("glVertex4i");
	cppgl_glVertex4iv = (PFNGLVERTEX4IVPROC)load("glVertex4iv");
	cppgl_glVertex4s = (PFNGLVERTEX4SPROC)load("glVertex4s");
	cppgl_glVertex4sv = (PFNGLVERTEX4SVPROC)load("glVertex4sv");
	cppgl_glClipPlane = (PFNGLCLIPPLANEPROC)load("glClipPlane");
	cppgl_glColorMaterial = (PFNGLCOLORMATERIALPROC)load("glColorMaterial");
	cppgl_glFogf = (PFNGLFOGFPROC)load("glFogf");
	cppgl_glFogfv = (PFNGLFOGFVPROC)load("glFogfv");
	cppgl_glFogi = (PFNGLFOGIPROC)load("glFogi");
	cppgl_glFogiv = (PFNGLFOGIVPROC)load("glFogiv");
	cppgl_glLightf = (PFNGLLIGHTFPROC)load("glLightf");
	cppgl_glLightfv = (PFNGLLIGHTFVPROC)load("glLightfv");
	cppgl_glLighti = (PFNGLLIGHTIPROC)load("glLighti");
	cppgl_glLightiv = (PFNGLLIGHTIVPROC)load("glLightiv");
	cppgl_glLightModelf = (PFNGLLIGHTMODELFPROC)load("glLightModelf");
	cppgl_glLightModelfv = (PFNGLLIGHTMODELFVPROC)load("glLightModelfv");
	cppgl_glLightModeli = (PFNGLLIGHTMODELIPROC)load("glLightModeli");
	cppgl_glLightModeliv = (PFNGLLIGHTMODELIVPROC)load("glLightModeliv");
	cppgl_glLineStipple = (PFNGLLINESTIPPLEPROC)load("glLineStipple");
	cppgl_glMaterialf = (PFNGLMATERIALFPROC)load("glMaterialf");
	cppgl_glMaterialfv = (PFNGLMATERIALFVPROC)load("glMaterialfv");
	cppgl_glMateriali = (PFNGLMATERIALIPROC)load("glMateriali");
	cppgl_glMaterialiv = (PFNGLMATERIALIVPROC)load("glMaterialiv");
	cppgl_glPolygonStipple = (PFNGLPOLYGONSTIPPLEPROC)load("glPolygonStipple");
	cppgl_glShadeModel = (PFNGLSHADEMODELPROC)load("glShadeModel");
	cppgl_glTexEnvf = (PFNGLTEXENVFPROC)load("glTexEnvf");
	cppgl_glTexEnvfv = (PFNGLTEXENVFVPROC)load("glTexEnvfv");
	cppgl_glTexEnvi = (PFNGLTEXENVIPROC)load("glTexEnvi");
	cppgl_glTexEnviv = (PFNGLTEXENVIVPROC)load("glTexEnviv");
	cppgl_glTexGend = (PFNGLTEXGENDPROC)load("glTexGend");
	cppgl_glTexGendv = (PFNGLTEXGENDVPROC)load("glTexGendv");
	cppgl_glTexGenf = (PFNGLTEXGENFPROC)load("glTexGenf");
	cppgl_glTexGenfv = (PFNGLTEXGENFVPROC)load("glTexGenfv");
	cppgl_glTexGeni = (PFNGLTEXGENIPROC)load("glTexGeni");
	cppgl_glTexGeniv = (PFNGLTEXGENIVPROC)load("glTexGeniv");
	cppgl_glFeedbackBuffer = (PFNGLFEEDBACKBUFFERPROC)load("glFeedbackBuffer");
	cppgl_glSelectBuffer = (PFNGLSELECTBUFFERPROC)load("glSelectBuffer");
	cppgl_glRenderMode = (PFNGLRENDERMODEPROC)load("glRenderMode");
	cppgl_glInitNames = (PFNGLINITNAMESPROC)load("glInitNames");
	cppgl_glLoadName = (PFNGLLOADNAMEPROC)load("glLoadName");
	cppgl_glPassThrough = (PFNGLPASSTHROUGHPROC)load("glPassThrough");
	cppgl_glPopName = (PFNGLPOPNAMEPROC)load("glPopName");
	cppgl_glPushName = (PFNGLPUSHNAMEPROC)load("glPushName");
	cppgl_glClearAccum = (PFNGLCLEARACCUMPROC)load("glClearAccum");
	cppgl_glClearIndex = (PFNGLCLEARINDEXPROC)load("glClearIndex");
	cppgl_glIndexMask = (PFNGLINDEXMASKPROC)load("glIndexMask");
	cppgl_glAccum = (PFNGLACCUMPROC)load("glAccum");
	cppgl_glPopAttrib = (PFNGLPOPATTRIBPROC)load("glPopAttrib");
	cppgl_glPushAttrib = (PFNGLPUSHATTRIBPROC)load("glPushAttrib");
	cppgl_glMap1d = (PFNGLMAP1DPROC)load("glMap1d");
	cppgl_glMap1f = (PFNGLMAP1FPROC)load("glMap1f");
	cppgl_glMap2d = (PFNGLMAP2DPROC)load("glMap2d");
	cppgl_glMap2f = (PFNGLMAP2FPROC)load("glMap2f");
	cppgl_glMapGrid1d = (PFNGLMAPGRID1DPROC)load("glMapGrid1d");
	cppgl_glMapGrid1f = (PFNGLMAPGRID1FPROC)load("glMapGrid1f");
	cppgl_glMapGrid2d = (PFNGLMAPGRID2DPROC)load("glMapGrid2d");
	cppgl_glMapGrid2f = (PFNGLMAPGRID2FPROC)load("glMapGrid2f");
	cppgl_glEvalCoord1d = (PFNGLEVALCOORD1DPROC)load("glEvalCoord1d");
	cppgl_glEvalCoord1dv = (PFNGLEVALCOORD1DVPROC)load("glEvalCoord1dv");
	cppgl_glEvalCoord1f = (PFNGLEVALCOORD1FPROC)load("glEvalCoord1f");
	cppgl_glEvalCoord1fv = (PFNGLEVALCOORD1FVPROC)load("glEvalCoord1fv");
	cppgl_glEvalCoord2d = (PFNGLEVALCOORD2DPROC)load("glEvalCoord2d");
	cppgl_glEvalCoord2dv = (PFNGLEVALCOORD2DVPROC)load("glEvalCoord2dv");
	cppgl_glEvalCoord2f = (PFNGLEVALCOORD2FPROC)load("glEvalCoord2f");
	cppgl_glEvalCoord2fv = (PFNGLEVALCOORD2FVPROC)load("glEvalCoord2fv");
	cppgl_glEvalMesh1 = (PFNGLEVALMESH1PROC)load("glEvalMesh1");
	cppgl_glEvalPoint1 = (PFNGLEVALPOINT1PROC)load("glEvalPoint1");
	cppgl_glEvalMesh2 = (PFNGLEVALMESH2PROC)load("glEvalMesh2");
	cppgl_glEvalPoint2 = (PFNGLEVALPOINT2PROC)load("glEvalPoint2");
	cppgl_glAlphaFunc = (PFNGLALPHAFUNCPROC)load("glAlphaFunc");
	cppgl_glPixelZoom = (PFNGLPIXELZOOMPROC)load("glPixelZoom");
	cppgl_glPixelTransferf = (PFNGLPIXELTRANSFERFPROC)load("glPixelTransferf");
	cppgl_glPixelTransferi = (PFNGLPIXELTRANSFERIPROC)load("glPixelTransferi");
	cppgl_glPixelMapfv = (PFNGLPIXELMAPFVPROC)load("glPixelMapfv");
	cppgl_glPixelMapuiv = (PFNGLPIXELMAPUIVPROC)load("glPixelMapuiv");
	cppgl_glPixelMapusv = (PFNGLPIXELMAPUSVPROC)load("glPixelMapusv");
	cppgl_glCopyPixels = (PFNGLCOPYPIXELSPROC)load("glCopyPixels");
	cppgl_glDrawPixels = (PFNGLDRAWPIXELSPROC)load("glDrawPixels");
	cppgl_glGetClipPlane = (PFNGLGETCLIPPLANEPROC)load("glGetClipPlane");
	cppgl_glGetLightfv = (PFNGLGETLIGHTFVPROC)load("glGetLightfv");
	cppgl_glGetLightiv = (PFNGLGETLIGHTIVPROC)load("glGetLightiv");
	cppgl_glGetMapdv = (PFNGLGETMAPDVPROC)load("glGetMapdv");
	cppgl_glGetMapfv = (PFNGLGETMAPFVPROC)load("glGetMapfv");
	cppgl_glGetMapiv = (PFNGLGETMAPIVPROC)load("glGetMapiv");
	cppgl_glGetMaterialfv = (PFNGLGETMATERIALFVPROC)load("glGetMaterialfv");
	cppgl_glGetMaterialiv = (PFNGLGETMATERIALIVPROC)load("glGetMaterialiv");
	cppgl_glGetPixelMapfv = (PFNGLGETPIXELMAPFVPROC)load("glGetPixelMapfv");
	cppgl_glGetPixelMapuiv = (PFNGLGETPIXELMAPUIVPROC)load("glGetPixelMapuiv");
	cppgl_glGetPixelMapusv = (PFNGLGETPIXELMAPUSVPROC)load("glGetPixelMapusv");
	cppgl_glGetPolygonStipple = (PFNGLGETPOLYGONSTIPPLEPROC)load("glGetPolygonStipple");
	cppgl_glGetTexEnvfv = (PFNGLGETTEXENVFVPROC)load("glGetTexEnvfv");
	cppgl_glGetTexEnviv = (PFNGLGETTEXENVIVPROC)load("glGetTexEnviv");
	cppgl_glGetTexGendv = (PFNGLGETTEXGENDVPROC)load("glGetTexGendv");
	cppgl_glGetTexGenfv = (PFNGLGETTEXGENFVPROC)load("glGetTexGenfv");
	cppgl_glGetTexGeniv = (PFNGLGETTEXGENIVPROC)load("glGetTexGeniv");
	cppgl_glIsList = (PFNGLISLISTPROC)load("glIsList");
	cppgl_glFrustum = (PFNGLFRUSTUMPROC)load("glFrustum");
	cppgl_glLoadIdentity = (PFNGLLOADIDENTITYPROC)load("glLoadIdentity");
	cppgl_glLoadMatrixf = (PFNGLLOADMATRIXFPROC)load("glLoadMatrixf");
	cppgl_glLoadMatrixd = (PFNGLLOADMATRIXDPROC)load("glLoadMatrixd");
	cppgl_glMatrixMode = (PFNGLMATRIXMODEPROC)load("glMatrixMode");
	cppgl_glMultMatrixf = (PFNGLMULTMATRIXFPROC)load("glMultMatrixf");
	cppgl_glMultMatrixd = (PFNGLMULTMATRIXDPROC)load("glMultMatrixd");
	cppgl_glOrtho = (PFNGLORTHOPROC)load("glOrtho");
	cppgl_glPopMatrix = (PFNGLPOPMATRIXPROC)load("glPopMatrix");
	cppgl_glPushMatrix = (PFNGLPUSHMATRIXPROC)load("glPushMatrix");
	cppgl_glRotated = (PFNGLROTATEDPROC)load("glRotated");
	cppgl_glRotatef = (PFNGLROTATEFPROC)load("glRotatef");
	cppgl_glScaled = (PFNGLSCALEDPROC)load("glScaled");
	cppgl_glScalef = (PFNGLSCALEFPROC)load("glScalef");
	cppgl_glTranslated = (PFNGLTRANSLATEDPROC)load("glTranslated");
	cppgl_glTranslatef = (PFNGLTRANSLATEFPROC)load("glTranslatef");
}
static void load_GL_VERSION_1_1(CPPGLloadproc load) {
	if(!CPPGL_GL_VERSION_1_1) return;
	cppgl_glDrawArrays = (PFNGLDRAWARRAYSPROC)load("glDrawArrays");
	cppgl_glDrawElements = (PFNGLDRAWELEMENTSPROC)load("glDrawElements");
	cppgl_glGetPointerv = (PFNGLGETPOINTERVPROC)load("glGetPointerv");
	cppgl_glPolygonOffset = (PFNGLPOLYGONOFFSETPROC)load("glPolygonOffset");
	cppgl_glCopyTexImage1D = (PFNGLCOPYTEXIMAGE1DPROC)load("glCopyTexImage1D");
	cppgl_glCopyTexImage2D = (PFNGLCOPYTEXIMAGE2DPROC)load("glCopyTexImage2D");
	cppgl_glCopyTexSubImage1D = (PFNGLCOPYTEXSUBIMAGE1DPROC)load("glCopyTexSubImage1D");
	cppgl_glCopyTexSubImage2D = (PFNGLCOPYTEXSUBIMAGE2DPROC)load("glCopyTexSubImage2D");
	cppgl_glTexSubImage1D = (PFNGLTEXSUBIMAGE1DPROC)load("glTexSubImage1D");
	cppgl_glTexSubImage2D = (PFNGLTEXSUBIMAGE2DPROC)load("glTexSubImage2D");
	cppgl_glBindTexture = (PFNGLBINDTEXTUREPROC)load("glBindTexture");
	cppgl_glDeleteTextures = (PFNGLDELETETEXTURESPROC)load("glDeleteTextures");
	cppgl_glGenTextures = (PFNGLGENTEXTURESPROC)load("glGenTextures");
	cppgl_glIsTexture = (PFNGLISTEXTUREPROC)load("glIsTexture");
	cppgl_glArrayElement = (PFNGLARRAYELEMENTPROC)load("glArrayElement");
	cppgl_glColorPointer = (PFNGLCOLORPOINTERPROC)load("glColorPointer");
	cppgl_glDisableClientState = (PFNGLDISABLECLIENTSTATEPROC)load("glDisableClientState");
	cppgl_glEdgeFlagPointer = (PFNGLEDGEFLAGPOINTERPROC)load("glEdgeFlagPointer");
	cppgl_glEnableClientState = (PFNGLENABLECLIENTSTATEPROC)load("glEnableClientState");
	cppgl_glIndexPointer = (PFNGLINDEXPOINTERPROC)load("glIndexPointer");
	cppgl_glInterleavedArrays = (PFNGLINTERLEAVEDARRAYSPROC)load("glInterleavedArrays");
	cppgl_glNormalPointer = (PFNGLNORMALPOINTERPROC)load("glNormalPointer");
	cppgl_glTexCoordPointer = (PFNGLTEXCOORDPOINTERPROC)load("glTexCoordPointer");
	cppgl_glVertexPointer = (PFNGLVERTEXPOINTERPROC)load("glVertexPointer");
	cppgl_glAreTexturesResident = (PFNGLARETEXTURESRESIDENTPROC)load("glAreTexturesResident");
	cppgl_glPrioritizeTextures = (PFNGLPRIORITIZETEXTURESPROC)load("glPrioritizeTextures");
	cppgl_glIndexub = (PFNGLINDEXUBPROC)load("glIndexub");
	cppgl_glIndexubv = (PFNGLINDEXUBVPROC)load("glIndexubv");
	cppgl_glPopClientAttrib = (PFNGLPOPCLIENTATTRIBPROC)load("glPopClientAttrib");
	cppgl_glPushClientAttrib = (PFNGLPUSHCLIENTATTRIBPROC)load("glPushClientAttrib");
}
static void load_GL_VERSION_1_2(CPPGLloadproc load) {
	if(!CPPGL_GL_VERSION_1_2) return;
	cppgl_glDrawRangeElements = (PFNGLDRAWRANGEELEMENTSPROC)load("glDrawRangeElements");
	cppgl_glTexImage3D = (PFNGLTEXIMAGE3DPROC)load("glTexImage3D");
	cppgl_glTexSubImage3D = (PFNGLTEXSUBIMAGE3DPROC)load("glTexSubImage3D");
	cppgl_glCopyTexSubImage3D = (PFNGLCOPYTEXSUBIMAGE3DPROC)load("glCopyTexSubImage3D");
}
static void load_GL_VERSION_1_3(CPPGLloadproc load) {
	if(!CPPGL_GL_VERSION_1_3) return;
	cppgl_glActiveTexture = (PFNGLACTIVETEXTUREPROC)load("glActiveTexture");
	cppgl_glSampleCoverage = (PFNGLSAMPLECOVERAGEPROC)load("glSampleCoverage");
	cppgl_glCompressedTexImage3D = (PFNGLCOMPRESSEDTEXIMAGE3DPROC)load("glCompressedTexImage3D");
	cppgl_glCompressedTexImage2D = (PFNGLCOMPRESSEDTEXIMAGE2DPROC)load("glCompressedTexImage2D");
	cppgl_glCompressedTexImage1D = (PFNGLCOMPRESSEDTEXIMAGE1DPROC)load("glCompressedTexImage1D");
	cppgl_glCompressedTexSubImage3D = (PFNGLCOMPRESSEDTEXSUBIMAGE3DPROC)load("glCompressedTexSubImage3D");
	cppgl_glCompressedTexSubImage2D = (PFNGLCOMPRESSEDTEXSUBIMAGE2DPROC)load("glCompressedTexSubImage2D");
	cppgl_glCompressedTexSubImage1D = (PFNGLCOMPRESSEDTEXSUBIMAGE1DPROC)load("glCompressedTexSubImage1D");
	cppgl_glGetCompressedTexImage = (PFNGLGETCOMPRESSEDTEXIMAGEPROC)load("glGetCompressedTexImage");
	cppgl_glClientActiveTexture = (PFNGLCLIENTACTIVETEXTUREPROC)load("glClientActiveTexture");
	cppgl_glMultiTexCoord1d = (PFNGLMULTITEXCOORD1DPROC)load("glMultiTexCoord1d");
	cppgl_glMultiTexCoord1dv = (PFNGLMULTITEXCOORD1DVPROC)load("glMultiTexCoord1dv");
	cppgl_glMultiTexCoord1f = (PFNGLMULTITEXCOORD1FPROC)load("glMultiTexCoord1f");
	cppgl_glMultiTexCoord1fv = (PFNGLMULTITEXCOORD1FVPROC)load("glMultiTexCoord1fv");
	cppgl_glMultiTexCoord1i = (PFNGLMULTITEXCOORD1IPROC)load("glMultiTexCoord1i");
	cppgl_glMultiTexCoord1iv = (PFNGLMULTITEXCOORD1IVPROC)load("glMultiTexCoord1iv");
	cppgl_glMultiTexCoord1s = (PFNGLMULTITEXCOORD1SPROC)load("glMultiTexCoord1s");
	cppgl_glMultiTexCoord1sv = (PFNGLMULTITEXCOORD1SVPROC)load("glMultiTexCoord1sv");
	cppgl_glMultiTexCoord2d = (PFNGLMULTITEXCOORD2DPROC)load("glMultiTexCoord2d");
	cppgl_glMultiTexCoord2dv = (PFNGLMULTITEXCOORD2DVPROC)load("glMultiTexCoord2dv");
	cppgl_glMultiTexCoord2f = (PFNGLMULTITEXCOORD2FPROC)load("glMultiTexCoord2f");
	cppgl_glMultiTexCoord2fv = (PFNGLMULTITEXCOORD2FVPROC)load("glMultiTexCoord2fv");
	cppgl_glMultiTexCoord2i = (PFNGLMULTITEXCOORD2IPROC)load("glMultiTexCoord2i");
	cppgl_glMultiTexCoord2iv = (PFNGLMULTITEXCOORD2IVPROC)load("glMultiTexCoord2iv");
	cppgl_glMultiTexCoord2s = (PFNGLMULTITEXCOORD2SPROC)load("glMultiTexCoord2s");
	cppgl_glMultiTexCoord2sv = (PFNGLMULTITEXCOORD2SVPROC)load("glMultiTexCoord2sv");
	cppgl_glMultiTexCoord3d = (PFNGLMULTITEXCOORD3DPROC)load("glMultiTexCoord3d");
	cppgl_glMultiTexCoord3dv = (PFNGLMULTITEXCOORD3DVPROC)load("glMultiTexCoord3dv");
	cppgl_glMultiTexCoord3f = (PFNGLMULTITEXCOORD3FPROC)load("glMultiTexCoord3f");
	cppgl_glMultiTexCoord3fv = (PFNGLMULTITEXCOORD3FVPROC)load("glMultiTexCoord3fv");
	cppgl_glMultiTexCoord3i = (PFNGLMULTITEXCOORD3IPROC)load("glMultiTexCoord3i");
	cppgl_glMultiTexCoord3iv = (PFNGLMULTITEXCOORD3IVPROC)load("glMultiTexCoord3iv");
	cppgl_glMultiTexCoord3s = (PFNGLMULTITEXCOORD3SPROC)load("glMultiTexCoord3s");
	cppgl_glMultiTexCoord3sv = (PFNGLMULTITEXCOORD3SVPROC)load("glMultiTexCoord3sv");
	cppgl_glMultiTexCoord4d = (PFNGLMULTITEXCOORD4DPROC)load("glMultiTexCoord4d");
	cppgl_glMultiTexCoord4dv = (PFNGLMULTITEXCOORD4DVPROC)load("glMultiTexCoord4dv");
	cppgl_glMultiTexCoord4f = (PFNGLMULTITEXCOORD4FPROC)load("glMultiTexCoord4f");
	cppgl_glMultiTexCoord4fv = (PFNGLMULTITEXCOORD4FVPROC)load("glMultiTexCoord4fv");
	cppgl_glMultiTexCoord4i = (PFNGLMULTITEXCOORD4IPROC)load("glMultiTexCoord4i");
	cppgl_glMultiTexCoord4iv = (PFNGLMULTITEXCOORD4IVPROC)load("glMultiTexCoord4iv");
	cppgl_glMultiTexCoord4s = (PFNGLMULTITEXCOORD4SPROC)load("glMultiTexCoord4s");
	cppgl_glMultiTexCoord4sv = (PFNGLMULTITEXCOORD4SVPROC)load("glMultiTexCoord4sv");
	cppgl_glLoadTransposeMatrixf = (PFNGLLOADTRANSPOSEMATRIXFPROC)load("glLoadTransposeMatrixf");
	cppgl_glLoadTransposeMatrixd = (PFNGLLOADTRANSPOSEMATRIXDPROC)load("glLoadTransposeMatrixd");
	cppgl_glMultTransposeMatrixf = (PFNGLMULTTRANSPOSEMATRIXFPROC)load("glMultTransposeMatrixf");
	cppgl_glMultTransposeMatrixd = (PFNGLMULTTRANSPOSEMATRIXDPROC)load("glMultTransposeMatrixd");
}
static void load_GL_VERSION_1_4(CPPGLloadproc load) {
	if(!CPPGL_GL_VERSION_1_4) return;
	cppgl_glBlendFuncSeparate = (PFNGLBLENDFUNCSEPARATEPROC)load("glBlendFuncSeparate");
	cppgl_glMultiDrawArrays = (PFNGLMULTIDRAWARRAYSPROC)load("glMultiDrawArrays");
	cppgl_glMultiDrawElements = (PFNGLMULTIDRAWELEMENTSPROC)load("glMultiDrawElements");
	cppgl_glPointParameterf = (PFNGLPOINTPARAMETERFPROC)load("glPointParameterf");
	cppgl_glPointParameterfv = (PFNGLPOINTPARAMETERFVPROC)load("glPointParameterfv");
	cppgl_glPointParameteri = (PFNGLPOINTPARAMETERIPROC)load("glPointParameteri");
	cppgl_glPointParameteriv = (PFNGLPOINTPARAMETERIVPROC)load("glPointParameteriv");
	cppgl_glFogCoordf = (PFNGLFOGCOORDFPROC)load("glFogCoordf");
	cppgl_glFogCoordfv = (PFNGLFOGCOORDFVPROC)load("glFogCoordfv");
	cppgl_glFogCoordd = (PFNGLFOGCOORDDPROC)load("glFogCoordd");
	cppgl_glFogCoorddv = (PFNGLFOGCOORDDVPROC)load("glFogCoorddv");
	cppgl_glFogCoordPointer = (PFNGLFOGCOORDPOINTERPROC)load("glFogCoordPointer");
	cppgl_glSecondaryColor3b = (PFNGLSECONDARYCOLOR3BPROC)load("glSecondaryColor3b");
	cppgl_glSecondaryColor3bv = (PFNGLSECONDARYCOLOR3BVPROC)load("glSecondaryColor3bv");
	cppgl_glSecondaryColor3d = (PFNGLSECONDARYCOLOR3DPROC)load("glSecondaryColor3d");
	cppgl_glSecondaryColor3dv = (PFNGLSECONDARYCOLOR3DVPROC)load("glSecondaryColor3dv");
	cppgl_glSecondaryColor3f = (PFNGLSECONDARYCOLOR3FPROC)load("glSecondaryColor3f");
	cppgl_glSecondaryColor3fv = (PFNGLSECONDARYCOLOR3FVPROC)load("glSecondaryColor3fv");
	cppgl_glSecondaryColor3i = (PFNGLSECONDARYCOLOR3IPROC)load("glSecondaryColor3i");
	cppgl_glSecondaryColor3iv = (PFNGLSECONDARYCOLOR3IVPROC)load("glSecondaryColor3iv");
	cppgl_glSecondaryColor3s = (PFNGLSECONDARYCOLOR3SPROC)load("glSecondaryColor3s");
	cppgl_glSecondaryColor3sv = (PFNGLSECONDARYCOLOR3SVPROC)load("glSecondaryColor3sv");
	cppgl_glSecondaryColor3ub = (PFNGLSECONDARYCOLOR3UBPROC)load("glSecondaryColor3ub");
	cppgl_glSecondaryColor3ubv = (PFNGLSECONDARYCOLOR3UBVPROC)load("glSecondaryColor3ubv");
	cppgl_glSecondaryColor3ui = (PFNGLSECONDARYCOLOR3UIPROC)load("glSecondaryColor3ui");
	cppgl_glSecondaryColor3uiv = (PFNGLSECONDARYCOLOR3UIVPROC)load("glSecondaryColor3uiv");
	cppgl_glSecondaryColor3us = (PFNGLSECONDARYCOLOR3USPROC)load("glSecondaryColor3us");
	cppgl_glSecondaryColor3usv = (PFNGLSECONDARYCOLOR3USVPROC)load("glSecondaryColor3usv");
	cppgl_glSecondaryColorPointer = (PFNGLSECONDARYCOLORPOINTERPROC)load("glSecondaryColorPointer");
	cppgl_glWindowPos2d = (PFNGLWINDOWPOS2DPROC)load("glWindowPos2d");
	cppgl_glWindowPos2dv = (PFNGLWINDOWPOS2DVPROC)load("glWindowPos2dv");
	cppgl_glWindowPos2f = (PFNGLWINDOWPOS2FPROC)load("glWindowPos2f");
	cppgl_glWindowPos2fv = (PFNGLWINDOWPOS2FVPROC)load("glWindowPos2fv");
	cppgl_glWindowPos2i = (PFNGLWINDOWPOS2IPROC)load("glWindowPos2i");
	cppgl_glWindowPos2iv = (PFNGLWINDOWPOS2IVPROC)load("glWindowPos2iv");
	cppgl_glWindowPos2s = (PFNGLWINDOWPOS2SPROC)load("glWindowPos2s");
	cppgl_glWindowPos2sv = (PFNGLWINDOWPOS2SVPROC)load("glWindowPos2sv");
	cppgl_glWindowPos3d = (PFNGLWINDOWPOS3DPROC)load("glWindowPos3d");
	cppgl_glWindowPos3dv = (PFNGLWINDOWPOS3DVPROC)load("glWindowPos3dv");
	cppgl_glWindowPos3f = (PFNGLWINDOWPOS3FPROC)load("glWindowPos3f");
	cppgl_glWindowPos3fv = (PFNGLWINDOWPOS3FVPROC)load("glWindowPos3fv");
	cppgl_glWindowPos3i = (PFNGLWINDOWPOS3IPROC)load("glWindowPos3i");
	cppgl_glWindowPos3iv = (PFNGLWINDOWPOS3IVPROC)load("glWindowPos3iv");
	cppgl_glWindowPos3s = (PFNGLWINDOWPOS3SPROC)load("glWindowPos3s");
	cppgl_glWindowPos3sv = (PFNGLWINDOWPOS3SVPROC)load("glWindowPos3sv");
	cppgl_glBlendColor = (PFNGLBLENDCOLORPROC)load("glBlendColor");
	cppgl_glBlendEquation = (PFNGLBLENDEQUATIONPROC)load("glBlendEquation");
}
static void load_GL_VERSION_1_5(CPPGLloadproc load) {
	if(!CPPGL_GL_VERSION_1_5) return;
	cppgl_glGenQueries = (PFNGLGENQUERIESPROC)load("glGenQueries");
	cppgl_glDeleteQueries = (PFNGLDELETEQUERIESPROC)load("glDeleteQueries");
	cppgl_glIsQuery = (PFNGLISQUERYPROC)load("glIsQuery");
	cppgl_glBeginQuery = (PFNGLBEGINQUERYPROC)load("glBeginQuery");
	cppgl_glEndQuery = (PFNGLENDQUERYPROC)load("glEndQuery");
	cppgl_glGetQueryiv = (PFNGLGETQUERYIVPROC)load("glGetQueryiv");
	cppgl_glGetQueryObjectiv = (PFNGLGETQUERYOBJECTIVPROC)load("glGetQueryObjectiv");
	cppgl_glGetQueryObjectuiv = (PFNGLGETQUERYOBJECTUIVPROC)load("glGetQueryObjectuiv");
	cppgl_glBindBuffer = (PFNGLBINDBUFFERPROC)load("glBindBuffer");
	cppgl_glDeleteBuffers = (PFNGLDELETEBUFFERSPROC)load("glDeleteBuffers");
	cppgl_glGenBuffers = (PFNGLGENBUFFERSPROC)load("glGenBuffers");
	cppgl_glIsBuffer = (PFNGLISBUFFERPROC)load("glIsBuffer");
	cppgl_glBufferData = (PFNGLBUFFERDATAPROC)load("glBufferData");
	cppgl_glBufferSubData = (PFNGLBUFFERSUBDATAPROC)load("glBufferSubData");
	cppgl_glGetBufferSubData = (PFNGLGETBUFFERSUBDATAPROC)load("glGetBufferSubData");
	cppgl_glMapBuffer = (PFNGLMAPBUFFERPROC)load("glMapBuffer");
	cppgl_glUnmapBuffer = (PFNGLUNMAPBUFFERPROC)load("glUnmapBuffer");
	cppgl_glGetBufferParameteriv = (PFNGLGETBUFFERPARAMETERIVPROC)load("glGetBufferParameteriv");
	cppgl_glGetBufferPointerv = (PFNGLGETBUFFERPOINTERVPROC)load("glGetBufferPointerv");
}
static void load_GL_VERSION_2_0(CPPGLloadproc load) {
	if(!CPPGL_GL_VERSION_2_0) return;
	cppgl_glBlendEquationSeparate = (PFNGLBLENDEQUATIONSEPARATEPROC)load("glBlendEquationSeparate");
	cppgl_glDrawBuffers = (PFNGLDRAWBUFFERSPROC)load("glDrawBuffers");
	cppgl_glStencilOpSeparate = (PFNGLSTENCILOPSEPARATEPROC)load("glStencilOpSeparate");
	cppgl_glStencilFuncSeparate = (PFNGLSTENCILFUNCSEPARATEPROC)load("glStencilFuncSeparate");
	cppgl_glStencilMaskSeparate = (PFNGLSTENCILMASKSEPARATEPROC)load("glStencilMaskSeparate");
	cppgl_glAttachShader = (PFNGLATTACHSHADERPROC)load("glAttachShader");
	cppgl_glBindAttribLocation = (PFNGLBINDATTRIBLOCATIONPROC)load("glBindAttribLocation");
	cppgl_glCompileShader = (PFNGLCOMPILESHADERPROC)load("glCompileShader");
	cppgl_glCreateProgram = (PFNGLCREATEPROGRAMPROC)load("glCreateProgram");
	cppgl_glCreateShader = (PFNGLCREATESHADERPROC)load("glCreateShader");
	cppgl_glDeleteProgram = (PFNGLDELETEPROGRAMPROC)load("glDeleteProgram");
	cppgl_glDeleteShader = (PFNGLDELETESHADERPROC)load("glDeleteShader");
	cppgl_glDetachShader = (PFNGLDETACHSHADERPROC)load("glDetachShader");
	cppgl_glDisableVertexAttribArray = (PFNGLDISABLEVERTEXATTRIBARRAYPROC)load("glDisableVertexAttribArray");
	cppgl_glEnableVertexAttribArray = (PFNGLENABLEVERTEXATTRIBARRAYPROC)load("glEnableVertexAttribArray");
	cppgl_glGetActiveAttrib = (PFNGLGETACTIVEATTRIBPROC)load("glGetActiveAttrib");
	cppgl_glGetActiveUniform = (PFNGLGETACTIVEUNIFORMPROC)load("glGetActiveUniform");
	cppgl_glGetAttachedShaders = (PFNGLGETATTACHEDSHADERSPROC)load("glGetAttachedShaders");
	cppgl_glGetAttribLocation = (PFNGLGETATTRIBLOCATIONPROC)load("glGetAttribLocation");
	cppgl_glGetProgramiv = (PFNGLGETPROGRAMIVPROC)load("glGetProgramiv");
	cppgl_glGetProgramInfoLog = (PFNGLGETPROGRAMINFOLOGPROC)load("glGetProgramInfoLog");
	cppgl_glGetShaderiv = (PFNGLGETSHADERIVPROC)load("glGetShaderiv");
	cppgl_glGetShaderInfoLog = (PFNGLGETSHADERINFOLOGPROC)load("glGetShaderInfoLog");
	cppgl_glGetShaderSource = (PFNGLGETSHADERSOURCEPROC)load("glGetShaderSource");
	cppgl_glGetUniformLocation = (PFNGLGETUNIFORMLOCATIONPROC)load("glGetUniformLocation");
	cppgl_glGetUniformfv = (PFNGLGETUNIFORMFVPROC)load("glGetUniformfv");
	cppgl_glGetUniformiv = (PFNGLGETUNIFORMIVPROC)load("glGetUniformiv");
	cppgl_glGetVertexAttribdv = (PFNGLGETVERTEXATTRIBDVPROC)load("glGetVertexAttribdv");
	cppgl_glGetVertexAttribfv = (PFNGLGETVERTEXATTRIBFVPROC)load("glGetVertexAttribfv");
	cppgl_glGetVertexAttribiv = (PFNGLGETVERTEXATTRIBIVPROC)load("glGetVertexAttribiv");
	cppgl_glGetVertexAttribPointerv = (PFNGLGETVERTEXATTRIBPOINTERVPROC)load("glGetVertexAttribPointerv");
	cppgl_glIsProgram = (PFNGLISPROGRAMPROC)load("glIsProgram");
	cppgl_glIsShader = (PFNGLISSHADERPROC)load("glIsShader");
	cppgl_glLinkProgram = (PFNGLLINKPROGRAMPROC)load("glLinkProgram");
	cppgl_glShaderSource = (PFNGLSHADERSOURCEPROC)load("glShaderSource");
	cppgl_glUseProgram = (PFNGLUSEPROGRAMPROC)load("glUseProgram");
	cppgl_glUniform1f = (PFNGLUNIFORM1FPROC)load("glUniform1f");
	cppgl_glUniform2f = (PFNGLUNIFORM2FPROC)load("glUniform2f");
	cppgl_glUniform3f = (PFNGLUNIFORM3FPROC)load("glUniform3f");
	cppgl_glUniform4f = (PFNGLUNIFORM4FPROC)load("glUniform4f");
	cppgl_glUniform1i = (PFNGLUNIFORM1IPROC)load("glUniform1i");
	cppgl_glUniform2i = (PFNGLUNIFORM2IPROC)load("glUniform2i");
	cppgl_glUniform3i = (PFNGLUNIFORM3IPROC)load("glUniform3i");
	cppgl_glUniform4i = (PFNGLUNIFORM4IPROC)load("glUniform4i");
	cppgl_glUniform1fv = (PFNGLUNIFORM1FVPROC)load("glUniform1fv");
	cppgl_glUniform2fv = (PFNGLUNIFORM2FVPROC)load("glUniform2fv");
	cppgl_glUniform3fv = (PFNGLUNIFORM3FVPROC)load("glUniform3fv");
	cppgl_glUniform4fv = (PFNGLUNIFORM4FVPROC)load("glUniform4fv");
	cppgl_glUniform1iv = (PFNGLUNIFORM1IVPROC)load("glUniform1iv");
	cppgl_glUniform2iv = (PFNGLUNIFORM2IVPROC)load("glUniform2iv");
	cppgl_glUniform3iv = (PFNGLUNIFORM3IVPROC)load("glUniform3iv");
	cppgl_glUniform4iv = (PFNGLUNIFORM4IVPROC)load("glUniform4iv");
	cppgl_glUniformMatrix2fv = (PFNGLUNIFORMMATRIX2FVPROC)load("glUniformMatrix2fv");
	cppgl_glUniformMatrix3fv = (PFNGLUNIFORMMATRIX3FVPROC)load("glUniformMatrix3fv");
	cppgl_glUniformMatrix4fv = (PFNGLUNIFORMMATRIX4FVPROC)load("glUniformMatrix4fv");
	cppgl_glValidateProgram = (PFNGLVALIDATEPROGRAMPROC)load("glValidateProgram");
	cppgl_glVertexAttrib1d = (PFNGLVERTEXATTRIB1DPROC)load("glVertexAttrib1d");
	cppgl_glVertexAttrib1dv = (PFNGLVERTEXATTRIB1DVPROC)load("glVertexAttrib1dv");
	cppgl_glVertexAttrib1f = (PFNGLVERTEXATTRIB1FPROC)load("glVertexAttrib1f");
	cppgl_glVertexAttrib1fv = (PFNGLVERTEXATTRIB1FVPROC)load("glVertexAttrib1fv");
	cppgl_glVertexAttrib1s = (PFNGLVERTEXATTRIB1SPROC)load("glVertexAttrib1s");
	cppgl_glVertexAttrib1sv = (PFNGLVERTEXATTRIB1SVPROC)load("glVertexAttrib1sv");
	cppgl_glVertexAttrib2d = (PFNGLVERTEXATTRIB2DPROC)load("glVertexAttrib2d");
	cppgl_glVertexAttrib2dv = (PFNGLVERTEXATTRIB2DVPROC)load("glVertexAttrib2dv");
	cppgl_glVertexAttrib2f = (PFNGLVERTEXATTRIB2FPROC)load("glVertexAttrib2f");
	cppgl_glVertexAttrib2fv = (PFNGLVERTEXATTRIB2FVPROC)load("glVertexAttrib2fv");
	cppgl_glVertexAttrib2s = (PFNGLVERTEXATTRIB2SPROC)load("glVertexAttrib2s");
	cppgl_glVertexAttrib2sv = (PFNGLVERTEXATTRIB2SVPROC)load("glVertexAttrib2sv");
	cppgl_glVertexAttrib3d = (PFNGLVERTEXATTRIB3DPROC)load("glVertexAttrib3d");
	cppgl_glVertexAttrib3dv = (PFNGLVERTEXATTRIB3DVPROC)load("glVertexAttrib3dv");
	cppgl_glVertexAttrib3f = (PFNGLVERTEXATTRIB3FPROC)load("glVertexAttrib3f");
	cppgl_glVertexAttrib3fv = (PFNGLVERTEXATTRIB3FVPROC)load("glVertexAttrib3fv");
	cppgl_glVertexAttrib3s = (PFNGLVERTEXATTRIB3SPROC)load("glVertexAttrib3s");
	cppgl_glVertexAttrib3sv = (PFNGLVERTEXATTRIB3SVPROC)load("glVertexAttrib3sv");
	cppgl_glVertexAttrib4Nbv = (PFNGLVERTEXATTRIB4NBVPROC)load("glVertexAttrib4Nbv");
	cppgl_glVertexAttrib4Niv = (PFNGLVERTEXATTRIB4NIVPROC)load("glVertexAttrib4Niv");
	cppgl_glVertexAttrib4Nsv = (PFNGLVERTEXATTRIB4NSVPROC)load("glVertexAttrib4Nsv");
	cppgl_glVertexAttrib4Nub = (PFNGLVERTEXATTRIB4NUBPROC)load("glVertexAttrib4Nub");
	cppgl_glVertexAttrib4Nubv = (PFNGLVERTEXATTRIB4NUBVPROC)load("glVertexAttrib4Nubv");
	cppgl_glVertexAttrib4Nuiv = (PFNGLVERTEXATTRIB4NUIVPROC)load("glVertexAttrib4Nuiv");
	cppgl_glVertexAttrib4Nusv = (PFNGLVERTEXATTRIB4NUSVPROC)load("glVertexAttrib4Nusv");
	cppgl_glVertexAttrib4bv = (PFNGLVERTEXATTRIB4BVPROC)load("glVertexAttrib4bv");
	cppgl_glVertexAttrib4d = (PFNGLVERTEXATTRIB4DPROC)load("glVertexAttrib4d");
	cppgl_glVertexAttrib4dv = (PFNGLVERTEXATTRIB4DVPROC)load("glVertexAttrib4dv");
	cppgl_glVertexAttrib4f = (PFNGLVERTEXATTRIB4FPROC)load("glVertexAttrib4f");
	cppgl_glVertexAttrib4fv = (PFNGLVERTEXATTRIB4FVPROC)load("glVertexAttrib4fv");
	cppgl_glVertexAttrib4iv = (PFNGLVERTEXATTRIB4IVPROC)load("glVertexAttrib4iv");
	cppgl_glVertexAttrib4s = (PFNGLVERTEXATTRIB4SPROC)load("glVertexAttrib4s");
	cppgl_glVertexAttrib4sv = (PFNGLVERTEXATTRIB4SVPROC)load("glVertexAttrib4sv");
	cppgl_glVertexAttrib4ubv = (PFNGLVERTEXATTRIB4UBVPROC)load("glVertexAttrib4ubv");
	cppgl_glVertexAttrib4uiv = (PFNGLVERTEXATTRIB4UIVPROC)load("glVertexAttrib4uiv");
	cppgl_glVertexAttrib4usv = (PFNGLVERTEXATTRIB4USVPROC)load("glVertexAttrib4usv");
	cppgl_glVertexAttribPointer = (PFNGLVERTEXATTRIBPOINTERPROC)load("glVertexAttribPointer");
}
static void load_GL_VERSION_2_1(CPPGLloadproc load) {
	if(!CPPGL_GL_VERSION_2_1) return;
	cppgl_glUniformMatrix2x3fv = (PFNGLUNIFORMMATRIX2X3FVPROC)load("glUniformMatrix2x3fv");
	cppgl_glUniformMatrix3x2fv = (PFNGLUNIFORMMATRIX3X2FVPROC)load("glUniformMatrix3x2fv");
	cppgl_glUniformMatrix2x4fv = (PFNGLUNIFORMMATRIX2X4FVPROC)load("glUniformMatrix2x4fv");
	cppgl_glUniformMatrix4x2fv = (PFNGLUNIFORMMATRIX4X2FVPROC)load("glUniformMatrix4x2fv");
	cppgl_glUniformMatrix3x4fv = (PFNGLUNIFORMMATRIX3X4FVPROC)load("glUniformMatrix3x4fv");
	cppgl_glUniformMatrix4x3fv = (PFNGLUNIFORMMATRIX4X3FVPROC)load("glUniformMatrix4x3fv");
}
static void load_GL_VERSION_3_0(CPPGLloadproc load) {
	if(!CPPGL_GL_VERSION_3_0) return;
	cppgl_glColorMaski = (PFNGLCOLORMASKIPROC)load("glColorMaski");
	cppgl_glGetBooleani_v = (PFNGLGETBOOLEANI_VPROC)load("glGetBooleani_v");
	cppgl_glGetIntegeri_v = (PFNGLGETINTEGERI_VPROC)load("glGetIntegeri_v");
	cppgl_glEnablei = (PFNGLENABLEIPROC)load("glEnablei");
	cppgl_glDisablei = (PFNGLDISABLEIPROC)load("glDisablei");
	cppgl_glIsEnabledi = (PFNGLISENABLEDIPROC)load("glIsEnabledi");
	cppgl_glBeginTransformFeedback = (PFNGLBEGINTRANSFORMFEEDBACKPROC)load("glBeginTransformFeedback");
	cppgl_glEndTransformFeedback = (PFNGLENDTRANSFORMFEEDBACKPROC)load("glEndTransformFeedback");
	cppgl_glBindBufferRange = (PFNGLBINDBUFFERRANGEPROC)load("glBindBufferRange");
	cppgl_glBindBufferBase = (PFNGLBINDBUFFERBASEPROC)load("glBindBufferBase");
	cppgl_glTransformFeedbackVaryings = (PFNGLTRANSFORMFEEDBACKVARYINGSPROC)load("glTransformFeedbackVaryings");
	cppgl_glGetTransformFeedbackVarying = (PFNGLGETTRANSFORMFEEDBACKVARYINGPROC)load("glGetTransformFeedbackVarying");
	cppgl_glClampColor = (PFNGLCLAMPCOLORPROC)load("glClampColor");
	cppgl_glBeginConditionalRender = (PFNGLBEGINCONDITIONALRENDERPROC)load("glBeginConditionalRender");
	cppgl_glEndConditionalRender = (PFNGLENDCONDITIONALRENDERPROC)load("glEndConditionalRender");
	cppgl_glVertexAttribIPointer = (PFNGLVERTEXATTRIBIPOINTERPROC)load("glVertexAttribIPointer");
	cppgl_glGetVertexAttribIiv = (PFNGLGETVERTEXATTRIBIIVPROC)load("glGetVertexAttribIiv");
	cppgl_glGetVertexAttribIuiv = (PFNGLGETVERTEXATTRIBIUIVPROC)load("glGetVertexAttribIuiv");
	cppgl_glVertexAttribI1i = (PFNGLVERTEXATTRIBI1IPROC)load("glVertexAttribI1i");
	cppgl_glVertexAttribI2i = (PFNGLVERTEXATTRIBI2IPROC)load("glVertexAttribI2i");
	cppgl_glVertexAttribI3i = (PFNGLVERTEXATTRIBI3IPROC)load("glVertexAttribI3i");
	cppgl_glVertexAttribI4i = (PFNGLVERTEXATTRIBI4IPROC)load("glVertexAttribI4i");
	cppgl_glVertexAttribI1ui = (PFNGLVERTEXATTRIBI1UIPROC)load("glVertexAttribI1ui");
	cppgl_glVertexAttribI2ui = (PFNGLVERTEXATTRIBI2UIPROC)load("glVertexAttribI2ui");
	cppgl_glVertexAttribI3ui = (PFNGLVERTEXATTRIBI3UIPROC)load("glVertexAttribI3ui");
	cppgl_glVertexAttribI4ui = (PFNGLVERTEXATTRIBI4UIPROC)load("glVertexAttribI4ui");
	cppgl_glVertexAttribI1iv = (PFNGLVERTEXATTRIBI1IVPROC)load("glVertexAttribI1iv");
	cppgl_glVertexAttribI2iv = (PFNGLVERTEXATTRIBI2IVPROC)load("glVertexAttribI2iv");
	cppgl_glVertexAttribI3iv = (PFNGLVERTEXATTRIBI3IVPROC)load("glVertexAttribI3iv");
	cppgl_glVertexAttribI4iv = (PFNGLVERTEXATTRIBI4IVPROC)load("glVertexAttribI4iv");
	cppgl_glVertexAttribI1uiv = (PFNGLVERTEXATTRIBI1UIVPROC)load("glVertexAttribI1uiv");
	cppgl_glVertexAttribI2uiv = (PFNGLVERTEXATTRIBI2UIVPROC)load("glVertexAttribI2uiv");
	cppgl_glVertexAttribI3uiv = (PFNGLVERTEXATTRIBI3UIVPROC)load("glVertexAttribI3uiv");
	cppgl_glVertexAttribI4uiv = (PFNGLVERTEXATTRIBI4UIVPROC)load("glVertexAttribI4uiv");
	cppgl_glVertexAttribI4bv = (PFNGLVERTEXATTRIBI4BVPROC)load("glVertexAttribI4bv");
	cppgl_glVertexAttribI4sv = (PFNGLVERTEXATTRIBI4SVPROC)load("glVertexAttribI4sv");
	cppgl_glVertexAttribI4ubv = (PFNGLVERTEXATTRIBI4UBVPROC)load("glVertexAttribI4ubv");
	cppgl_glVertexAttribI4usv = (PFNGLVERTEXATTRIBI4USVPROC)load("glVertexAttribI4usv");
	cppgl_glGetUniformuiv = (PFNGLGETUNIFORMUIVPROC)load("glGetUniformuiv");
	cppgl_glBindFragDataLocation = (PFNGLBINDFRAGDATALOCATIONPROC)load("glBindFragDataLocation");
	cppgl_glGetFragDataLocation = (PFNGLGETFRAGDATALOCATIONPROC)load("glGetFragDataLocation");
	cppgl_glUniform1ui = (PFNGLUNIFORM1UIPROC)load("glUniform1ui");
	cppgl_glUniform2ui = (PFNGLUNIFORM2UIPROC)load("glUniform2ui");
	cppgl_glUniform3ui = (PFNGLUNIFORM3UIPROC)load("glUniform3ui");
	cppgl_glUniform4ui = (PFNGLUNIFORM4UIPROC)load("glUniform4ui");
	cppgl_glUniform1uiv = (PFNGLUNIFORM1UIVPROC)load("glUniform1uiv");
	cppgl_glUniform2uiv = (PFNGLUNIFORM2UIVPROC)load("glUniform2uiv");
	cppgl_glUniform3uiv = (PFNGLUNIFORM3UIVPROC)load("glUniform3uiv");
	cppgl_glUniform4uiv = (PFNGLUNIFORM4UIVPROC)load("glUniform4uiv");
	cppgl_glTexParameterIiv = (PFNGLTEXPARAMETERIIVPROC)load("glTexParameterIiv");
	cppgl_glTexParameterIuiv = (PFNGLTEXPARAMETERIUIVPROC)load("glTexParameterIuiv");
	cppgl_glGetTexParameterIiv = (PFNGLGETTEXPARAMETERIIVPROC)load("glGetTexParameterIiv");
	cppgl_glGetTexParameterIuiv = (PFNGLGETTEXPARAMETERIUIVPROC)load("glGetTexParameterIuiv");
	cppgl_glClearBufferiv = (PFNGLCLEARBUFFERIVPROC)load("glClearBufferiv");
	cppgl_glClearBufferuiv = (PFNGLCLEARBUFFERUIVPROC)load("glClearBufferuiv");
	cppgl_glClearBufferfv = (PFNGLCLEARBUFFERFVPROC)load("glClearBufferfv");
	cppgl_glClearBufferfi = (PFNGLCLEARBUFFERFIPROC)load("glClearBufferfi");
	cppgl_glGetStringi = (PFNGLGETSTRINGIPROC)load("glGetStringi");
	cppgl_glIsRenderbuffer = (PFNGLISRENDERBUFFERPROC)load("glIsRenderbuffer");
	cppgl_glBindRenderbuffer = (PFNGLBINDRENDERBUFFERPROC)load("glBindRenderbuffer");
	cppgl_glDeleteRenderbuffers = (PFNGLDELETERENDERBUFFERSPROC)load("glDeleteRenderbuffers");
	cppgl_glGenRenderbuffers = (PFNGLGENRENDERBUFFERSPROC)load("glGenRenderbuffers");
	cppgl_glRenderbufferStorage = (PFNGLRENDERBUFFERSTORAGEPROC)load("glRenderbufferStorage");
	cppgl_glGetRenderbufferParameteriv = (PFNGLGETRENDERBUFFERPARAMETERIVPROC)load("glGetRenderbufferParameteriv");
	cppgl_glIsFramebuffer = (PFNGLISFRAMEBUFFERPROC)load("glIsFramebuffer");
	cppgl_glBindFramebuffer = (PFNGLBINDFRAMEBUFFERPROC)load("glBindFramebuffer");
	cppgl_glDeleteFramebuffers = (PFNGLDELETEFRAMEBUFFERSPROC)load("glDeleteFramebuffers");
	cppgl_glGenFramebuffers = (PFNGLGENFRAMEBUFFERSPROC)load("glGenFramebuffers");
	cppgl_glCheckFramebufferStatus = (PFNGLCHECKFRAMEBUFFERSTATUSPROC)load("glCheckFramebufferStatus");
	cppgl_glFramebufferTexture1D = (PFNGLFRAMEBUFFERTEXTURE1DPROC)load("glFramebufferTexture1D");
	cppgl_glFramebufferTexture2D = (PFNGLFRAMEBUFFERTEXTURE2DPROC)load("glFramebufferTexture2D");
	cppgl_glFramebufferTexture3D = (PFNGLFRAMEBUFFERTEXTURE3DPROC)load("glFramebufferTexture3D");
	cppgl_glFramebufferRenderbuffer = (PFNGLFRAMEBUFFERRENDERBUFFERPROC)load("glFramebufferRenderbuffer");
	cppgl_glGetFramebufferAttachmentParameteriv = (PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC)load("glGetFramebufferAttachmentParameteriv");
	cppgl_glGenerateMipmap = (PFNGLGENERATEMIPMAPPROC)load("glGenerateMipmap");
	cppgl_glBlitFramebuffer = (PFNGLBLITFRAMEBUFFERPROC)load("glBlitFramebuffer");
	cppgl_glRenderbufferStorageMultisample = (PFNGLRENDERBUFFERSTORAGEMULTISAMPLEPROC)load("glRenderbufferStorageMultisample");
	cppgl_glFramebufferTextureLayer = (PFNGLFRAMEBUFFERTEXTURELAYERPROC)load("glFramebufferTextureLayer");
	cppgl_glMapBufferRange = (PFNGLMAPBUFFERRANGEPROC)load("glMapBufferRange");
	cppgl_glFlushMappedBufferRange = (PFNGLFLUSHMAPPEDBUFFERRANGEPROC)load("glFlushMappedBufferRange");
	cppgl_glBindVertexArray = (PFNGLBINDVERTEXARRAYPROC)load("glBindVertexArray");
	cppgl_glDeleteVertexArrays = (PFNGLDELETEVERTEXARRAYSPROC)load("glDeleteVertexArrays");
	cppgl_glGenVertexArrays = (PFNGLGENVERTEXARRAYSPROC)load("glGenVertexArrays");
	cppgl_glIsVertexArray = (PFNGLISVERTEXARRAYPROC)load("glIsVertexArray");
}
static void load_GL_VERSION_3_1(CPPGLloadproc load) {
	if(!CPPGL_GL_VERSION_3_1) return;
	cppgl_glDrawArraysInstanced = (PFNGLDRAWARRAYSINSTANCEDPROC)load("glDrawArraysInstanced");
	cppgl_glDrawElementsInstanced = (PFNGLDRAWELEMENTSINSTANCEDPROC)load("glDrawElementsInstanced");
	cppgl_glTexBuffer = (PFNGLTEXBUFFERPROC)load("glTexBuffer");
	cppgl_glPrimitiveRestartIndex = (PFNGLPRIMITIVERESTARTINDEXPROC)load("glPrimitiveRestartIndex");
	cppgl_glCopyBufferSubData = (PFNGLCOPYBUFFERSUBDATAPROC)load("glCopyBufferSubData");
	cppgl_glGetUniformIndices = (PFNGLGETUNIFORMINDICESPROC)load("glGetUniformIndices");
	cppgl_glGetActiveUniformsiv = (PFNGLGETACTIVEUNIFORMSIVPROC)load("glGetActiveUniformsiv");
	cppgl_glGetActiveUniformName = (PFNGLGETACTIVEUNIFORMNAMEPROC)load("glGetActiveUniformName");
	cppgl_glGetUniformBlockIndex = (PFNGLGETUNIFORMBLOCKINDEXPROC)load("glGetUniformBlockIndex");
	cppgl_glGetActiveUniformBlockiv = (PFNGLGETACTIVEUNIFORMBLOCKIVPROC)load("glGetActiveUniformBlockiv");
	cppgl_glGetActiveUniformBlockName = (PFNGLGETACTIVEUNIFORMBLOCKNAMEPROC)load("glGetActiveUniformBlockName");
	cppgl_glUniformBlockBinding = (PFNGLUNIFORMBLOCKBINDINGPROC)load("glUniformBlockBinding");
	cppgl_glBindBufferRange = (PFNGLBINDBUFFERRANGEPROC)load("glBindBufferRange");
	cppgl_glBindBufferBase = (PFNGLBINDBUFFERBASEPROC)load("glBindBufferBase");
	cppgl_glGetIntegeri_v = (PFNGLGETINTEGERI_VPROC)load("glGetIntegeri_v");
}
static void load_GL_VERSION_3_2(CPPGLloadproc load) {
	if(!CPPGL_GL_VERSION_3_2) return;
	cppgl_glDrawElementsBaseVertex = (PFNGLDRAWELEMENTSBASEVERTEXPROC)load("glDrawElementsBaseVertex");
	cppgl_glDrawRangeElementsBaseVertex = (PFNGLDRAWRANGEELEMENTSBASEVERTEXPROC)load("glDrawRangeElementsBaseVertex");
	cppgl_glDrawElementsInstancedBaseVertex = (PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXPROC)load("glDrawElementsInstancedBaseVertex");
	cppgl_glMultiDrawElementsBaseVertex = (PFNGLMULTIDRAWELEMENTSBASEVERTEXPROC)load("glMultiDrawElementsBaseVertex");
	cppgl_glProvokingVertex = (PFNGLPROVOKINGVERTEXPROC)load("glProvokingVertex");
	cppgl_glFenceSync = (PFNGLFENCESYNCPROC)load("glFenceSync");
	cppgl_glIsSync = (PFNGLISSYNCPROC)load("glIsSync");
	cppgl_glDeleteSync = (PFNGLDELETESYNCPROC)load("glDeleteSync");
	cppgl_glClientWaitSync = (PFNGLCLIENTWAITSYNCPROC)load("glClientWaitSync");
	cppgl_glWaitSync = (PFNGLWAITSYNCPROC)load("glWaitSync");
	cppgl_glGetInteger64v = (PFNGLGETINTEGER64VPROC)load("glGetInteger64v");
	cppgl_glGetSynciv = (PFNGLGETSYNCIVPROC)load("glGetSynciv");
	cppgl_glGetInteger64i_v = (PFNGLGETINTEGER64I_VPROC)load("glGetInteger64i_v");
	cppgl_glGetBufferParameteri64v = (PFNGLGETBUFFERPARAMETERI64VPROC)load("glGetBufferParameteri64v");
	cppgl_glFramebufferTexture = (PFNGLFRAMEBUFFERTEXTUREPROC)load("glFramebufferTexture");
	cppgl_glTexImage2DMultisample = (PFNGLTEXIMAGE2DMULTISAMPLEPROC)load("glTexImage2DMultisample");
	cppgl_glTexImage3DMultisample = (PFNGLTEXIMAGE3DMULTISAMPLEPROC)load("glTexImage3DMultisample");
	cppgl_glGetMultisamplefv = (PFNGLGETMULTISAMPLEFVPROC)load("glGetMultisamplefv");
	cppgl_glSampleMaski = (PFNGLSAMPLEMASKIPROC)load("glSampleMaski");
}
static void load_GL_VERSION_3_3(CPPGLloadproc load) {
	if(!CPPGL_GL_VERSION_3_3) return;
	cppgl_glBindFragDataLocationIndexed = (PFNGLBINDFRAGDATALOCATIONINDEXEDPROC)load("glBindFragDataLocationIndexed");
	cppgl_glGetFragDataIndex = (PFNGLGETFRAGDATAINDEXPROC)load("glGetFragDataIndex");
	cppgl_glGenSamplers = (PFNGLGENSAMPLERSPROC)load("glGenSamplers");
	cppgl_glDeleteSamplers = (PFNGLDELETESAMPLERSPROC)load("glDeleteSamplers");
	cppgl_glIsSampler = (PFNGLISSAMPLERPROC)load("glIsSampler");
	cppgl_glBindSampler = (PFNGLBINDSAMPLERPROC)load("glBindSampler");
	cppgl_glSamplerParameteri = (PFNGLSAMPLERPARAMETERIPROC)load("glSamplerParameteri");
	cppgl_glSamplerParameteriv = (PFNGLSAMPLERPARAMETERIVPROC)load("glSamplerParameteriv");
	cppgl_glSamplerParameterf = (PFNGLSAMPLERPARAMETERFPROC)load("glSamplerParameterf");
	cppgl_glSamplerParameterfv = (PFNGLSAMPLERPARAMETERFVPROC)load("glSamplerParameterfv");
	cppgl_glSamplerParameterIiv = (PFNGLSAMPLERPARAMETERIIVPROC)load("glSamplerParameterIiv");
	cppgl_glSamplerParameterIuiv = (PFNGLSAMPLERPARAMETERIUIVPROC)load("glSamplerParameterIuiv");
	cppgl_glGetSamplerParameteriv = (PFNGLGETSAMPLERPARAMETERIVPROC)load("glGetSamplerParameteriv");
	cppgl_glGetSamplerParameterIiv = (PFNGLGETSAMPLERPARAMETERIIVPROC)load("glGetSamplerParameterIiv");
	cppgl_glGetSamplerParameterfv = (PFNGLGETSAMPLERPARAMETERFVPROC)load("glGetSamplerParameterfv");
	cppgl_glGetSamplerParameterIuiv = (PFNGLGETSAMPLERPARAMETERIUIVPROC)load("glGetSamplerParameterIuiv");
	cppgl_glQueryCounter = (PFNGLQUERYCOUNTERPROC)load("glQueryCounter");
	cppgl_glGetQueryObjecti64v = (PFNGLGETQUERYOBJECTI64VPROC)load("glGetQueryObjecti64v");
	cppgl_glGetQueryObjectui64v = (PFNGLGETQUERYOBJECTUI64VPROC)load("glGetQueryObjectui64v");
	cppgl_glVertexAttribDivisor = (PFNGLVERTEXATTRIBDIVISORPROC)load("glVertexAttribDivisor");
	cppgl_glVertexAttribP1ui = (PFNGLVERTEXATTRIBP1UIPROC)load("glVertexAttribP1ui");
	cppgl_glVertexAttribP1uiv = (PFNGLVERTEXATTRIBP1UIVPROC)load("glVertexAttribP1uiv");
	cppgl_glVertexAttribP2ui = (PFNGLVERTEXATTRIBP2UIPROC)load("glVertexAttribP2ui");
	cppgl_glVertexAttribP2uiv = (PFNGLVERTEXATTRIBP2UIVPROC)load("glVertexAttribP2uiv");
	cppgl_glVertexAttribP3ui = (PFNGLVERTEXATTRIBP3UIPROC)load("glVertexAttribP3ui");
	cppgl_glVertexAttribP3uiv = (PFNGLVERTEXATTRIBP3UIVPROC)load("glVertexAttribP3uiv");
	cppgl_glVertexAttribP4ui = (PFNGLVERTEXATTRIBP4UIPROC)load("glVertexAttribP4ui");
	cppgl_glVertexAttribP4uiv = (PFNGLVERTEXATTRIBP4UIVPROC)load("glVertexAttribP4uiv");
	cppgl_glVertexP2ui = (PFNGLVERTEXP2UIPROC)load("glVertexP2ui");
	cppgl_glVertexP2uiv = (PFNGLVERTEXP2UIVPROC)load("glVertexP2uiv");
	cppgl_glVertexP3ui = (PFNGLVERTEXP3UIPROC)load("glVertexP3ui");
	cppgl_glVertexP3uiv = (PFNGLVERTEXP3UIVPROC)load("glVertexP3uiv");
	cppgl_glVertexP4ui = (PFNGLVERTEXP4UIPROC)load("glVertexP4ui");
	cppgl_glVertexP4uiv = (PFNGLVERTEXP4UIVPROC)load("glVertexP4uiv");
	cppgl_glTexCoordP1ui = (PFNGLTEXCOORDP1UIPROC)load("glTexCoordP1ui");
	cppgl_glTexCoordP1uiv = (PFNGLTEXCOORDP1UIVPROC)load("glTexCoordP1uiv");
	cppgl_glTexCoordP2ui = (PFNGLTEXCOORDP2UIPROC)load("glTexCoordP2ui");
	cppgl_glTexCoordP2uiv = (PFNGLTEXCOORDP2UIVPROC)load("glTexCoordP2uiv");
	cppgl_glTexCoordP3ui = (PFNGLTEXCOORDP3UIPROC)load("glTexCoordP3ui");
	cppgl_glTexCoordP3uiv = (PFNGLTEXCOORDP3UIVPROC)load("glTexCoordP3uiv");
	cppgl_glTexCoordP4ui = (PFNGLTEXCOORDP4UIPROC)load("glTexCoordP4ui");
	cppgl_glTexCoordP4uiv = (PFNGLTEXCOORDP4UIVPROC)load("glTexCoordP4uiv");
	cppgl_glMultiTexCoordP1ui = (PFNGLMULTITEXCOORDP1UIPROC)load("glMultiTexCoordP1ui");
	cppgl_glMultiTexCoordP1uiv = (PFNGLMULTITEXCOORDP1UIVPROC)load("glMultiTexCoordP1uiv");
	cppgl_glMultiTexCoordP2ui = (PFNGLMULTITEXCOORDP2UIPROC)load("glMultiTexCoordP2ui");
	cppgl_glMultiTexCoordP2uiv = (PFNGLMULTITEXCOORDP2UIVPROC)load("glMultiTexCoordP2uiv");
	cppgl_glMultiTexCoordP3ui = (PFNGLMULTITEXCOORDP3UIPROC)load("glMultiTexCoordP3ui");
	cppgl_glMultiTexCoordP3uiv = (PFNGLMULTITEXCOORDP3UIVPROC)load("glMultiTexCoordP3uiv");
	cppgl_glMultiTexCoordP4ui = (PFNGLMULTITEXCOORDP4UIPROC)load("glMultiTexCoordP4ui");
	cppgl_glMultiTexCoordP4uiv = (PFNGLMULTITEXCOORDP4UIVPROC)load("glMultiTexCoordP4uiv");
	cppgl_glNormalP3ui = (PFNGLNORMALP3UIPROC)load("glNormalP3ui");
	cppgl_glNormalP3uiv = (PFNGLNORMALP3UIVPROC)load("glNormalP3uiv");
	cppgl_glColorP3ui = (PFNGLCOLORP3UIPROC)load("glColorP3ui");
	cppgl_glColorP3uiv = (PFNGLCOLORP3UIVPROC)load("glColorP3uiv");
	cppgl_glColorP4ui = (PFNGLCOLORP4UIPROC)load("glColorP4ui");
	cppgl_glColorP4uiv = (PFNGLCOLORP4UIVPROC)load("glColorP4uiv");
	cppgl_glSecondaryColorP3ui = (PFNGLSECONDARYCOLORP3UIPROC)load("glSecondaryColorP3ui");
	cppgl_glSecondaryColorP3uiv = (PFNGLSECONDARYCOLORP3UIVPROC)load("glSecondaryColorP3uiv");
}
static void load_GL_VERSION_4_0(CPPGLloadproc load) {
	if(!CPPGL_GL_VERSION_4_0) return;
	cppgl_glMinSampleShading = (PFNGLMINSAMPLESHADINGPROC)load("glMinSampleShading");
	cppgl_glBlendEquationi = (PFNGLBLENDEQUATIONIPROC)load("glBlendEquationi");
	cppgl_glBlendEquationSeparatei = (PFNGLBLENDEQUATIONSEPARATEIPROC)load("glBlendEquationSeparatei");
	cppgl_glBlendFunci = (PFNGLBLENDFUNCIPROC)load("glBlendFunci");
	cppgl_glBlendFuncSeparatei = (PFNGLBLENDFUNCSEPARATEIPROC)load("glBlendFuncSeparatei");
	cppgl_glDrawArraysIndirect = (PFNGLDRAWARRAYSINDIRECTPROC)load("glDrawArraysIndirect");
	cppgl_glDrawElementsIndirect = (PFNGLDRAWELEMENTSINDIRECTPROC)load("glDrawElementsIndirect");
	cppgl_glUniform1d = (PFNGLUNIFORM1DPROC)load("glUniform1d");
	cppgl_glUniform2d = (PFNGLUNIFORM2DPROC)load("glUniform2d");
	cppgl_glUniform3d = (PFNGLUNIFORM3DPROC)load("glUniform3d");
	cppgl_glUniform4d = (PFNGLUNIFORM4DPROC)load("glUniform4d");
	cppgl_glUniform1dv = (PFNGLUNIFORM1DVPROC)load("glUniform1dv");
	cppgl_glUniform2dv = (PFNGLUNIFORM2DVPROC)load("glUniform2dv");
	cppgl_glUniform3dv = (PFNGLUNIFORM3DVPROC)load("glUniform3dv");
	cppgl_glUniform4dv = (PFNGLUNIFORM4DVPROC)load("glUniform4dv");
	cppgl_glUniformMatrix2dv = (PFNGLUNIFORMMATRIX2DVPROC)load("glUniformMatrix2dv");
	cppgl_glUniformMatrix3dv = (PFNGLUNIFORMMATRIX3DVPROC)load("glUniformMatrix3dv");
	cppgl_glUniformMatrix4dv = (PFNGLUNIFORMMATRIX4DVPROC)load("glUniformMatrix4dv");
	cppgl_glUniformMatrix2x3dv = (PFNGLUNIFORMMATRIX2X3DVPROC)load("glUniformMatrix2x3dv");
	cppgl_glUniformMatrix2x4dv = (PFNGLUNIFORMMATRIX2X4DVPROC)load("glUniformMatrix2x4dv");
	cppgl_glUniformMatrix3x2dv = (PFNGLUNIFORMMATRIX3X2DVPROC)load("glUniformMatrix3x2dv");
	cppgl_glUniformMatrix3x4dv = (PFNGLUNIFORMMATRIX3X4DVPROC)load("glUniformMatrix3x4dv");
	cppgl_glUniformMatrix4x2dv = (PFNGLUNIFORMMATRIX4X2DVPROC)load("glUniformMatrix4x2dv");
	cppgl_glUniformMatrix4x3dv = (PFNGLUNIFORMMATRIX4X3DVPROC)load("glUniformMatrix4x3dv");
	cppgl_glGetUniformdv = (PFNGLGETUNIFORMDVPROC)load("glGetUniformdv");
	cppgl_glGetSubroutineUniformLocation = (PFNGLGETSUBROUTINEUNIFORMLOCATIONPROC)load("glGetSubroutineUniformLocation");
	cppgl_glGetSubroutineIndex = (PFNGLGETSUBROUTINEINDEXPROC)load("glGetSubroutineIndex");
	cppgl_glGetActiveSubroutineUniformiv = (PFNGLGETACTIVESUBROUTINEUNIFORMIVPROC)load("glGetActiveSubroutineUniformiv");
	cppgl_glGetActiveSubroutineUniformName = (PFNGLGETACTIVESUBROUTINEUNIFORMNAMEPROC)load("glGetActiveSubroutineUniformName");
	cppgl_glGetActiveSubroutineName = (PFNGLGETACTIVESUBROUTINENAMEPROC)load("glGetActiveSubroutineName");
	cppgl_glUniformSubroutinesuiv = (PFNGLUNIFORMSUBROUTINESUIVPROC)load("glUniformSubroutinesuiv");
	cppgl_glGetUniformSubroutineuiv = (PFNGLGETUNIFORMSUBROUTINEUIVPROC)load("glGetUniformSubroutineuiv");
	cppgl_glGetProgramStageiv = (PFNGLGETPROGRAMSTAGEIVPROC)load("glGetProgramStageiv");
	cppgl_glPatchParameteri = (PFNGLPATCHPARAMETERIPROC)load("glPatchParameteri");
	cppgl_glPatchParameterfv = (PFNGLPATCHPARAMETERFVPROC)load("glPatchParameterfv");
	cppgl_glBindTransformFeedback = (PFNGLBINDTRANSFORMFEEDBACKPROC)load("glBindTransformFeedback");
	cppgl_glDeleteTransformFeedbacks = (PFNGLDELETETRANSFORMFEEDBACKSPROC)load("glDeleteTransformFeedbacks");
	cppgl_glGenTransformFeedbacks = (PFNGLGENTRANSFORMFEEDBACKSPROC)load("glGenTransformFeedbacks");
	cppgl_glIsTransformFeedback = (PFNGLISTRANSFORMFEEDBACKPROC)load("glIsTransformFeedback");
	cppgl_glPauseTransformFeedback = (PFNGLPAUSETRANSFORMFEEDBACKPROC)load("glPauseTransformFeedback");
	cppgl_glResumeTransformFeedback = (PFNGLRESUMETRANSFORMFEEDBACKPROC)load("glResumeTransformFeedback");
	cppgl_glDrawTransformFeedback = (PFNGLDRAWTRANSFORMFEEDBACKPROC)load("glDrawTransformFeedback");
	cppgl_glDrawTransformFeedbackStream = (PFNGLDRAWTRANSFORMFEEDBACKSTREAMPROC)load("glDrawTransformFeedbackStream");
	cppgl_glBeginQueryIndexed = (PFNGLBEGINQUERYINDEXEDPROC)load("glBeginQueryIndexed");
	cppgl_glEndQueryIndexed = (PFNGLENDQUERYINDEXEDPROC)load("glEndQueryIndexed");
	cppgl_glGetQueryIndexediv = (PFNGLGETQUERYINDEXEDIVPROC)load("glGetQueryIndexediv");
}
static void load_GL_VERSION_4_1(CPPGLloadproc load) {
	if(!CPPGL_GL_VERSION_4_1) return;
	cppgl_glReleaseShaderCompiler = (PFNGLRELEASESHADERCOMPILERPROC)load("glReleaseShaderCompiler");
	cppgl_glShaderBinary = (PFNGLSHADERBINARYPROC)load("glShaderBinary");
	cppgl_glGetShaderPrecisionFormat = (PFNGLGETSHADERPRECISIONFORMATPROC)load("glGetShaderPrecisionFormat");
	cppgl_glDepthRangef = (PFNGLDEPTHRANGEFPROC)load("glDepthRangef");
	cppgl_glClearDepthf = (PFNGLCLEARDEPTHFPROC)load("glClearDepthf");
	cppgl_glGetProgramBinary = (PFNGLGETPROGRAMBINARYPROC)load("glGetProgramBinary");
	cppgl_glProgramBinary = (PFNGLPROGRAMBINARYPROC)load("glProgramBinary");
	cppgl_glProgramParameteri = (PFNGLPROGRAMPARAMETERIPROC)load("glProgramParameteri");
	cppgl_glUseProgramStages = (PFNGLUSEPROGRAMSTAGESPROC)load("glUseProgramStages");
	cppgl_glActiveShaderProgram = (PFNGLACTIVESHADERPROGRAMPROC)load("glActiveShaderProgram");
	cppgl_glCreateShaderProgramv = (PFNGLCREATESHADERPROGRAMVPROC)load("glCreateShaderProgramv");
	cppgl_glBindProgramPipeline = (PFNGLBINDPROGRAMPIPELINEPROC)load("glBindProgramPipeline");
	cppgl_glDeleteProgramPipelines = (PFNGLDELETEPROGRAMPIPELINESPROC)load("glDeleteProgramPipelines");
	cppgl_glGenProgramPipelines = (PFNGLGENPROGRAMPIPELINESPROC)load("glGenProgramPipelines");
	cppgl_glIsProgramPipeline = (PFNGLISPROGRAMPIPELINEPROC)load("glIsProgramPipeline");
	cppgl_glGetProgramPipelineiv = (PFNGLGETPROGRAMPIPELINEIVPROC)load("glGetProgramPipelineiv");
	cppgl_glProgramUniform1i = (PFNGLPROGRAMUNIFORM1IPROC)load("glProgramUniform1i");
	cppgl_glProgramUniform1iv = (PFNGLPROGRAMUNIFORM1IVPROC)load("glProgramUniform1iv");
	cppgl_glProgramUniform1f = (PFNGLPROGRAMUNIFORM1FPROC)load("glProgramUniform1f");
	cppgl_glProgramUniform1fv = (PFNGLPROGRAMUNIFORM1FVPROC)load("glProgramUniform1fv");
	cppgl_glProgramUniform1d = (PFNGLPROGRAMUNIFORM1DPROC)load("glProgramUniform1d");
	cppgl_glProgramUniform1dv = (PFNGLPROGRAMUNIFORM1DVPROC)load("glProgramUniform1dv");
	cppgl_glProgramUniform1ui = (PFNGLPROGRAMUNIFORM1UIPROC)load("glProgramUniform1ui");
	cppgl_glProgramUniform1uiv = (PFNGLPROGRAMUNIFORM1UIVPROC)load("glProgramUniform1uiv");
	cppgl_glProgramUniform2i = (PFNGLPROGRAMUNIFORM2IPROC)load("glProgramUniform2i");
	cppgl_glProgramUniform2iv = (PFNGLPROGRAMUNIFORM2IVPROC)load("glProgramUniform2iv");
	cppgl_glProgramUniform2f = (PFNGLPROGRAMUNIFORM2FPROC)load("glProgramUniform2f");
	cppgl_glProgramUniform2fv = (PFNGLPROGRAMUNIFORM2FVPROC)load("glProgramUniform2fv");
	cppgl_glProgramUniform2d = (PFNGLPROGRAMUNIFORM2DPROC)load("glProgramUniform2d");
	cppgl_glProgramUniform2dv = (PFNGLPROGRAMUNIFORM2DVPROC)load("glProgramUniform2dv");
	cppgl_glProgramUniform2ui = (PFNGLPROGRAMUNIFORM2UIPROC)load("glProgramUniform2ui");
	cppgl_glProgramUniform2uiv = (PFNGLPROGRAMUNIFORM2UIVPROC)load("glProgramUniform2uiv");
	cppgl_glProgramUniform3i = (PFNGLPROGRAMUNIFORM3IPROC)load("glProgramUniform3i");
	cppgl_glProgramUniform3iv = (PFNGLPROGRAMUNIFORM3IVPROC)load("glProgramUniform3iv");
	cppgl_glProgramUniform3f = (PFNGLPROGRAMUNIFORM3FPROC)load("glProgramUniform3f");
	cppgl_glProgramUniform3fv = (PFNGLPROGRAMUNIFORM3FVPROC)load("glProgramUniform3fv");
	cppgl_glProgramUniform3d = (PFNGLPROGRAMUNIFORM3DPROC)load("glProgramUniform3d");
	cppgl_glProgramUniform3dv = (PFNGLPROGRAMUNIFORM3DVPROC)load("glProgramUniform3dv");
	cppgl_glProgramUniform3ui = (PFNGLPROGRAMUNIFORM3UIPROC)load("glProgramUniform3ui");
	cppgl_glProgramUniform3uiv = (PFNGLPROGRAMUNIFORM3UIVPROC)load("glProgramUniform3uiv");
	cppgl_glProgramUniform4i = (PFNGLPROGRAMUNIFORM4IPROC)load("glProgramUniform4i");
	cppgl_glProgramUniform4iv = (PFNGLPROGRAMUNIFORM4IVPROC)load("glProgramUniform4iv");
	cppgl_glProgramUniform4f = (PFNGLPROGRAMUNIFORM4FPROC)load("glProgramUniform4f");
	cppgl_glProgramUniform4fv = (PFNGLPROGRAMUNIFORM4FVPROC)load("glProgramUniform4fv");
	cppgl_glProgramUniform4d = (PFNGLPROGRAMUNIFORM4DPROC)load("glProgramUniform4d");
	cppgl_glProgramUniform4dv = (PFNGLPROGRAMUNIFORM4DVPROC)load("glProgramUniform4dv");
	cppgl_glProgramUniform4ui = (PFNGLPROGRAMUNIFORM4UIPROC)load("glProgramUniform4ui");
	cppgl_glProgramUniform4uiv = (PFNGLPROGRAMUNIFORM4UIVPROC)load("glProgramUniform4uiv");
	cppgl_glProgramUniformMatrix2fv = (PFNGLPROGRAMUNIFORMMATRIX2FVPROC)load("glProgramUniformMatrix2fv");
	cppgl_glProgramUniformMatrix3fv = (PFNGLPROGRAMUNIFORMMATRIX3FVPROC)load("glProgramUniformMatrix3fv");
	cppgl_glProgramUniformMatrix4fv = (PFNGLPROGRAMUNIFORMMATRIX4FVPROC)load("glProgramUniformMatrix4fv");
	cppgl_glProgramUniformMatrix2dv = (PFNGLPROGRAMUNIFORMMATRIX2DVPROC)load("glProgramUniformMatrix2dv");
	cppgl_glProgramUniformMatrix3dv = (PFNGLPROGRAMUNIFORMMATRIX3DVPROC)load("glProgramUniformMatrix3dv");
	cppgl_glProgramUniformMatrix4dv = (PFNGLPROGRAMUNIFORMMATRIX4DVPROC)load("glProgramUniformMatrix4dv");
	cppgl_glProgramUniformMatrix2x3fv = (PFNGLPROGRAMUNIFORMMATRIX2X3FVPROC)load("glProgramUniformMatrix2x3fv");
	cppgl_glProgramUniformMatrix3x2fv = (PFNGLPROGRAMUNIFORMMATRIX3X2FVPROC)load("glProgramUniformMatrix3x2fv");
	cppgl_glProgramUniformMatrix2x4fv = (PFNGLPROGRAMUNIFORMMATRIX2X4FVPROC)load("glProgramUniformMatrix2x4fv");
	cppgl_glProgramUniformMatrix4x2fv = (PFNGLPROGRAMUNIFORMMATRIX4X2FVPROC)load("glProgramUniformMatrix4x2fv");
	cppgl_glProgramUniformMatrix3x4fv = (PFNGLPROGRAMUNIFORMMATRIX3X4FVPROC)load("glProgramUniformMatrix3x4fv");
	cppgl_glProgramUniformMatrix4x3fv = (PFNGLPROGRAMUNIFORMMATRIX4X3FVPROC)load("glProgramUniformMatrix4x3fv");
	cppgl_glProgramUniformMatrix2x3dv = (PFNGLPROGRAMUNIFORMMATRIX2X3DVPROC)load("glProgramUniformMatrix2x3dv");
	cppgl_glProgramUniformMatrix3x2dv = (PFNGLPROGRAMUNIFORMMATRIX3X2DVPROC)load("glProgramUniformMatrix3x2dv");
	cppgl_glProgramUniformMatrix2x4dv = (PFNGLPROGRAMUNIFORMMATRIX2X4DVPROC)load("glProgramUniformMatrix2x4dv");
	cppgl_glProgramUniformMatrix4x2dv = (PFNGLPROGRAMUNIFORMMATRIX4X2DVPROC)load("glProgramUniformMatrix4x2dv");
	cppgl_glProgramUniformMatrix3x4dv = (PFNGLPROGRAMUNIFORMMATRIX3X4DVPROC)load("glProgramUniformMatrix3x4dv");
	cppgl_glProgramUniformMatrix4x3dv = (PFNGLPROGRAMUNIFORMMATRIX4X3DVPROC)load("glProgramUniformMatrix4x3dv");
	cppgl_glValidateProgramPipeline = (PFNGLVALIDATEPROGRAMPIPELINEPROC)load("glValidateProgramPipeline");
	cppgl_glGetProgramPipelineInfoLog = (PFNGLGETPROGRAMPIPELINEINFOLOGPROC)load("glGetProgramPipelineInfoLog");
	cppgl_glVertexAttribL1d = (PFNGLVERTEXATTRIBL1DPROC)load("glVertexAttribL1d");
	cppgl_glVertexAttribL2d = (PFNGLVERTEXATTRIBL2DPROC)load("glVertexAttribL2d");
	cppgl_glVertexAttribL3d = (PFNGLVERTEXATTRIBL3DPROC)load("glVertexAttribL3d");
	cppgl_glVertexAttribL4d = (PFNGLVERTEXATTRIBL4DPROC)load("glVertexAttribL4d");
	cppgl_glVertexAttribL1dv = (PFNGLVERTEXATTRIBL1DVPROC)load("glVertexAttribL1dv");
	cppgl_glVertexAttribL2dv = (PFNGLVERTEXATTRIBL2DVPROC)load("glVertexAttribL2dv");
	cppgl_glVertexAttribL3dv = (PFNGLVERTEXATTRIBL3DVPROC)load("glVertexAttribL3dv");
	cppgl_glVertexAttribL4dv = (PFNGLVERTEXATTRIBL4DVPROC)load("glVertexAttribL4dv");
	cppgl_glVertexAttribLPointer = (PFNGLVERTEXATTRIBLPOINTERPROC)load("glVertexAttribLPointer");
	cppgl_glGetVertexAttribLdv = (PFNGLGETVERTEXATTRIBLDVPROC)load("glGetVertexAttribLdv");
	cppgl_glViewportArrayv = (PFNGLVIEWPORTARRAYVPROC)load("glViewportArrayv");
	cppgl_glViewportIndexedf = (PFNGLVIEWPORTINDEXEDFPROC)load("glViewportIndexedf");
	cppgl_glViewportIndexedfv = (PFNGLVIEWPORTINDEXEDFVPROC)load("glViewportIndexedfv");
	cppgl_glScissorArrayv = (PFNGLSCISSORARRAYVPROC)load("glScissorArrayv");
	cppgl_glScissorIndexed = (PFNGLSCISSORINDEXEDPROC)load("glScissorIndexed");
	cppgl_glScissorIndexedv = (PFNGLSCISSORINDEXEDVPROC)load("glScissorIndexedv");
	cppgl_glDepthRangeArrayv = (PFNGLDEPTHRANGEARRAYVPROC)load("glDepthRangeArrayv");
	cppgl_glDepthRangeIndexed = (PFNGLDEPTHRANGEINDEXEDPROC)load("glDepthRangeIndexed");
	cppgl_glGetFloati_v = (PFNGLGETFLOATI_VPROC)load("glGetFloati_v");
	cppgl_glGetDoublei_v = (PFNGLGETDOUBLEI_VPROC)load("glGetDoublei_v");
}
static void load_GL_3DFX_tbuffer(CPPGLloadproc load) {
	if(!CPPGL_GL_3DFX_tbuffer) return;
	cppgl_glTbufferMask3DFX = (PFNGLTBUFFERMASK3DFXPROC)load("glTbufferMask3DFX");
}
static void load_GL_AMD_debug_output(CPPGLloadproc load) {
	if(!CPPGL_GL_AMD_debug_output) return;
	cppgl_glDebugMessageEnableAMD = (PFNGLDEBUGMESSAGEENABLEAMDPROC)load("glDebugMessageEnableAMD");
	cppgl_glDebugMessageInsertAMD = (PFNGLDEBUGMESSAGEINSERTAMDPROC)load("glDebugMessageInsertAMD");
	cppgl_glDebugMessageCallbackAMD = (PFNGLDEBUGMESSAGECALLBACKAMDPROC)load("glDebugMessageCallbackAMD");
	cppgl_glGetDebugMessageLogAMD = (PFNGLGETDEBUGMESSAGELOGAMDPROC)load("glGetDebugMessageLogAMD");
}
static void load_GL_AMD_draw_buffers_blend(CPPGLloadproc load) {
	if(!CPPGL_GL_AMD_draw_buffers_blend) return;
	cppgl_glBlendFuncIndexedAMD = (PFNGLBLENDFUNCINDEXEDAMDPROC)load("glBlendFuncIndexedAMD");
	cppgl_glBlendFuncSeparateIndexedAMD = (PFNGLBLENDFUNCSEPARATEINDEXEDAMDPROC)load("glBlendFuncSeparateIndexedAMD");
	cppgl_glBlendEquationIndexedAMD = (PFNGLBLENDEQUATIONINDEXEDAMDPROC)load("glBlendEquationIndexedAMD");
	cppgl_glBlendEquationSeparateIndexedAMD = (PFNGLBLENDEQUATIONSEPARATEINDEXEDAMDPROC)load("glBlendEquationSeparateIndexedAMD");
}
static void load_GL_AMD_gpu_shader_int64(CPPGLloadproc load) {
	if(!CPPGL_GL_AMD_gpu_shader_int64) return;
	cppgl_glUniform1i64NV = (PFNGLUNIFORM1I64NVPROC)load("glUniform1i64NV");
	cppgl_glUniform2i64NV = (PFNGLUNIFORM2I64NVPROC)load("glUniform2i64NV");
	cppgl_glUniform3i64NV = (PFNGLUNIFORM3I64NVPROC)load("glUniform3i64NV");
	cppgl_glUniform4i64NV = (PFNGLUNIFORM4I64NVPROC)load("glUniform4i64NV");
	cppgl_glUniform1i64vNV = (PFNGLUNIFORM1I64VNVPROC)load("glUniform1i64vNV");
	cppgl_glUniform2i64vNV = (PFNGLUNIFORM2I64VNVPROC)load("glUniform2i64vNV");
	cppgl_glUniform3i64vNV = (PFNGLUNIFORM3I64VNVPROC)load("glUniform3i64vNV");
	cppgl_glUniform4i64vNV = (PFNGLUNIFORM4I64VNVPROC)load("glUniform4i64vNV");
	cppgl_glUniform1ui64NV = (PFNGLUNIFORM1UI64NVPROC)load("glUniform1ui64NV");
	cppgl_glUniform2ui64NV = (PFNGLUNIFORM2UI64NVPROC)load("glUniform2ui64NV");
	cppgl_glUniform3ui64NV = (PFNGLUNIFORM3UI64NVPROC)load("glUniform3ui64NV");
	cppgl_glUniform4ui64NV = (PFNGLUNIFORM4UI64NVPROC)load("glUniform4ui64NV");
	cppgl_glUniform1ui64vNV = (PFNGLUNIFORM1UI64VNVPROC)load("glUniform1ui64vNV");
	cppgl_glUniform2ui64vNV = (PFNGLUNIFORM2UI64VNVPROC)load("glUniform2ui64vNV");
	cppgl_glUniform3ui64vNV = (PFNGLUNIFORM3UI64VNVPROC)load("glUniform3ui64vNV");
	cppgl_glUniform4ui64vNV = (PFNGLUNIFORM4UI64VNVPROC)load("glUniform4ui64vNV");
	cppgl_glGetUniformi64vNV = (PFNGLGETUNIFORMI64VNVPROC)load("glGetUniformi64vNV");
	cppgl_glGetUniformui64vNV = (PFNGLGETUNIFORMUI64VNVPROC)load("glGetUniformui64vNV");
	cppgl_glProgramUniform1i64NV = (PFNGLPROGRAMUNIFORM1I64NVPROC)load("glProgramUniform1i64NV");
	cppgl_glProgramUniform2i64NV = (PFNGLPROGRAMUNIFORM2I64NVPROC)load("glProgramUniform2i64NV");
	cppgl_glProgramUniform3i64NV = (PFNGLPROGRAMUNIFORM3I64NVPROC)load("glProgramUniform3i64NV");
	cppgl_glProgramUniform4i64NV = (PFNGLPROGRAMUNIFORM4I64NVPROC)load("glProgramUniform4i64NV");
	cppgl_glProgramUniform1i64vNV = (PFNGLPROGRAMUNIFORM1I64VNVPROC)load("glProgramUniform1i64vNV");
	cppgl_glProgramUniform2i64vNV = (PFNGLPROGRAMUNIFORM2I64VNVPROC)load("glProgramUniform2i64vNV");
	cppgl_glProgramUniform3i64vNV = (PFNGLPROGRAMUNIFORM3I64VNVPROC)load("glProgramUniform3i64vNV");
	cppgl_glProgramUniform4i64vNV = (PFNGLPROGRAMUNIFORM4I64VNVPROC)load("glProgramUniform4i64vNV");
	cppgl_glProgramUniform1ui64NV = (PFNGLPROGRAMUNIFORM1UI64NVPROC)load("glProgramUniform1ui64NV");
	cppgl_glProgramUniform2ui64NV = (PFNGLPROGRAMUNIFORM2UI64NVPROC)load("glProgramUniform2ui64NV");
	cppgl_glProgramUniform3ui64NV = (PFNGLPROGRAMUNIFORM3UI64NVPROC)load("glProgramUniform3ui64NV");
	cppgl_glProgramUniform4ui64NV = (PFNGLPROGRAMUNIFORM4UI64NVPROC)load("glProgramUniform4ui64NV");
	cppgl_glProgramUniform1ui64vNV = (PFNGLPROGRAMUNIFORM1UI64VNVPROC)load("glProgramUniform1ui64vNV");
	cppgl_glProgramUniform2ui64vNV = (PFNGLPROGRAMUNIFORM2UI64VNVPROC)load("glProgramUniform2ui64vNV");
	cppgl_glProgramUniform3ui64vNV = (PFNGLPROGRAMUNIFORM3UI64VNVPROC)load("glProgramUniform3ui64vNV");
	cppgl_glProgramUniform4ui64vNV = (PFNGLPROGRAMUNIFORM4UI64VNVPROC)load("glProgramUniform4ui64vNV");
}
static void load_GL_AMD_interleaved_elements(CPPGLloadproc load) {
	if(!CPPGL_GL_AMD_interleaved_elements) return;
	cppgl_glVertexAttribParameteriAMD = (PFNGLVERTEXATTRIBPARAMETERIAMDPROC)load("glVertexAttribParameteriAMD");
}
static void load_GL_AMD_multi_draw_indirect(CPPGLloadproc load) {
	if(!CPPGL_GL_AMD_multi_draw_indirect) return;
	cppgl_glMultiDrawArraysIndirectAMD = (PFNGLMULTIDRAWARRAYSINDIRECTAMDPROC)load("glMultiDrawArraysIndirectAMD");
	cppgl_glMultiDrawElementsIndirectAMD = (PFNGLMULTIDRAWELEMENTSINDIRECTAMDPROC)load("glMultiDrawElementsIndirectAMD");
}
static void load_GL_AMD_name_gen_delete(CPPGLloadproc load) {
	if(!CPPGL_GL_AMD_name_gen_delete) return;
	cppgl_glGenNamesAMD = (PFNGLGENNAMESAMDPROC)load("glGenNamesAMD");
	cppgl_glDeleteNamesAMD = (PFNGLDELETENAMESAMDPROC)load("glDeleteNamesAMD");
	cppgl_glIsNameAMD = (PFNGLISNAMEAMDPROC)load("glIsNameAMD");
}
static void load_GL_AMD_occlusion_query_event(CPPGLloadproc load) {
	if(!CPPGL_GL_AMD_occlusion_query_event) return;
	cppgl_glQueryObjectParameteruiAMD = (PFNGLQUERYOBJECTPARAMETERUIAMDPROC)load("glQueryObjectParameteruiAMD");
}
static void load_GL_AMD_performance_monitor(CPPGLloadproc load) {
	if(!CPPGL_GL_AMD_performance_monitor) return;
	cppgl_glGetPerfMonitorGroupsAMD = (PFNGLGETPERFMONITORGROUPSAMDPROC)load("glGetPerfMonitorGroupsAMD");
	cppgl_glGetPerfMonitorCountersAMD = (PFNGLGETPERFMONITORCOUNTERSAMDPROC)load("glGetPerfMonitorCountersAMD");
	cppgl_glGetPerfMonitorGroupStringAMD = (PFNGLGETPERFMONITORGROUPSTRINGAMDPROC)load("glGetPerfMonitorGroupStringAMD");
	cppgl_glGetPerfMonitorCounterStringAMD = (PFNGLGETPERFMONITORCOUNTERSTRINGAMDPROC)load("glGetPerfMonitorCounterStringAMD");
	cppgl_glGetPerfMonitorCounterInfoAMD = (PFNGLGETPERFMONITORCOUNTERINFOAMDPROC)load("glGetPerfMonitorCounterInfoAMD");
	cppgl_glGenPerfMonitorsAMD = (PFNGLGENPERFMONITORSAMDPROC)load("glGenPerfMonitorsAMD");
	cppgl_glDeletePerfMonitorsAMD = (PFNGLDELETEPERFMONITORSAMDPROC)load("glDeletePerfMonitorsAMD");
	cppgl_glSelectPerfMonitorCountersAMD = (PFNGLSELECTPERFMONITORCOUNTERSAMDPROC)load("glSelectPerfMonitorCountersAMD");
	cppgl_glBeginPerfMonitorAMD = (PFNGLBEGINPERFMONITORAMDPROC)load("glBeginPerfMonitorAMD");
	cppgl_glEndPerfMonitorAMD = (PFNGLENDPERFMONITORAMDPROC)load("glEndPerfMonitorAMD");
	cppgl_glGetPerfMonitorCounterDataAMD = (PFNGLGETPERFMONITORCOUNTERDATAAMDPROC)load("glGetPerfMonitorCounterDataAMD");
}
static void load_GL_AMD_sample_positions(CPPGLloadproc load) {
	if(!CPPGL_GL_AMD_sample_positions) return;
	cppgl_glSetMultisamplefvAMD = (PFNGLSETMULTISAMPLEFVAMDPROC)load("glSetMultisamplefvAMD");
}
static void load_GL_AMD_sparse_texture(CPPGLloadproc load) {
	if(!CPPGL_GL_AMD_sparse_texture) return;
	cppgl_glTexStorageSparseAMD = (PFNGLTEXSTORAGESPARSEAMDPROC)load("glTexStorageSparseAMD");
	cppgl_glTextureStorageSparseAMD = (PFNGLTEXTURESTORAGESPARSEAMDPROC)load("glTextureStorageSparseAMD");
}
static void load_GL_AMD_stencil_operation_extended(CPPGLloadproc load) {
	if(!CPPGL_GL_AMD_stencil_operation_extended) return;
	cppgl_glStencilOpValueAMD = (PFNGLSTENCILOPVALUEAMDPROC)load("glStencilOpValueAMD");
}
static void load_GL_AMD_vertex_shader_tessellator(CPPGLloadproc load) {
	if(!CPPGL_GL_AMD_vertex_shader_tessellator) return;
	cppgl_glTessellationFactorAMD = (PFNGLTESSELLATIONFACTORAMDPROC)load("glTessellationFactorAMD");
	cppgl_glTessellationModeAMD = (PFNGLTESSELLATIONMODEAMDPROC)load("glTessellationModeAMD");
}
static void load_GL_APPLE_element_array(CPPGLloadproc load) {
	if(!CPPGL_GL_APPLE_element_array) return;
	cppgl_glElementPointerAPPLE = (PFNGLELEMENTPOINTERAPPLEPROC)load("glElementPointerAPPLE");
	cppgl_glDrawElementArrayAPPLE = (PFNGLDRAWELEMENTARRAYAPPLEPROC)load("glDrawElementArrayAPPLE");
	cppgl_glDrawRangeElementArrayAPPLE = (PFNGLDRAWRANGEELEMENTARRAYAPPLEPROC)load("glDrawRangeElementArrayAPPLE");
	cppgl_glMultiDrawElementArrayAPPLE = (PFNGLMULTIDRAWELEMENTARRAYAPPLEPROC)load("glMultiDrawElementArrayAPPLE");
	cppgl_glMultiDrawRangeElementArrayAPPLE = (PFNGLMULTIDRAWRANGEELEMENTARRAYAPPLEPROC)load("glMultiDrawRangeElementArrayAPPLE");
}
static void load_GL_APPLE_fence(CPPGLloadproc load) {
	if(!CPPGL_GL_APPLE_fence) return;
	cppgl_glGenFencesAPPLE = (PFNGLGENFENCESAPPLEPROC)load("glGenFencesAPPLE");
	cppgl_glDeleteFencesAPPLE = (PFNGLDELETEFENCESAPPLEPROC)load("glDeleteFencesAPPLE");
	cppgl_glSetFenceAPPLE = (PFNGLSETFENCEAPPLEPROC)load("glSetFenceAPPLE");
	cppgl_glIsFenceAPPLE = (PFNGLISFENCEAPPLEPROC)load("glIsFenceAPPLE");
	cppgl_glTestFenceAPPLE = (PFNGLTESTFENCEAPPLEPROC)load("glTestFenceAPPLE");
	cppgl_glFinishFenceAPPLE = (PFNGLFINISHFENCEAPPLEPROC)load("glFinishFenceAPPLE");
	cppgl_glTestObjectAPPLE = (PFNGLTESTOBJECTAPPLEPROC)load("glTestObjectAPPLE");
	cppgl_glFinishObjectAPPLE = (PFNGLFINISHOBJECTAPPLEPROC)load("glFinishObjectAPPLE");
}
static void load_GL_APPLE_flush_buffer_range(CPPGLloadproc load) {
	if(!CPPGL_GL_APPLE_flush_buffer_range) return;
	cppgl_glBufferParameteriAPPLE = (PFNGLBUFFERPARAMETERIAPPLEPROC)load("glBufferParameteriAPPLE");
	cppgl_glFlushMappedBufferRangeAPPLE = (PFNGLFLUSHMAPPEDBUFFERRANGEAPPLEPROC)load("glFlushMappedBufferRangeAPPLE");
}
static void load_GL_APPLE_object_purgeable(CPPGLloadproc load) {
	if(!CPPGL_GL_APPLE_object_purgeable) return;
	cppgl_glObjectPurgeableAPPLE = (PFNGLOBJECTPURGEABLEAPPLEPROC)load("glObjectPurgeableAPPLE");
	cppgl_glObjectUnpurgeableAPPLE = (PFNGLOBJECTUNPURGEABLEAPPLEPROC)load("glObjectUnpurgeableAPPLE");
	cppgl_glGetObjectParameterivAPPLE = (PFNGLGETOBJECTPARAMETERIVAPPLEPROC)load("glGetObjectParameterivAPPLE");
}
static void load_GL_APPLE_texture_range(CPPGLloadproc load) {
	if(!CPPGL_GL_APPLE_texture_range) return;
	cppgl_glTextureRangeAPPLE = (PFNGLTEXTURERANGEAPPLEPROC)load("glTextureRangeAPPLE");
	cppgl_glGetTexParameterPointervAPPLE = (PFNGLGETTEXPARAMETERPOINTERVAPPLEPROC)load("glGetTexParameterPointervAPPLE");
}
static void load_GL_APPLE_vertex_array_object(CPPGLloadproc load) {
	if(!CPPGL_GL_APPLE_vertex_array_object) return;
	cppgl_glBindVertexArrayAPPLE = (PFNGLBINDVERTEXARRAYAPPLEPROC)load("glBindVertexArrayAPPLE");
	cppgl_glDeleteVertexArraysAPPLE = (PFNGLDELETEVERTEXARRAYSAPPLEPROC)load("glDeleteVertexArraysAPPLE");
	cppgl_glGenVertexArraysAPPLE = (PFNGLGENVERTEXARRAYSAPPLEPROC)load("glGenVertexArraysAPPLE");
	cppgl_glIsVertexArrayAPPLE = (PFNGLISVERTEXARRAYAPPLEPROC)load("glIsVertexArrayAPPLE");
}
static void load_GL_APPLE_vertex_array_range(CPPGLloadproc load) {
	if(!CPPGL_GL_APPLE_vertex_array_range) return;
	cppgl_glVertexArrayRangeAPPLE = (PFNGLVERTEXARRAYRANGEAPPLEPROC)load("glVertexArrayRangeAPPLE");
	cppgl_glFlushVertexArrayRangeAPPLE = (PFNGLFLUSHVERTEXARRAYRANGEAPPLEPROC)load("glFlushVertexArrayRangeAPPLE");
	cppgl_glVertexArrayParameteriAPPLE = (PFNGLVERTEXARRAYPARAMETERIAPPLEPROC)load("glVertexArrayParameteriAPPLE");
}
static void load_GL_APPLE_vertex_program_evaluators(CPPGLloadproc load) {
	if(!CPPGL_GL_APPLE_vertex_program_evaluators) return;
	cppgl_glEnableVertexAttribAPPLE = (PFNGLENABLEVERTEXATTRIBAPPLEPROC)load("glEnableVertexAttribAPPLE");
	cppgl_glDisableVertexAttribAPPLE = (PFNGLDISABLEVERTEXATTRIBAPPLEPROC)load("glDisableVertexAttribAPPLE");
	cppgl_glIsVertexAttribEnabledAPPLE = (PFNGLISVERTEXATTRIBENABLEDAPPLEPROC)load("glIsVertexAttribEnabledAPPLE");
	cppgl_glMapVertexAttrib1dAPPLE = (PFNGLMAPVERTEXATTRIB1DAPPLEPROC)load("glMapVertexAttrib1dAPPLE");
	cppgl_glMapVertexAttrib1fAPPLE = (PFNGLMAPVERTEXATTRIB1FAPPLEPROC)load("glMapVertexAttrib1fAPPLE");
	cppgl_glMapVertexAttrib2dAPPLE = (PFNGLMAPVERTEXATTRIB2DAPPLEPROC)load("glMapVertexAttrib2dAPPLE");
	cppgl_glMapVertexAttrib2fAPPLE = (PFNGLMAPVERTEXATTRIB2FAPPLEPROC)load("glMapVertexAttrib2fAPPLE");
}
static void load_GL_ARB_ES2_compatibility(CPPGLloadproc load) {
	if(!CPPGL_GL_ARB_ES2_compatibility) return;
	cppgl_glReleaseShaderCompiler = (PFNGLRELEASESHADERCOMPILERPROC)load("glReleaseShaderCompiler");
	cppgl_glShaderBinary = (PFNGLSHADERBINARYPROC)load("glShaderBinary");
	cppgl_glGetShaderPrecisionFormat = (PFNGLGETSHADERPRECISIONFORMATPROC)load("glGetShaderPrecisionFormat");
	cppgl_glDepthRangef = (PFNGLDEPTHRANGEFPROC)load("glDepthRangef");
	cppgl_glClearDepthf = (PFNGLCLEARDEPTHFPROC)load("glClearDepthf");
}
static void load_GL_ARB_ES3_1_compatibility(CPPGLloadproc load) {
	if(!CPPGL_GL_ARB_ES3_1_compatibility) return;
	cppgl_glMemoryBarrierByRegion = (PFNGLMEMORYBARRIERBYREGIONPROC)load("glMemoryBarrierByRegion");
}
static void load_GL_ARB_ES3_2_compatibility(CPPGLloadproc load) {
	if(!CPPGL_GL_ARB_ES3_2_compatibility) return;
	cppgl_glPrimitiveBoundingBoxARB = (PFNGLPRIMITIVEBOUNDINGBOXARBPROC)load("glPrimitiveBoundingBoxARB");
}
static void load_GL_ARB_base_instance(CPPGLloadproc load) {
	if(!CPPGL_GL_ARB_base_instance) return;
	cppgl_glDrawArraysInstancedBaseInstance = (PFNGLDRAWARRAYSINSTANCEDBASEINSTANCEPROC)load("glDrawArraysInstancedBaseInstance");
	cppgl_glDrawElementsInstancedBaseInstance = (PFNGLDRAWELEMENTSINSTANCEDBASEINSTANCEPROC)load("glDrawElementsInstancedBaseInstance");
	cppgl_glDrawElementsInstancedBaseVertexBaseInstance = (PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXBASEINSTANCEPROC)load("glDrawElementsInstancedBaseVertexBaseInstance");
}
static void load_GL_ARB_bindless_texture(CPPGLloadproc load) {
	if(!CPPGL_GL_ARB_bindless_texture) return;
	cppgl_glGetTextureHandleARB = (PFNGLGETTEXTUREHANDLEARBPROC)load("glGetTextureHandleARB");
	cppgl_glGetTextureSamplerHandleARB = (PFNGLGETTEXTURESAMPLERHANDLEARBPROC)load("glGetTextureSamplerHandleARB");
	cppgl_glMakeTextureHandleResidentARB = (PFNGLMAKETEXTUREHANDLERESIDENTARBPROC)load("glMakeTextureHandleResidentARB");
	cppgl_glMakeTextureHandleNonResidentARB = (PFNGLMAKETEXTUREHANDLENONRESIDENTARBPROC)load("glMakeTextureHandleNonResidentARB");
	cppgl_glGetImageHandleARB = (PFNGLGETIMAGEHANDLEARBPROC)load("glGetImageHandleARB");
	cppgl_glMakeImageHandleResidentARB = (PFNGLMAKEIMAGEHANDLERESIDENTARBPROC)load("glMakeImageHandleResidentARB");
	cppgl_glMakeImageHandleNonResidentARB = (PFNGLMAKEIMAGEHANDLENONRESIDENTARBPROC)load("glMakeImageHandleNonResidentARB");
	cppgl_glUniformHandleui64ARB = (PFNGLUNIFORMHANDLEUI64ARBPROC)load("glUniformHandleui64ARB");
	cppgl_glUniformHandleui64vARB = (PFNGLUNIFORMHANDLEUI64VARBPROC)load("glUniformHandleui64vARB");
	cppgl_glProgramUniformHandleui64ARB = (PFNGLPROGRAMUNIFORMHANDLEUI64ARBPROC)load("glProgramUniformHandleui64ARB");
	cppgl_glProgramUniformHandleui64vARB = (PFNGLPROGRAMUNIFORMHANDLEUI64VARBPROC)load("glProgramUniformHandleui64vARB");
	cppgl_glIsTextureHandleResidentARB = (PFNGLISTEXTUREHANDLERESIDENTARBPROC)load("glIsTextureHandleResidentARB");
	cppgl_glIsImageHandleResidentARB = (PFNGLISIMAGEHANDLERESIDENTARBPROC)load("glIsImageHandleResidentARB");
	cppgl_glVertexAttribL1ui64ARB = (PFNGLVERTEXATTRIBL1UI64ARBPROC)load("glVertexAttribL1ui64ARB");
	cppgl_glVertexAttribL1ui64vARB = (PFNGLVERTEXATTRIBL1UI64VARBPROC)load("glVertexAttribL1ui64vARB");
	cppgl_glGetVertexAttribLui64vARB = (PFNGLGETVERTEXATTRIBLUI64VARBPROC)load("glGetVertexAttribLui64vARB");
}
static void load_GL_ARB_blend_func_extended(CPPGLloadproc load) {
	if(!CPPGL_GL_ARB_blend_func_extended) return;
	cppgl_glBindFragDataLocationIndexed = (PFNGLBINDFRAGDATALOCATIONINDEXEDPROC)load("glBindFragDataLocationIndexed");
	cppgl_glGetFragDataIndex = (PFNGLGETFRAGDATAINDEXPROC)load("glGetFragDataIndex");
}
static void load_GL_ARB_buffer_storage(CPPGLloadproc load) {
	if(!CPPGL_GL_ARB_buffer_storage) return;
	cppgl_glBufferStorage = (PFNGLBUFFERSTORAGEPROC)load("glBufferStorage");
}
static void load_GL_ARB_cl_event(CPPGLloadproc load) {
	if(!CPPGL_GL_ARB_cl_event) return;
	cppgl_glCreateSyncFromCLeventARB = (PFNGLCREATESYNCFROMCLEVENTARBPROC)load("glCreateSyncFromCLeventARB");
}
static void load_GL_ARB_clear_buffer_object(CPPGLloadproc load) {
	if(!CPPGL_GL_ARB_clear_buffer_object) return;
	cppgl_glClearBufferData = (PFNGLCLEARBUFFERDATAPROC)load("glClearBufferData");
	cppgl_glClearBufferSubData = (PFNGLCLEARBUFFERSUBDATAPROC)load("glClearBufferSubData");
}
static void load_GL_ARB_clear_texture(CPPGLloadproc load) {
	if(!CPPGL_GL_ARB_clear_texture) return;
	cppgl_glClearTexImage = (PFNGLCLEARTEXIMAGEPROC)load("glClearTexImage");
	cppgl_glClearTexSubImage = (PFNGLCLEARTEXSUBIMAGEPROC)load("glClearTexSubImage");
}
static void load_GL_ARB_clip_control(CPPGLloadproc load) {
	if(!CPPGL_GL_ARB_clip_control) return;
	cppgl_glClipControl = (PFNGLCLIPCONTROLPROC)load("glClipControl");
}
static void load_GL_ARB_color_buffer_float(CPPGLloadproc load) {
	if(!CPPGL_GL_ARB_color_buffer_float) return;
	cppgl_glClampColorARB = (PFNGLCLAMPCOLORARBPROC)load("glClampColorARB");
}
static void load_GL_ARB_compute_shader(CPPGLloadproc load) {
	if(!CPPGL_GL_ARB_compute_shader) return;
	cppgl_glDispatchCompute = (PFNGLDISPATCHCOMPUTEPROC)load("glDispatchCompute");
	cppgl_glDispatchComputeIndirect = (PFNGLDISPATCHCOMPUTEINDIRECTPROC)load("glDispatchComputeIndirect");
}
static void load_GL_ARB_compute_variable_group_size(CPPGLloadproc load) {
	if(!CPPGL_GL_ARB_compute_variable_group_size) return;
	cppgl_glDispatchComputeGroupSizeARB = (PFNGLDISPATCHCOMPUTEGROUPSIZEARBPROC)load("glDispatchComputeGroupSizeARB");
}
static void load_GL_ARB_copy_buffer(CPPGLloadproc load) {
	if(!CPPGL_GL_ARB_copy_buffer) return;
	cppgl_glCopyBufferSubData = (PFNGLCOPYBUFFERSUBDATAPROC)load("glCopyBufferSubData");
}
static void load_GL_ARB_copy_image(CPPGLloadproc load) {
	if(!CPPGL_GL_ARB_copy_image) return;
	cppgl_glCopyImageSubData = (PFNGLCOPYIMAGESUBDATAPROC)load("glCopyImageSubData");
}
static void load_GL_ARB_debug_output(CPPGLloadproc load) {
	if(!CPPGL_GL_ARB_debug_output) return;
	cppgl_glDebugMessageControlARB = (PFNGLDEBUGMESSAGECONTROLARBPROC)load("glDebugMessageControlARB");
	cppgl_glDebugMessageInsertARB = (PFNGLDEBUGMESSAGEINSERTARBPROC)load("glDebugMessageInsertARB");
	cppgl_glDebugMessageCallbackARB = (PFNGLDEBUGMESSAGECALLBACKARBPROC)load("glDebugMessageCallbackARB");
	cppgl_glGetDebugMessageLogARB = (PFNGLGETDEBUGMESSAGELOGARBPROC)load("glGetDebugMessageLogARB");
}
static void load_GL_ARB_direct_state_access(CPPGLloadproc load) {
	if(!CPPGL_GL_ARB_direct_state_access) return;
	cppgl_glCreateTransformFeedbacks = (PFNGLCREATETRANSFORMFEEDBACKSPROC)load("glCreateTransformFeedbacks");
	cppgl_glTransformFeedbackBufferBase = (PFNGLTRANSFORMFEEDBACKBUFFERBASEPROC)load("glTransformFeedbackBufferBase");
	cppgl_glTransformFeedbackBufferRange = (PFNGLTRANSFORMFEEDBACKBUFFERRANGEPROC)load("glTransformFeedbackBufferRange");
	cppgl_glGetTransformFeedbackiv = (PFNGLGETTRANSFORMFEEDBACKIVPROC)load("glGetTransformFeedbackiv");
	cppgl_glGetTransformFeedbacki_v = (PFNGLGETTRANSFORMFEEDBACKI_VPROC)load("glGetTransformFeedbacki_v");
	cppgl_glGetTransformFeedbacki64_v = (PFNGLGETTRANSFORMFEEDBACKI64_VPROC)load("glGetTransformFeedbacki64_v");
	cppgl_glCreateBuffers = (PFNGLCREATEBUFFERSPROC)load("glCreateBuffers");
	cppgl_glNamedBufferStorage = (PFNGLNAMEDBUFFERSTORAGEPROC)load("glNamedBufferStorage");
	cppgl_glNamedBufferData = (PFNGLNAMEDBUFFERDATAPROC)load("glNamedBufferData");
	cppgl_glNamedBufferSubData = (PFNGLNAMEDBUFFERSUBDATAPROC)load("glNamedBufferSubData");
	cppgl_glCopyNamedBufferSubData = (PFNGLCOPYNAMEDBUFFERSUBDATAPROC)load("glCopyNamedBufferSubData");
	cppgl_glClearNamedBufferData = (PFNGLCLEARNAMEDBUFFERDATAPROC)load("glClearNamedBufferData");
	cppgl_glClearNamedBufferSubData = (PFNGLCLEARNAMEDBUFFERSUBDATAPROC)load("glClearNamedBufferSubData");
	cppgl_glMapNamedBuffer = (PFNGLMAPNAMEDBUFFERPROC)load("glMapNamedBuffer");
	cppgl_glMapNamedBufferRange = (PFNGLMAPNAMEDBUFFERRANGEPROC)load("glMapNamedBufferRange");
	cppgl_glUnmapNamedBuffer = (PFNGLUNMAPNAMEDBUFFERPROC)load("glUnmapNamedBuffer");
	cppgl_glFlushMappedNamedBufferRange = (PFNGLFLUSHMAPPEDNAMEDBUFFERRANGEPROC)load("glFlushMappedNamedBufferRange");
	cppgl_glGetNamedBufferParameteriv = (PFNGLGETNAMEDBUFFERPARAMETERIVPROC)load("glGetNamedBufferParameteriv");
	cppgl_glGetNamedBufferParameteri64v = (PFNGLGETNAMEDBUFFERPARAMETERI64VPROC)load("glGetNamedBufferParameteri64v");
	cppgl_glGetNamedBufferPointerv = (PFNGLGETNAMEDBUFFERPOINTERVPROC)load("glGetNamedBufferPointerv");
	cppgl_glGetNamedBufferSubData = (PFNGLGETNAMEDBUFFERSUBDATAPROC)load("glGetNamedBufferSubData");
	cppgl_glCreateFramebuffers = (PFNGLCREATEFRAMEBUFFERSPROC)load("glCreateFramebuffers");
	cppgl_glNamedFramebufferRenderbuffer = (PFNGLNAMEDFRAMEBUFFERRENDERBUFFERPROC)load("glNamedFramebufferRenderbuffer");
	cppgl_glNamedFramebufferParameteri = (PFNGLNAMEDFRAMEBUFFERPARAMETERIPROC)load("glNamedFramebufferParameteri");
	cppgl_glNamedFramebufferTexture = (PFNGLNAMEDFRAMEBUFFERTEXTUREPROC)load("glNamedFramebufferTexture");
	cppgl_glNamedFramebufferTextureLayer = (PFNGLNAMEDFRAMEBUFFERTEXTURELAYERPROC)load("glNamedFramebufferTextureLayer");
	cppgl_glNamedFramebufferDrawBuffer = (PFNGLNAMEDFRAMEBUFFERDRAWBUFFERPROC)load("glNamedFramebufferDrawBuffer");
	cppgl_glNamedFramebufferDrawBuffers = (PFNGLNAMEDFRAMEBUFFERDRAWBUFFERSPROC)load("glNamedFramebufferDrawBuffers");
	cppgl_glNamedFramebufferReadBuffer = (PFNGLNAMEDFRAMEBUFFERREADBUFFERPROC)load("glNamedFramebufferReadBuffer");
	cppgl_glInvalidateNamedFramebufferData = (PFNGLINVALIDATENAMEDFRAMEBUFFERDATAPROC)load("glInvalidateNamedFramebufferData");
	cppgl_glInvalidateNamedFramebufferSubData = (PFNGLINVALIDATENAMEDFRAMEBUFFERSUBDATAPROC)load("glInvalidateNamedFramebufferSubData");
	cppgl_glClearNamedFramebufferiv = (PFNGLCLEARNAMEDFRAMEBUFFERIVPROC)load("glClearNamedFramebufferiv");
	cppgl_glClearNamedFramebufferuiv = (PFNGLCLEARNAMEDFRAMEBUFFERUIVPROC)load("glClearNamedFramebufferuiv");
	cppgl_glClearNamedFramebufferfv = (PFNGLCLEARNAMEDFRAMEBUFFERFVPROC)load("glClearNamedFramebufferfv");
	cppgl_glClearNamedFramebufferfi = (PFNGLCLEARNAMEDFRAMEBUFFERFIPROC)load("glClearNamedFramebufferfi");
	cppgl_glBlitNamedFramebuffer = (PFNGLBLITNAMEDFRAMEBUFFERPROC)load("glBlitNamedFramebuffer");
	cppgl_glCheckNamedFramebufferStatus = (PFNGLCHECKNAMEDFRAMEBUFFERSTATUSPROC)load("glCheckNamedFramebufferStatus");
	cppgl_glGetNamedFramebufferParameteriv = (PFNGLGETNAMEDFRAMEBUFFERPARAMETERIVPROC)load("glGetNamedFramebufferParameteriv");
	cppgl_glGetNamedFramebufferAttachmentParameteriv = (PFNGLGETNAMEDFRAMEBUFFERATTACHMENTPARAMETERIVPROC)load("glGetNamedFramebufferAttachmentParameteriv");
	cppgl_glCreateRenderbuffers = (PFNGLCREATERENDERBUFFERSPROC)load("glCreateRenderbuffers");
	cppgl_glNamedRenderbufferStorage = (PFNGLNAMEDRENDERBUFFERSTORAGEPROC)load("glNamedRenderbufferStorage");
	cppgl_glNamedRenderbufferStorageMultisample = (PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLEPROC)load("glNamedRenderbufferStorageMultisample");
	cppgl_glGetNamedRenderbufferParameteriv = (PFNGLGETNAMEDRENDERBUFFERPARAMETERIVPROC)load("glGetNamedRenderbufferParameteriv");
	cppgl_glCreateTextures = (PFNGLCREATETEXTURESPROC)load("glCreateTextures");
	cppgl_glTextureBuffer = (PFNGLTEXTUREBUFFERPROC)load("glTextureBuffer");
	cppgl_glTextureBufferRange = (PFNGLTEXTUREBUFFERRANGEPROC)load("glTextureBufferRange");
	cppgl_glTextureStorage1D = (PFNGLTEXTURESTORAGE1DPROC)load("glTextureStorage1D");
	cppgl_glTextureStorage2D = (PFNGLTEXTURESTORAGE2DPROC)load("glTextureStorage2D");
	cppgl_glTextureStorage3D = (PFNGLTEXTURESTORAGE3DPROC)load("glTextureStorage3D");
	cppgl_glTextureStorage2DMultisample = (PFNGLTEXTURESTORAGE2DMULTISAMPLEPROC)load("glTextureStorage2DMultisample");
	cppgl_glTextureStorage3DMultisample = (PFNGLTEXTURESTORAGE3DMULTISAMPLEPROC)load("glTextureStorage3DMultisample");
	cppgl_glTextureSubImage1D = (PFNGLTEXTURESUBIMAGE1DPROC)load("glTextureSubImage1D");
	cppgl_glTextureSubImage2D = (PFNGLTEXTURESUBIMAGE2DPROC)load("glTextureSubImage2D");
	cppgl_glTextureSubImage3D = (PFNGLTEXTURESUBIMAGE3DPROC)load("glTextureSubImage3D");
	cppgl_glCompressedTextureSubImage1D = (PFNGLCOMPRESSEDTEXTURESUBIMAGE1DPROC)load("glCompressedTextureSubImage1D");
	cppgl_glCompressedTextureSubImage2D = (PFNGLCOMPRESSEDTEXTURESUBIMAGE2DPROC)load("glCompressedTextureSubImage2D");
	cppgl_glCompressedTextureSubImage3D = (PFNGLCOMPRESSEDTEXTURESUBIMAGE3DPROC)load("glCompressedTextureSubImage3D");
	cppgl_glCopyTextureSubImage1D = (PFNGLCOPYTEXTURESUBIMAGE1DPROC)load("glCopyTextureSubImage1D");
	cppgl_glCopyTextureSubImage2D = (PFNGLCOPYTEXTURESUBIMAGE2DPROC)load("glCopyTextureSubImage2D");
	cppgl_glCopyTextureSubImage3D = (PFNGLCOPYTEXTURESUBIMAGE3DPROC)load("glCopyTextureSubImage3D");
	cppgl_glTextureParameterf = (PFNGLTEXTUREPARAMETERFPROC)load("glTextureParameterf");
	cppgl_glTextureParameterfv = (PFNGLTEXTUREPARAMETERFVPROC)load("glTextureParameterfv");
	cppgl_glTextureParameteri = (PFNGLTEXTUREPARAMETERIPROC)load("glTextureParameteri");
	cppgl_glTextureParameterIiv = (PFNGLTEXTUREPARAMETERIIVPROC)load("glTextureParameterIiv");
	cppgl_glTextureParameterIuiv = (PFNGLTEXTUREPARAMETERIUIVPROC)load("glTextureParameterIuiv");
	cppgl_glTextureParameteriv = (PFNGLTEXTUREPARAMETERIVPROC)load("glTextureParameteriv");
	cppgl_glGenerateTextureMipmap = (PFNGLGENERATETEXTUREMIPMAPPROC)load("glGenerateTextureMipmap");
	cppgl_glBindTextureUnit = (PFNGLBINDTEXTUREUNITPROC)load("glBindTextureUnit");
	cppgl_glGetTextureImage = (PFNGLGETTEXTUREIMAGEPROC)load("glGetTextureImage");
	cppgl_glGetCompressedTextureImage = (PFNGLGETCOMPRESSEDTEXTUREIMAGEPROC)load("glGetCompressedTextureImage");
	cppgl_glGetTextureLevelParameterfv = (PFNGLGETTEXTURELEVELPARAMETERFVPROC)load("glGetTextureLevelParameterfv");
	cppgl_glGetTextureLevelParameteriv = (PFNGLGETTEXTURELEVELPARAMETERIVPROC)load("glGetTextureLevelParameteriv");
	cppgl_glGetTextureParameterfv = (PFNGLGETTEXTUREPARAMETERFVPROC)load("glGetTextureParameterfv");
	cppgl_glGetTextureParameterIiv = (PFNGLGETTEXTUREPARAMETERIIVPROC)load("glGetTextureParameterIiv");
	cppgl_glGetTextureParameterIuiv = (PFNGLGETTEXTUREPARAMETERIUIVPROC)load("glGetTextureParameterIuiv");
	cppgl_glGetTextureParameteriv = (PFNGLGETTEXTUREPARAMETERIVPROC)load("glGetTextureParameteriv");
	cppgl_glCreateVertexArrays = (PFNGLCREATEVERTEXARRAYSPROC)load("glCreateVertexArrays");
	cppgl_glDisableVertexArrayAttrib = (PFNGLDISABLEVERTEXARRAYATTRIBPROC)load("glDisableVertexArrayAttrib");
	cppgl_glEnableVertexArrayAttrib = (PFNGLENABLEVERTEXARRAYATTRIBPROC)load("glEnableVertexArrayAttrib");
	cppgl_glVertexArrayElementBuffer = (PFNGLVERTEXARRAYELEMENTBUFFERPROC)load("glVertexArrayElementBuffer");
	cppgl_glVertexArrayVertexBuffer = (PFNGLVERTEXARRAYVERTEXBUFFERPROC)load("glVertexArrayVertexBuffer");
	cppgl_glVertexArrayVertexBuffers = (PFNGLVERTEXARRAYVERTEXBUFFERSPROC)load("glVertexArrayVertexBuffers");
	cppgl_glVertexArrayAttribBinding = (PFNGLVERTEXARRAYATTRIBBINDINGPROC)load("glVertexArrayAttribBinding");
	cppgl_glVertexArrayAttribFormat = (PFNGLVERTEXARRAYATTRIBFORMATPROC)load("glVertexArrayAttribFormat");
	cppgl_glVertexArrayAttribIFormat = (PFNGLVERTEXARRAYATTRIBIFORMATPROC)load("glVertexArrayAttribIFormat");
	cppgl_glVertexArrayAttribLFormat = (PFNGLVERTEXARRAYATTRIBLFORMATPROC)load("glVertexArrayAttribLFormat");
	cppgl_glVertexArrayBindingDivisor = (PFNGLVERTEXARRAYBINDINGDIVISORPROC)load("glVertexArrayBindingDivisor");
	cppgl_glGetVertexArrayiv = (PFNGLGETVERTEXARRAYIVPROC)load("glGetVertexArrayiv");
	cppgl_glGetVertexArrayIndexediv = (PFNGLGETVERTEXARRAYINDEXEDIVPROC)load("glGetVertexArrayIndexediv");
	cppgl_glGetVertexArrayIndexed64iv = (PFNGLGETVERTEXARRAYINDEXED64IVPROC)load("glGetVertexArrayIndexed64iv");
	cppgl_glCreateSamplers = (PFNGLCREATESAMPLERSPROC)load("glCreateSamplers");
	cppgl_glCreateProgramPipelines = (PFNGLCREATEPROGRAMPIPELINESPROC)load("glCreateProgramPipelines");
	cppgl_glCreateQueries = (PFNGLCREATEQUERIESPROC)load("glCreateQueries");
	cppgl_glGetQueryBufferObjecti64v = (PFNGLGETQUERYBUFFEROBJECTI64VPROC)load("glGetQueryBufferObjecti64v");
	cppgl_glGetQueryBufferObjectiv = (PFNGLGETQUERYBUFFEROBJECTIVPROC)load("glGetQueryBufferObjectiv");
	cppgl_glGetQueryBufferObjectui64v = (PFNGLGETQUERYBUFFEROBJECTUI64VPROC)load("glGetQueryBufferObjectui64v");
	cppgl_glGetQueryBufferObjectuiv = (PFNGLGETQUERYBUFFEROBJECTUIVPROC)load("glGetQueryBufferObjectuiv");
}
static void load_GL_ARB_draw_buffers(CPPGLloadproc load) {
	if(!CPPGL_GL_ARB_draw_buffers) return;
	cppgl_glDrawBuffersARB = (PFNGLDRAWBUFFERSARBPROC)load("glDrawBuffersARB");
}
static void load_GL_ARB_draw_buffers_blend(CPPGLloadproc load) {
	if(!CPPGL_GL_ARB_draw_buffers_blend) return;
	cppgl_glBlendEquationiARB = (PFNGLBLENDEQUATIONIARBPROC)load("glBlendEquationiARB");
	cppgl_glBlendEquationSeparateiARB = (PFNGLBLENDEQUATIONSEPARATEIARBPROC)load("glBlendEquationSeparateiARB");
	cppgl_glBlendFunciARB = (PFNGLBLENDFUNCIARBPROC)load("glBlendFunciARB");
	cppgl_glBlendFuncSeparateiARB = (PFNGLBLENDFUNCSEPARATEIARBPROC)load("glBlendFuncSeparateiARB");
}
static void load_GL_ARB_draw_elements_base_vertex(CPPGLloadproc load) {
	if(!CPPGL_GL_ARB_draw_elements_base_vertex) return;
	cppgl_glDrawElementsBaseVertex = (PFNGLDRAWELEMENTSBASEVERTEXPROC)load("glDrawElementsBaseVertex");
	cppgl_glDrawRangeElementsBaseVertex = (PFNGLDRAWRANGEELEMENTSBASEVERTEXPROC)load("glDrawRangeElementsBaseVertex");
	cppgl_glDrawElementsInstancedBaseVertex = (PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXPROC)load("glDrawElementsInstancedBaseVertex");
	cppgl_glMultiDrawElementsBaseVertex = (PFNGLMULTIDRAWELEMENTSBASEVERTEXPROC)load("glMultiDrawElementsBaseVertex");
}
static void load_GL_ARB_draw_indirect(CPPGLloadproc load) {
	if(!CPPGL_GL_ARB_draw_indirect) return;
	cppgl_glDrawArraysIndirect = (PFNGLDRAWARRAYSINDIRECTPROC)load("glDrawArraysIndirect");
	cppgl_glDrawElementsIndirect = (PFNGLDRAWELEMENTSINDIRECTPROC)load("glDrawElementsIndirect");
}
static void load_GL_ARB_draw_instanced(CPPGLloadproc load) {
	if(!CPPGL_GL_ARB_draw_instanced) return;
	cppgl_glDrawArraysInstancedARB = (PFNGLDRAWARRAYSINSTANCEDARBPROC)load("glDrawArraysInstancedARB");
	cppgl_glDrawElementsInstancedARB = (PFNGLDRAWELEMENTSINSTANCEDARBPROC)load("glDrawElementsInstancedARB");
}
static void load_GL_ARB_fragment_program(CPPGLloadproc load) {
	if(!CPPGL_GL_ARB_fragment_program) return;
	cppgl_glProgramStringARB = (PFNGLPROGRAMSTRINGARBPROC)load("glProgramStringARB");
	cppgl_glBindProgramARB = (PFNGLBINDPROGRAMARBPROC)load("glBindProgramARB");
	cppgl_glDeleteProgramsARB = (PFNGLDELETEPROGRAMSARBPROC)load("glDeleteProgramsARB");
	cppgl_glGenProgramsARB = (PFNGLGENPROGRAMSARBPROC)load("glGenProgramsARB");
	cppgl_glProgramEnvParameter4dARB = (PFNGLPROGRAMENVPARAMETER4DARBPROC)load("glProgramEnvParameter4dARB");
	cppgl_glProgramEnvParameter4dvARB = (PFNGLPROGRAMENVPARAMETER4DVARBPROC)load("glProgramEnvParameter4dvARB");
	cppgl_glProgramEnvParameter4fARB = (PFNGLPROGRAMENVPARAMETER4FARBPROC)load("glProgramEnvParameter4fARB");
	cppgl_glProgramEnvParameter4fvARB = (PFNGLPROGRAMENVPARAMETER4FVARBPROC)load("glProgramEnvParameter4fvARB");
	cppgl_glProgramLocalParameter4dARB = (PFNGLPROGRAMLOCALPARAMETER4DARBPROC)load("glProgramLocalParameter4dARB");
	cppgl_glProgramLocalParameter4dvARB = (PFNGLPROGRAMLOCALPARAMETER4DVARBPROC)load("glProgramLocalParameter4dvARB");
	cppgl_glProgramLocalParameter4fARB = (PFNGLPROGRAMLOCALPARAMETER4FARBPROC)load("glProgramLocalParameter4fARB");
	cppgl_glProgramLocalParameter4fvARB = (PFNGLPROGRAMLOCALPARAMETER4FVARBPROC)load("glProgramLocalParameter4fvARB");
	cppgl_glGetProgramEnvParameterdvARB = (PFNGLGETPROGRAMENVPARAMETERDVARBPROC)load("glGetProgramEnvParameterdvARB");
	cppgl_glGetProgramEnvParameterfvARB = (PFNGLGETPROGRAMENVPARAMETERFVARBPROC)load("glGetProgramEnvParameterfvARB");
	cppgl_glGetProgramLocalParameterdvARB = (PFNGLGETPROGRAMLOCALPARAMETERDVARBPROC)load("glGetProgramLocalParameterdvARB");
	cppgl_glGetProgramLocalParameterfvARB = (PFNGLGETPROGRAMLOCALPARAMETERFVARBPROC)load("glGetProgramLocalParameterfvARB");
	cppgl_glGetProgramivARB = (PFNGLGETPROGRAMIVARBPROC)load("glGetProgramivARB");
	cppgl_glGetProgramStringARB = (PFNGLGETPROGRAMSTRINGARBPROC)load("glGetProgramStringARB");
	cppgl_glIsProgramARB = (PFNGLISPROGRAMARBPROC)load("glIsProgramARB");
}
static void load_GL_ARB_framebuffer_no_attachments(CPPGLloadproc load) {
	if(!CPPGL_GL_ARB_framebuffer_no_attachments) return;
	cppgl_glFramebufferParameteri = (PFNGLFRAMEBUFFERPARAMETERIPROC)load("glFramebufferParameteri");
	cppgl_glGetFramebufferParameteriv = (PFNGLGETFRAMEBUFFERPARAMETERIVPROC)load("glGetFramebufferParameteriv");
}
static void load_GL_ARB_framebuffer_object(CPPGLloadproc load) {
	if(!CPPGL_GL_ARB_framebuffer_object) return;
	cppgl_glIsRenderbuffer = (PFNGLISRENDERBUFFERPROC)load("glIsRenderbuffer");
	cppgl_glBindRenderbuffer = (PFNGLBINDRENDERBUFFERPROC)load("glBindRenderbuffer");
	cppgl_glDeleteRenderbuffers = (PFNGLDELETERENDERBUFFERSPROC)load("glDeleteRenderbuffers");
	cppgl_glGenRenderbuffers = (PFNGLGENRENDERBUFFERSPROC)load("glGenRenderbuffers");
	cppgl_glRenderbufferStorage = (PFNGLRENDERBUFFERSTORAGEPROC)load("glRenderbufferStorage");
	cppgl_glGetRenderbufferParameteriv = (PFNGLGETRENDERBUFFERPARAMETERIVPROC)load("glGetRenderbufferParameteriv");
	cppgl_glIsFramebuffer = (PFNGLISFRAMEBUFFERPROC)load("glIsFramebuffer");
	cppgl_glBindFramebuffer = (PFNGLBINDFRAMEBUFFERPROC)load("glBindFramebuffer");
	cppgl_glDeleteFramebuffers = (PFNGLDELETEFRAMEBUFFERSPROC)load("glDeleteFramebuffers");
	cppgl_glGenFramebuffers = (PFNGLGENFRAMEBUFFERSPROC)load("glGenFramebuffers");
	cppgl_glCheckFramebufferStatus = (PFNGLCHECKFRAMEBUFFERSTATUSPROC)load("glCheckFramebufferStatus");
	cppgl_glFramebufferTexture1D = (PFNGLFRAMEBUFFERTEXTURE1DPROC)load("glFramebufferTexture1D");
	cppgl_glFramebufferTexture2D = (PFNGLFRAMEBUFFERTEXTURE2DPROC)load("glFramebufferTexture2D");
	cppgl_glFramebufferTexture3D = (PFNGLFRAMEBUFFERTEXTURE3DPROC)load("glFramebufferTexture3D");
	cppgl_glFramebufferRenderbuffer = (PFNGLFRAMEBUFFERRENDERBUFFERPROC)load("glFramebufferRenderbuffer");
	cppgl_glGetFramebufferAttachmentParameteriv = (PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC)load("glGetFramebufferAttachmentParameteriv");
	cppgl_glGenerateMipmap = (PFNGLGENERATEMIPMAPPROC)load("glGenerateMipmap");
	cppgl_glBlitFramebuffer = (PFNGLBLITFRAMEBUFFERPROC)load("glBlitFramebuffer");
	cppgl_glRenderbufferStorageMultisample = (PFNGLRENDERBUFFERSTORAGEMULTISAMPLEPROC)load("glRenderbufferStorageMultisample");
	cppgl_glFramebufferTextureLayer = (PFNGLFRAMEBUFFERTEXTURELAYERPROC)load("glFramebufferTextureLayer");
}
static void load_GL_ARB_geometry_shader4(CPPGLloadproc load) {
	if(!CPPGL_GL_ARB_geometry_shader4) return;
	cppgl_glProgramParameteriARB = (PFNGLPROGRAMPARAMETERIARBPROC)load("glProgramParameteriARB");
	cppgl_glFramebufferTextureARB = (PFNGLFRAMEBUFFERTEXTUREARBPROC)load("glFramebufferTextureARB");
	cppgl_glFramebufferTextureLayerARB = (PFNGLFRAMEBUFFERTEXTURELAYERARBPROC)load("glFramebufferTextureLayerARB");
	cppgl_glFramebufferTextureFaceARB = (PFNGLFRAMEBUFFERTEXTUREFACEARBPROC)load("glFramebufferTextureFaceARB");
}
static void load_GL_ARB_get_program_binary(CPPGLloadproc load) {
	if(!CPPGL_GL_ARB_get_program_binary) return;
	cppgl_glGetProgramBinary = (PFNGLGETPROGRAMBINARYPROC)load("glGetProgramBinary");
	cppgl_glProgramBinary = (PFNGLPROGRAMBINARYPROC)load("glProgramBinary");
	cppgl_glProgramParameteri = (PFNGLPROGRAMPARAMETERIPROC)load("glProgramParameteri");
}
static void load_GL_ARB_get_texture_sub_image(CPPGLloadproc load) {
	if(!CPPGL_GL_ARB_get_texture_sub_image) return;
	cppgl_glGetTextureSubImage = (PFNGLGETTEXTURESUBIMAGEPROC)load("glGetTextureSubImage");
	cppgl_glGetCompressedTextureSubImage = (PFNGLGETCOMPRESSEDTEXTURESUBIMAGEPROC)load("glGetCompressedTextureSubImage");
}
static void load_GL_ARB_gpu_shader_fp64(CPPGLloadproc load) {
	if(!CPPGL_GL_ARB_gpu_shader_fp64) return;
	cppgl_glUniform1d = (PFNGLUNIFORM1DPROC)load("glUniform1d");
	cppgl_glUniform2d = (PFNGLUNIFORM2DPROC)load("glUniform2d");
	cppgl_glUniform3d = (PFNGLUNIFORM3DPROC)load("glUniform3d");
	cppgl_glUniform4d = (PFNGLUNIFORM4DPROC)load("glUniform4d");
	cppgl_glUniform1dv = (PFNGLUNIFORM1DVPROC)load("glUniform1dv");
	cppgl_glUniform2dv = (PFNGLUNIFORM2DVPROC)load("glUniform2dv");
	cppgl_glUniform3dv = (PFNGLUNIFORM3DVPROC)load("glUniform3dv");
	cppgl_glUniform4dv = (PFNGLUNIFORM4DVPROC)load("glUniform4dv");
	cppgl_glUniformMatrix2dv = (PFNGLUNIFORMMATRIX2DVPROC)load("glUniformMatrix2dv");
	cppgl_glUniformMatrix3dv = (PFNGLUNIFORMMATRIX3DVPROC)load("glUniformMatrix3dv");
	cppgl_glUniformMatrix4dv = (PFNGLUNIFORMMATRIX4DVPROC)load("glUniformMatrix4dv");
	cppgl_glUniformMatrix2x3dv = (PFNGLUNIFORMMATRIX2X3DVPROC)load("glUniformMatrix2x3dv");
	cppgl_glUniformMatrix2x4dv = (PFNGLUNIFORMMATRIX2X4DVPROC)load("glUniformMatrix2x4dv");
	cppgl_glUniformMatrix3x2dv = (PFNGLUNIFORMMATRIX3X2DVPROC)load("glUniformMatrix3x2dv");
	cppgl_glUniformMatrix3x4dv = (PFNGLUNIFORMMATRIX3X4DVPROC)load("glUniformMatrix3x4dv");
	cppgl_glUniformMatrix4x2dv = (PFNGLUNIFORMMATRIX4X2DVPROC)load("glUniformMatrix4x2dv");
	cppgl_glUniformMatrix4x3dv = (PFNGLUNIFORMMATRIX4X3DVPROC)load("glUniformMatrix4x3dv");
	cppgl_glGetUniformdv = (PFNGLGETUNIFORMDVPROC)load("glGetUniformdv");
}
static void load_GL_ARB_gpu_shader_int64(CPPGLloadproc load) {
	if(!CPPGL_GL_ARB_gpu_shader_int64) return;
	cppgl_glUniform1i64ARB = (PFNGLUNIFORM1I64ARBPROC)load("glUniform1i64ARB");
	cppgl_glUniform2i64ARB = (PFNGLUNIFORM2I64ARBPROC)load("glUniform2i64ARB");
	cppgl_glUniform3i64ARB = (PFNGLUNIFORM3I64ARBPROC)load("glUniform3i64ARB");
	cppgl_glUniform4i64ARB = (PFNGLUNIFORM4I64ARBPROC)load("glUniform4i64ARB");
	cppgl_glUniform1i64vARB = (PFNGLUNIFORM1I64VARBPROC)load("glUniform1i64vARB");
	cppgl_glUniform2i64vARB = (PFNGLUNIFORM2I64VARBPROC)load("glUniform2i64vARB");
	cppgl_glUniform3i64vARB = (PFNGLUNIFORM3I64VARBPROC)load("glUniform3i64vARB");
	cppgl_glUniform4i64vARB = (PFNGLUNIFORM4I64VARBPROC)load("glUniform4i64vARB");
	cppgl_glUniform1ui64ARB = (PFNGLUNIFORM1UI64ARBPROC)load("glUniform1ui64ARB");
	cppgl_glUniform2ui64ARB = (PFNGLUNIFORM2UI64ARBPROC)load("glUniform2ui64ARB");
	cppgl_glUniform3ui64ARB = (PFNGLUNIFORM3UI64ARBPROC)load("glUniform3ui64ARB");
	cppgl_glUniform4ui64ARB = (PFNGLUNIFORM4UI64ARBPROC)load("glUniform4ui64ARB");
	cppgl_glUniform1ui64vARB = (PFNGLUNIFORM1UI64VARBPROC)load("glUniform1ui64vARB");
	cppgl_glUniform2ui64vARB = (PFNGLUNIFORM2UI64VARBPROC)load("glUniform2ui64vARB");
	cppgl_glUniform3ui64vARB = (PFNGLUNIFORM3UI64VARBPROC)load("glUniform3ui64vARB");
	cppgl_glUniform4ui64vARB = (PFNGLUNIFORM4UI64VARBPROC)load("glUniform4ui64vARB");
	cppgl_glGetUniformi64vARB = (PFNGLGETUNIFORMI64VARBPROC)load("glGetUniformi64vARB");
	cppgl_glGetUniformui64vARB = (PFNGLGETUNIFORMUI64VARBPROC)load("glGetUniformui64vARB");
	cppgl_glGetnUniformi64vARB = (PFNGLGETNUNIFORMI64VARBPROC)load("glGetnUniformi64vARB");
	cppgl_glGetnUniformui64vARB = (PFNGLGETNUNIFORMUI64VARBPROC)load("glGetnUniformui64vARB");
	cppgl_glProgramUniform1i64ARB = (PFNGLPROGRAMUNIFORM1I64ARBPROC)load("glProgramUniform1i64ARB");
	cppgl_glProgramUniform2i64ARB = (PFNGLPROGRAMUNIFORM2I64ARBPROC)load("glProgramUniform2i64ARB");
	cppgl_glProgramUniform3i64ARB = (PFNGLPROGRAMUNIFORM3I64ARBPROC)load("glProgramUniform3i64ARB");
	cppgl_glProgramUniform4i64ARB = (PFNGLPROGRAMUNIFORM4I64ARBPROC)load("glProgramUniform4i64ARB");
	cppgl_glProgramUniform1i64vARB = (PFNGLPROGRAMUNIFORM1I64VARBPROC)load("glProgramUniform1i64vARB");
	cppgl_glProgramUniform2i64vARB = (PFNGLPROGRAMUNIFORM2I64VARBPROC)load("glProgramUniform2i64vARB");
	cppgl_glProgramUniform3i64vARB = (PFNGLPROGRAMUNIFORM3I64VARBPROC)load("glProgramUniform3i64vARB");
	cppgl_glProgramUniform4i64vARB = (PFNGLPROGRAMUNIFORM4I64VARBPROC)load("glProgramUniform4i64vARB");
	cppgl_glProgramUniform1ui64ARB = (PFNGLPROGRAMUNIFORM1UI64ARBPROC)load("glProgramUniform1ui64ARB");
	cppgl_glProgramUniform2ui64ARB = (PFNGLPROGRAMUNIFORM2UI64ARBPROC)load("glProgramUniform2ui64ARB");
	cppgl_glProgramUniform3ui64ARB = (PFNGLPROGRAMUNIFORM3UI64ARBPROC)load("glProgramUniform3ui64ARB");
	cppgl_glProgramUniform4ui64ARB = (PFNGLPROGRAMUNIFORM4UI64ARBPROC)load("glProgramUniform4ui64ARB");
	cppgl_glProgramUniform1ui64vARB = (PFNGLPROGRAMUNIFORM1UI64VARBPROC)load("glProgramUniform1ui64vARB");
	cppgl_glProgramUniform2ui64vARB = (PFNGLPROGRAMUNIFORM2UI64VARBPROC)load("glProgramUniform2ui64vARB");
	cppgl_glProgramUniform3ui64vARB = (PFNGLPROGRAMUNIFORM3UI64VARBPROC)load("glProgramUniform3ui64vARB");
	cppgl_glProgramUniform4ui64vARB = (PFNGLPROGRAMUNIFORM4UI64VARBPROC)load("glProgramUniform4ui64vARB");
}
static void load_GL_ARB_imaging(CPPGLloadproc load) {
	if(!CPPGL_GL_ARB_imaging) return;
	cppgl_glBlendColor = (PFNGLBLENDCOLORPROC)load("glBlendColor");
	cppgl_glBlendEquation = (PFNGLBLENDEQUATIONPROC)load("glBlendEquation");
	cppgl_glColorTable = (PFNGLCOLORTABLEPROC)load("glColorTable");
	cppgl_glColorTableParameterfv = (PFNGLCOLORTABLEPARAMETERFVPROC)load("glColorTableParameterfv");
	cppgl_glColorTableParameteriv = (PFNGLCOLORTABLEPARAMETERIVPROC)load("glColorTableParameteriv");
	cppgl_glCopyColorTable = (PFNGLCOPYCOLORTABLEPROC)load("glCopyColorTable");
	cppgl_glGetColorTable = (PFNGLGETCOLORTABLEPROC)load("glGetColorTable");
	cppgl_glGetColorTableParameterfv = (PFNGLGETCOLORTABLEPARAMETERFVPROC)load("glGetColorTableParameterfv");
	cppgl_glGetColorTableParameteriv = (PFNGLGETCOLORTABLEPARAMETERIVPROC)load("glGetColorTableParameteriv");
	cppgl_glColorSubTable = (PFNGLCOLORSUBTABLEPROC)load("glColorSubTable");
	cppgl_glCopyColorSubTable = (PFNGLCOPYCOLORSUBTABLEPROC)load("glCopyColorSubTable");
	cppgl_glConvolutionFilter1D = (PFNGLCONVOLUTIONFILTER1DPROC)load("glConvolutionFilter1D");
	cppgl_glConvolutionFilter2D = (PFNGLCONVOLUTIONFILTER2DPROC)load("glConvolutionFilter2D");
	cppgl_glConvolutionParameterf = (PFNGLCONVOLUTIONPARAMETERFPROC)load("glConvolutionParameterf");
	cppgl_glConvolutionParameterfv = (PFNGLCONVOLUTIONPARAMETERFVPROC)load("glConvolutionParameterfv");
	cppgl_glConvolutionParameteri = (PFNGLCONVOLUTIONPARAMETERIPROC)load("glConvolutionParameteri");
	cppgl_glConvolutionParameteriv = (PFNGLCONVOLUTIONPARAMETERIVPROC)load("glConvolutionParameteriv");
	cppgl_glCopyConvolutionFilter1D = (PFNGLCOPYCONVOLUTIONFILTER1DPROC)load("glCopyConvolutionFilter1D");
	cppgl_glCopyConvolutionFilter2D = (PFNGLCOPYCONVOLUTIONFILTER2DPROC)load("glCopyConvolutionFilter2D");
	cppgl_glGetConvolutionFilter = (PFNGLGETCONVOLUTIONFILTERPROC)load("glGetConvolutionFilter");
	cppgl_glGetConvolutionParameterfv = (PFNGLGETCONVOLUTIONPARAMETERFVPROC)load("glGetConvolutionParameterfv");
	cppgl_glGetConvolutionParameteriv = (PFNGLGETCONVOLUTIONPARAMETERIVPROC)load("glGetConvolutionParameteriv");
	cppgl_glGetSeparableFilter = (PFNGLGETSEPARABLEFILTERPROC)load("glGetSeparableFilter");
	cppgl_glSeparableFilter2D = (PFNGLSEPARABLEFILTER2DPROC)load("glSeparableFilter2D");
	cppgl_glGetHistogram = (PFNGLGETHISTOGRAMPROC)load("glGetHistogram");
	cppgl_glGetHistogramParameterfv = (PFNGLGETHISTOGRAMPARAMETERFVPROC)load("glGetHistogramParameterfv");
	cppgl_glGetHistogramParameteriv = (PFNGLGETHISTOGRAMPARAMETERIVPROC)load("glGetHistogramParameteriv");
	cppgl_glGetMinmax = (PFNGLGETMINMAXPROC)load("glGetMinmax");
	cppgl_glGetMinmaxParameterfv = (PFNGLGETMINMAXPARAMETERFVPROC)load("glGetMinmaxParameterfv");
	cppgl_glGetMinmaxParameteriv = (PFNGLGETMINMAXPARAMETERIVPROC)load("glGetMinmaxParameteriv");
	cppgl_glHistogram = (PFNGLHISTOGRAMPROC)load("glHistogram");
	cppgl_glMinmax = (PFNGLMINMAXPROC)load("glMinmax");
	cppgl_glResetHistogram = (PFNGLRESETHISTOGRAMPROC)load("glResetHistogram");
	cppgl_glResetMinmax = (PFNGLRESETMINMAXPROC)load("glResetMinmax");
}
static void load_GL_ARB_indirect_parameters(CPPGLloadproc load) {
	if(!CPPGL_GL_ARB_indirect_parameters) return;
	cppgl_glMultiDrawArraysIndirectCountARB = (PFNGLMULTIDRAWARRAYSINDIRECTCOUNTARBPROC)load("glMultiDrawArraysIndirectCountARB");
	cppgl_glMultiDrawElementsIndirectCountARB = (PFNGLMULTIDRAWELEMENTSINDIRECTCOUNTARBPROC)load("glMultiDrawElementsIndirectCountARB");
}
static void load_GL_ARB_instanced_arrays(CPPGLloadproc load) {
	if(!CPPGL_GL_ARB_instanced_arrays) return;
	cppgl_glVertexAttribDivisorARB = (PFNGLVERTEXATTRIBDIVISORARBPROC)load("glVertexAttribDivisorARB");
}
static void load_GL_ARB_internalformat_query(CPPGLloadproc load) {
	if(!CPPGL_GL_ARB_internalformat_query) return;
	cppgl_glGetInternalformativ = (PFNGLGETINTERNALFORMATIVPROC)load("glGetInternalformativ");
}
static void load_GL_ARB_internalformat_query2(CPPGLloadproc load) {
	if(!CPPGL_GL_ARB_internalformat_query2) return;
	cppgl_glGetInternalformati64v = (PFNGLGETINTERNALFORMATI64VPROC)load("glGetInternalformati64v");
}
static void load_GL_ARB_invalidate_subdata(CPPGLloadproc load) {
	if(!CPPGL_GL_ARB_invalidate_subdata) return;
	cppgl_glInvalidateTexSubImage = (PFNGLINVALIDATETEXSUBIMAGEPROC)load("glInvalidateTexSubImage");
	cppgl_glInvalidateTexImage = (PFNGLINVALIDATETEXIMAGEPROC)load("glInvalidateTexImage");
	cppgl_glInvalidateBufferSubData = (PFNGLINVALIDATEBUFFERSUBDATAPROC)load("glInvalidateBufferSubData");
	cppgl_glInvalidateBufferData = (PFNGLINVALIDATEBUFFERDATAPROC)load("glInvalidateBufferData");
	cppgl_glInvalidateFramebuffer = (PFNGLINVALIDATEFRAMEBUFFERPROC)load("glInvalidateFramebuffer");
	cppgl_glInvalidateSubFramebuffer = (PFNGLINVALIDATESUBFRAMEBUFFERPROC)load("glInvalidateSubFramebuffer");
}
static void load_GL_ARB_map_buffer_range(CPPGLloadproc load) {
	if(!CPPGL_GL_ARB_map_buffer_range) return;
	cppgl_glMapBufferRange = (PFNGLMAPBUFFERRANGEPROC)load("glMapBufferRange");
	cppgl_glFlushMappedBufferRange = (PFNGLFLUSHMAPPEDBUFFERRANGEPROC)load("glFlushMappedBufferRange");
}
static void load_GL_ARB_matrix_palette(CPPGLloadproc load) {
	if(!CPPGL_GL_ARB_matrix_palette) return;
	cppgl_glCurrentPaletteMatrixARB = (PFNGLCURRENTPALETTEMATRIXARBPROC)load("glCurrentPaletteMatrixARB");
	cppgl_glMatrixIndexubvARB = (PFNGLMATRIXINDEXUBVARBPROC)load("glMatrixIndexubvARB");
	cppgl_glMatrixIndexusvARB = (PFNGLMATRIXINDEXUSVARBPROC)load("glMatrixIndexusvARB");
	cppgl_glMatrixIndexuivARB = (PFNGLMATRIXINDEXUIVARBPROC)load("glMatrixIndexuivARB");
	cppgl_glMatrixIndexPointerARB = (PFNGLMATRIXINDEXPOINTERARBPROC)load("glMatrixIndexPointerARB");
}
static void load_GL_ARB_multi_bind(CPPGLloadproc load) {
	if(!CPPGL_GL_ARB_multi_bind) return;
	cppgl_glBindBuffersBase = (PFNGLBINDBUFFERSBASEPROC)load("glBindBuffersBase");
	cppgl_glBindBuffersRange = (PFNGLBINDBUFFERSRANGEPROC)load("glBindBuffersRange");
	cppgl_glBindTextures = (PFNGLBINDTEXTURESPROC)load("glBindTextures");
	cppgl_glBindSamplers = (PFNGLBINDSAMPLERSPROC)load("glBindSamplers");
	cppgl_glBindImageTextures = (PFNGLBINDIMAGETEXTURESPROC)load("glBindImageTextures");
	cppgl_glBindVertexBuffers = (PFNGLBINDVERTEXBUFFERSPROC)load("glBindVertexBuffers");
}
static void load_GL_ARB_multi_draw_indirect(CPPGLloadproc load) {
	if(!CPPGL_GL_ARB_multi_draw_indirect) return;
	cppgl_glMultiDrawArraysIndirect = (PFNGLMULTIDRAWARRAYSINDIRECTPROC)load("glMultiDrawArraysIndirect");
	cppgl_glMultiDrawElementsIndirect = (PFNGLMULTIDRAWELEMENTSINDIRECTPROC)load("glMultiDrawElementsIndirect");
}
static void load_GL_ARB_multisample(CPPGLloadproc load) {
	if(!CPPGL_GL_ARB_multisample) return;
	cppgl_glSampleCoverageARB = (PFNGLSAMPLECOVERAGEARBPROC)load("glSampleCoverageARB");
}
static void load_GL_ARB_multitexture(CPPGLloadproc load) {
	if(!CPPGL_GL_ARB_multitexture) return;
	cppgl_glActiveTextureARB = (PFNGLACTIVETEXTUREARBPROC)load("glActiveTextureARB");
	cppgl_glClientActiveTextureARB = (PFNGLCLIENTACTIVETEXTUREARBPROC)load("glClientActiveTextureARB");
	cppgl_glMultiTexCoord1dARB = (PFNGLMULTITEXCOORD1DARBPROC)load("glMultiTexCoord1dARB");
	cppgl_glMultiTexCoord1dvARB = (PFNGLMULTITEXCOORD1DVARBPROC)load("glMultiTexCoord1dvARB");
	cppgl_glMultiTexCoord1fARB = (PFNGLMULTITEXCOORD1FARBPROC)load("glMultiTexCoord1fARB");
	cppgl_glMultiTexCoord1fvARB = (PFNGLMULTITEXCOORD1FVARBPROC)load("glMultiTexCoord1fvARB");
	cppgl_glMultiTexCoord1iARB = (PFNGLMULTITEXCOORD1IARBPROC)load("glMultiTexCoord1iARB");
	cppgl_glMultiTexCoord1ivARB = (PFNGLMULTITEXCOORD1IVARBPROC)load("glMultiTexCoord1ivARB");
	cppgl_glMultiTexCoord1sARB = (PFNGLMULTITEXCOORD1SARBPROC)load("glMultiTexCoord1sARB");
	cppgl_glMultiTexCoord1svARB = (PFNGLMULTITEXCOORD1SVARBPROC)load("glMultiTexCoord1svARB");
	cppgl_glMultiTexCoord2dARB = (PFNGLMULTITEXCOORD2DARBPROC)load("glMultiTexCoord2dARB");
	cppgl_glMultiTexCoord2dvARB = (PFNGLMULTITEXCOORD2DVARBPROC)load("glMultiTexCoord2dvARB");
	cppgl_glMultiTexCoord2fARB = (PFNGLMULTITEXCOORD2FARBPROC)load("glMultiTexCoord2fARB");
	cppgl_glMultiTexCoord2fvARB = (PFNGLMULTITEXCOORD2FVARBPROC)load("glMultiTexCoord2fvARB");
	cppgl_glMultiTexCoord2iARB = (PFNGLMULTITEXCOORD2IARBPROC)load("glMultiTexCoord2iARB");
	cppgl_glMultiTexCoord2ivARB = (PFNGLMULTITEXCOORD2IVARBPROC)load("glMultiTexCoord2ivARB");
	cppgl_glMultiTexCoord2sARB = (PFNGLMULTITEXCOORD2SARBPROC)load("glMultiTexCoord2sARB");
	cppgl_glMultiTexCoord2svARB = (PFNGLMULTITEXCOORD2SVARBPROC)load("glMultiTexCoord2svARB");
	cppgl_glMultiTexCoord3dARB = (PFNGLMULTITEXCOORD3DARBPROC)load("glMultiTexCoord3dARB");
	cppgl_glMultiTexCoord3dvARB = (PFNGLMULTITEXCOORD3DVARBPROC)load("glMultiTexCoord3dvARB");
	cppgl_glMultiTexCoord3fARB = (PFNGLMULTITEXCOORD3FARBPROC)load("glMultiTexCoord3fARB");
	cppgl_glMultiTexCoord3fvARB = (PFNGLMULTITEXCOORD3FVARBPROC)load("glMultiTexCoord3fvARB");
	cppgl_glMultiTexCoord3iARB = (PFNGLMULTITEXCOORD3IARBPROC)load("glMultiTexCoord3iARB");
	cppgl_glMultiTexCoord3ivARB = (PFNGLMULTITEXCOORD3IVARBPROC)load("glMultiTexCoord3ivARB");
	cppgl_glMultiTexCoord3sARB = (PFNGLMULTITEXCOORD3SARBPROC)load("glMultiTexCoord3sARB");
	cppgl_glMultiTexCoord3svARB = (PFNGLMULTITEXCOORD3SVARBPROC)load("glMultiTexCoord3svARB");
	cppgl_glMultiTexCoord4dARB = (PFNGLMULTITEXCOORD4DARBPROC)load("glMultiTexCoord4dARB");
	cppgl_glMultiTexCoord4dvARB = (PFNGLMULTITEXCOORD4DVARBPROC)load("glMultiTexCoord4dvARB");
	cppgl_glMultiTexCoord4fARB = (PFNGLMULTITEXCOORD4FARBPROC)load("glMultiTexCoord4fARB");
	cppgl_glMultiTexCoord4fvARB = (PFNGLMULTITEXCOORD4FVARBPROC)load("glMultiTexCoord4fvARB");
	cppgl_glMultiTexCoord4iARB = (PFNGLMULTITEXCOORD4IARBPROC)load("glMultiTexCoord4iARB");
	cppgl_glMultiTexCoord4ivARB = (PFNGLMULTITEXCOORD4IVARBPROC)load("glMultiTexCoord4ivARB");
	cppgl_glMultiTexCoord4sARB = (PFNGLMULTITEXCOORD4SARBPROC)load("glMultiTexCoord4sARB");
	cppgl_glMultiTexCoord4svARB = (PFNGLMULTITEXCOORD4SVARBPROC)load("glMultiTexCoord4svARB");
}
static void load_GL_ARB_occlusion_query(CPPGLloadproc load) {
	if(!CPPGL_GL_ARB_occlusion_query) return;
	cppgl_glGenQueriesARB = (PFNGLGENQUERIESARBPROC)load("glGenQueriesARB");
	cppgl_glDeleteQueriesARB = (PFNGLDELETEQUERIESARBPROC)load("glDeleteQueriesARB");
	cppgl_glIsQueryARB = (PFNGLISQUERYARBPROC)load("glIsQueryARB");
	cppgl_glBeginQueryARB = (PFNGLBEGINQUERYARBPROC)load("glBeginQueryARB");
	cppgl_glEndQueryARB = (PFNGLENDQUERYARBPROC)load("glEndQueryARB");
	cppgl_glGetQueryivARB = (PFNGLGETQUERYIVARBPROC)load("glGetQueryivARB");
	cppgl_glGetQueryObjectivARB = (PFNGLGETQUERYOBJECTIVARBPROC)load("glGetQueryObjectivARB");
	cppgl_glGetQueryObjectuivARB = (PFNGLGETQUERYOBJECTUIVARBPROC)load("glGetQueryObjectuivARB");
}
static void load_GL_ARB_parallel_shader_compile(CPPGLloadproc load) {
	if(!CPPGL_GL_ARB_parallel_shader_compile) return;
	cppgl_glMaxShaderCompilerThreadsARB = (PFNGLMAXSHADERCOMPILERTHREADSARBPROC)load("glMaxShaderCompilerThreadsARB");
}
static void load_GL_ARB_point_parameters(CPPGLloadproc load) {
	if(!CPPGL_GL_ARB_point_parameters) return;
	cppgl_glPointParameterfARB = (PFNGLPOINTPARAMETERFARBPROC)load("glPointParameterfARB");
	cppgl_glPointParameterfvARB = (PFNGLPOINTPARAMETERFVARBPROC)load("glPointParameterfvARB");
}
static void load_GL_ARB_program_interface_query(CPPGLloadproc load) {
	if(!CPPGL_GL_ARB_program_interface_query) return;
	cppgl_glGetProgramInterfaceiv = (PFNGLGETPROGRAMINTERFACEIVPROC)load("glGetProgramInterfaceiv");
	cppgl_glGetProgramResourceIndex = (PFNGLGETPROGRAMRESOURCEINDEXPROC)load("glGetProgramResourceIndex");
	cppgl_glGetProgramResourceName = (PFNGLGETPROGRAMRESOURCENAMEPROC)load("glGetProgramResourceName");
	cppgl_glGetProgramResourceiv = (PFNGLGETPROGRAMRESOURCEIVPROC)load("glGetProgramResourceiv");
	cppgl_glGetProgramResourceLocation = (PFNGLGETPROGRAMRESOURCELOCATIONPROC)load("glGetProgramResourceLocation");
	cppgl_glGetProgramResourceLocationIndex = (PFNGLGETPROGRAMRESOURCELOCATIONINDEXPROC)load("glGetProgramResourceLocationIndex");
}
static void load_GL_ARB_provoking_vertex(CPPGLloadproc load) {
	if(!CPPGL_GL_ARB_provoking_vertex) return;
	cppgl_glProvokingVertex = (PFNGLPROVOKINGVERTEXPROC)load("glProvokingVertex");
}
static void load_GL_ARB_robustness(CPPGLloadproc load) {
	if(!CPPGL_GL_ARB_robustness) return;
	cppgl_glGetGraphicsResetStatusARB = (PFNGLGETGRAPHICSRESETSTATUSARBPROC)load("glGetGraphicsResetStatusARB");
	cppgl_glGetnTexImageARB = (PFNGLGETNTEXIMAGEARBPROC)load("glGetnTexImageARB");
	cppgl_glReadnPixelsARB = (PFNGLREADNPIXELSARBPROC)load("glReadnPixelsARB");
	cppgl_glGetnCompressedTexImageARB = (PFNGLGETNCOMPRESSEDTEXIMAGEARBPROC)load("glGetnCompressedTexImageARB");
	cppgl_glGetnUniformfvARB = (PFNGLGETNUNIFORMFVARBPROC)load("glGetnUniformfvARB");
	cppgl_glGetnUniformivARB = (PFNGLGETNUNIFORMIVARBPROC)load("glGetnUniformivARB");
	cppgl_glGetnUniformuivARB = (PFNGLGETNUNIFORMUIVARBPROC)load("glGetnUniformuivARB");
	cppgl_glGetnUniformdvARB = (PFNGLGETNUNIFORMDVARBPROC)load("glGetnUniformdvARB");
	cppgl_glGetnMapdvARB = (PFNGLGETNMAPDVARBPROC)load("glGetnMapdvARB");
	cppgl_glGetnMapfvARB = (PFNGLGETNMAPFVARBPROC)load("glGetnMapfvARB");
	cppgl_glGetnMapivARB = (PFNGLGETNMAPIVARBPROC)load("glGetnMapivARB");
	cppgl_glGetnPixelMapfvARB = (PFNGLGETNPIXELMAPFVARBPROC)load("glGetnPixelMapfvARB");
	cppgl_glGetnPixelMapuivARB = (PFNGLGETNPIXELMAPUIVARBPROC)load("glGetnPixelMapuivARB");
	cppgl_glGetnPixelMapusvARB = (PFNGLGETNPIXELMAPUSVARBPROC)load("glGetnPixelMapusvARB");
	cppgl_glGetnPolygonStippleARB = (PFNGLGETNPOLYGONSTIPPLEARBPROC)load("glGetnPolygonStippleARB");
	cppgl_glGetnColorTableARB = (PFNGLGETNCOLORTABLEARBPROC)load("glGetnColorTableARB");
	cppgl_glGetnConvolutionFilterARB = (PFNGLGETNCONVOLUTIONFILTERARBPROC)load("glGetnConvolutionFilterARB");
	cppgl_glGetnSeparableFilterARB = (PFNGLGETNSEPARABLEFILTERARBPROC)load("glGetnSeparableFilterARB");
	cppgl_glGetnHistogramARB = (PFNGLGETNHISTOGRAMARBPROC)load("glGetnHistogramARB");
	cppgl_glGetnMinmaxARB = (PFNGLGETNMINMAXARBPROC)load("glGetnMinmaxARB");
}
static void load_GL_ARB_sample_locations(CPPGLloadproc load) {
	if(!CPPGL_GL_ARB_sample_locations) return;
	cppgl_glFramebufferSampleLocationsfvARB = (PFNGLFRAMEBUFFERSAMPLELOCATIONSFVARBPROC)load("glFramebufferSampleLocationsfvARB");
	cppgl_glNamedFramebufferSampleLocationsfvARB = (PFNGLNAMEDFRAMEBUFFERSAMPLELOCATIONSFVARBPROC)load("glNamedFramebufferSampleLocationsfvARB");
	cppgl_glEvaluateDepthValuesARB = (PFNGLEVALUATEDEPTHVALUESARBPROC)load("glEvaluateDepthValuesARB");
}
static void load_GL_ARB_sample_shading(CPPGLloadproc load) {
	if(!CPPGL_GL_ARB_sample_shading) return;
	cppgl_glMinSampleShadingARB = (PFNGLMINSAMPLESHADINGARBPROC)load("glMinSampleShadingARB");
}
static void load_GL_ARB_sampler_objects(CPPGLloadproc load) {
	if(!CPPGL_GL_ARB_sampler_objects) return;
	cppgl_glGenSamplers = (PFNGLGENSAMPLERSPROC)load("glGenSamplers");
	cppgl_glDeleteSamplers = (PFNGLDELETESAMPLERSPROC)load("glDeleteSamplers");
	cppgl_glIsSampler = (PFNGLISSAMPLERPROC)load("glIsSampler");
	cppgl_glBindSampler = (PFNGLBINDSAMPLERPROC)load("glBindSampler");
	cppgl_glSamplerParameteri = (PFNGLSAMPLERPARAMETERIPROC)load("glSamplerParameteri");
	cppgl_glSamplerParameteriv = (PFNGLSAMPLERPARAMETERIVPROC)load("glSamplerParameteriv");
	cppgl_glSamplerParameterf = (PFNGLSAMPLERPARAMETERFPROC)load("glSamplerParameterf");
	cppgl_glSamplerParameterfv = (PFNGLSAMPLERPARAMETERFVPROC)load("glSamplerParameterfv");
	cppgl_glSamplerParameterIiv = (PFNGLSAMPLERPARAMETERIIVPROC)load("glSamplerParameterIiv");
	cppgl_glSamplerParameterIuiv = (PFNGLSAMPLERPARAMETERIUIVPROC)load("glSamplerParameterIuiv");
	cppgl_glGetSamplerParameteriv = (PFNGLGETSAMPLERPARAMETERIVPROC)load("glGetSamplerParameteriv");
	cppgl_glGetSamplerParameterIiv = (PFNGLGETSAMPLERPARAMETERIIVPROC)load("glGetSamplerParameterIiv");
	cppgl_glGetSamplerParameterfv = (PFNGLGETSAMPLERPARAMETERFVPROC)load("glGetSamplerParameterfv");
	cppgl_glGetSamplerParameterIuiv = (PFNGLGETSAMPLERPARAMETERIUIVPROC)load("glGetSamplerParameterIuiv");
}
static void load_GL_ARB_separate_shader_objects(CPPGLloadproc load) {
	if(!CPPGL_GL_ARB_separate_shader_objects) return;
	cppgl_glUseProgramStages = (PFNGLUSEPROGRAMSTAGESPROC)load("glUseProgramStages");
	cppgl_glActiveShaderProgram = (PFNGLACTIVESHADERPROGRAMPROC)load("glActiveShaderProgram");
	cppgl_glCreateShaderProgramv = (PFNGLCREATESHADERPROGRAMVPROC)load("glCreateShaderProgramv");
	cppgl_glBindProgramPipeline = (PFNGLBINDPROGRAMPIPELINEPROC)load("glBindProgramPipeline");
	cppgl_glDeleteProgramPipelines = (PFNGLDELETEPROGRAMPIPELINESPROC)load("glDeleteProgramPipelines");
	cppgl_glGenProgramPipelines = (PFNGLGENPROGRAMPIPELINESPROC)load("glGenProgramPipelines");
	cppgl_glIsProgramPipeline = (PFNGLISPROGRAMPIPELINEPROC)load("glIsProgramPipeline");
	cppgl_glGetProgramPipelineiv = (PFNGLGETPROGRAMPIPELINEIVPROC)load("glGetProgramPipelineiv");
	cppgl_glProgramUniform1i = (PFNGLPROGRAMUNIFORM1IPROC)load("glProgramUniform1i");
	cppgl_glProgramUniform1iv = (PFNGLPROGRAMUNIFORM1IVPROC)load("glProgramUniform1iv");
	cppgl_glProgramUniform1f = (PFNGLPROGRAMUNIFORM1FPROC)load("glProgramUniform1f");
	cppgl_glProgramUniform1fv = (PFNGLPROGRAMUNIFORM1FVPROC)load("glProgramUniform1fv");
	cppgl_glProgramUniform1d = (PFNGLPROGRAMUNIFORM1DPROC)load("glProgramUniform1d");
	cppgl_glProgramUniform1dv = (PFNGLPROGRAMUNIFORM1DVPROC)load("glProgramUniform1dv");
	cppgl_glProgramUniform1ui = (PFNGLPROGRAMUNIFORM1UIPROC)load("glProgramUniform1ui");
	cppgl_glProgramUniform1uiv = (PFNGLPROGRAMUNIFORM1UIVPROC)load("glProgramUniform1uiv");
	cppgl_glProgramUniform2i = (PFNGLPROGRAMUNIFORM2IPROC)load("glProgramUniform2i");
	cppgl_glProgramUniform2iv = (PFNGLPROGRAMUNIFORM2IVPROC)load("glProgramUniform2iv");
	cppgl_glProgramUniform2f = (PFNGLPROGRAMUNIFORM2FPROC)load("glProgramUniform2f");
	cppgl_glProgramUniform2fv = (PFNGLPROGRAMUNIFORM2FVPROC)load("glProgramUniform2fv");
	cppgl_glProgramUniform2d = (PFNGLPROGRAMUNIFORM2DPROC)load("glProgramUniform2d");
	cppgl_glProgramUniform2dv = (PFNGLPROGRAMUNIFORM2DVPROC)load("glProgramUniform2dv");
	cppgl_glProgramUniform2ui = (PFNGLPROGRAMUNIFORM2UIPROC)load("glProgramUniform2ui");
	cppgl_glProgramUniform2uiv = (PFNGLPROGRAMUNIFORM2UIVPROC)load("glProgramUniform2uiv");
	cppgl_glProgramUniform3i = (PFNGLPROGRAMUNIFORM3IPROC)load("glProgramUniform3i");
	cppgl_glProgramUniform3iv = (PFNGLPROGRAMUNIFORM3IVPROC)load("glProgramUniform3iv");
	cppgl_glProgramUniform3f = (PFNGLPROGRAMUNIFORM3FPROC)load("glProgramUniform3f");
	cppgl_glProgramUniform3fv = (PFNGLPROGRAMUNIFORM3FVPROC)load("glProgramUniform3fv");
	cppgl_glProgramUniform3d = (PFNGLPROGRAMUNIFORM3DPROC)load("glProgramUniform3d");
	cppgl_glProgramUniform3dv = (PFNGLPROGRAMUNIFORM3DVPROC)load("glProgramUniform3dv");
	cppgl_glProgramUniform3ui = (PFNGLPROGRAMUNIFORM3UIPROC)load("glProgramUniform3ui");
	cppgl_glProgramUniform3uiv = (PFNGLPROGRAMUNIFORM3UIVPROC)load("glProgramUniform3uiv");
	cppgl_glProgramUniform4i = (PFNGLPROGRAMUNIFORM4IPROC)load("glProgramUniform4i");
	cppgl_glProgramUniform4iv = (PFNGLPROGRAMUNIFORM4IVPROC)load("glProgramUniform4iv");
	cppgl_glProgramUniform4f = (PFNGLPROGRAMUNIFORM4FPROC)load("glProgramUniform4f");
	cppgl_glProgramUniform4fv = (PFNGLPROGRAMUNIFORM4FVPROC)load("glProgramUniform4fv");
	cppgl_glProgramUniform4d = (PFNGLPROGRAMUNIFORM4DPROC)load("glProgramUniform4d");
	cppgl_glProgramUniform4dv = (PFNGLPROGRAMUNIFORM4DVPROC)load("glProgramUniform4dv");
	cppgl_glProgramUniform4ui = (PFNGLPROGRAMUNIFORM4UIPROC)load("glProgramUniform4ui");
	cppgl_glProgramUniform4uiv = (PFNGLPROGRAMUNIFORM4UIVPROC)load("glProgramUniform4uiv");
	cppgl_glProgramUniformMatrix2fv = (PFNGLPROGRAMUNIFORMMATRIX2FVPROC)load("glProgramUniformMatrix2fv");
	cppgl_glProgramUniformMatrix3fv = (PFNGLPROGRAMUNIFORMMATRIX3FVPROC)load("glProgramUniformMatrix3fv");
	cppgl_glProgramUniformMatrix4fv = (PFNGLPROGRAMUNIFORMMATRIX4FVPROC)load("glProgramUniformMatrix4fv");
	cppgl_glProgramUniformMatrix2dv = (PFNGLPROGRAMUNIFORMMATRIX2DVPROC)load("glProgramUniformMatrix2dv");
	cppgl_glProgramUniformMatrix3dv = (PFNGLPROGRAMUNIFORMMATRIX3DVPROC)load("glProgramUniformMatrix3dv");
	cppgl_glProgramUniformMatrix4dv = (PFNGLPROGRAMUNIFORMMATRIX4DVPROC)load("glProgramUniformMatrix4dv");
	cppgl_glProgramUniformMatrix2x3fv = (PFNGLPROGRAMUNIFORMMATRIX2X3FVPROC)load("glProgramUniformMatrix2x3fv");
	cppgl_glProgramUniformMatrix3x2fv = (PFNGLPROGRAMUNIFORMMATRIX3X2FVPROC)load("glProgramUniformMatrix3x2fv");
	cppgl_glProgramUniformMatrix2x4fv = (PFNGLPROGRAMUNIFORMMATRIX2X4FVPROC)load("glProgramUniformMatrix2x4fv");
	cppgl_glProgramUniformMatrix4x2fv = (PFNGLPROGRAMUNIFORMMATRIX4X2FVPROC)load("glProgramUniformMatrix4x2fv");
	cppgl_glProgramUniformMatrix3x4fv = (PFNGLPROGRAMUNIFORMMATRIX3X4FVPROC)load("glProgramUniformMatrix3x4fv");
	cppgl_glProgramUniformMatrix4x3fv = (PFNGLPROGRAMUNIFORMMATRIX4X3FVPROC)load("glProgramUniformMatrix4x3fv");
	cppgl_glProgramUniformMatrix2x3dv = (PFNGLPROGRAMUNIFORMMATRIX2X3DVPROC)load("glProgramUniformMatrix2x3dv");
	cppgl_glProgramUniformMatrix3x2dv = (PFNGLPROGRAMUNIFORMMATRIX3X2DVPROC)load("glProgramUniformMatrix3x2dv");
	cppgl_glProgramUniformMatrix2x4dv = (PFNGLPROGRAMUNIFORMMATRIX2X4DVPROC)load("glProgramUniformMatrix2x4dv");
	cppgl_glProgramUniformMatrix4x2dv = (PFNGLPROGRAMUNIFORMMATRIX4X2DVPROC)load("glProgramUniformMatrix4x2dv");
	cppgl_glProgramUniformMatrix3x4dv = (PFNGLPROGRAMUNIFORMMATRIX3X4DVPROC)load("glProgramUniformMatrix3x4dv");
	cppgl_glProgramUniformMatrix4x3dv = (PFNGLPROGRAMUNIFORMMATRIX4X3DVPROC)load("glProgramUniformMatrix4x3dv");
	cppgl_glValidateProgramPipeline = (PFNGLVALIDATEPROGRAMPIPELINEPROC)load("glValidateProgramPipeline");
	cppgl_glGetProgramPipelineInfoLog = (PFNGLGETPROGRAMPIPELINEINFOLOGPROC)load("glGetProgramPipelineInfoLog");
}
static void load_GL_ARB_shader_atomic_counters(CPPGLloadproc load) {
	if(!CPPGL_GL_ARB_shader_atomic_counters) return;
	cppgl_glGetActiveAtomicCounterBufferiv = (PFNGLGETACTIVEATOMICCOUNTERBUFFERIVPROC)load("glGetActiveAtomicCounterBufferiv");
}
static void load_GL_ARB_shader_image_load_store(CPPGLloadproc load) {
	if(!CPPGL_GL_ARB_shader_image_load_store) return;
	cppgl_glBindImageTexture = (PFNGLBINDIMAGETEXTUREPROC)load("glBindImageTexture");
	cppgl_glMemoryBarrier = (PFNGLMEMORYBARRIERPROC)load("glMemoryBarrier");
}
static void load_GL_ARB_shader_objects(CPPGLloadproc load) {
	if(!CPPGL_GL_ARB_shader_objects) return;
	cppgl_glDeleteObjectARB = (PFNGLDELETEOBJECTARBPROC)load("glDeleteObjectARB");
	cppgl_glGetHandleARB = (PFNGLGETHANDLEARBPROC)load("glGetHandleARB");
	cppgl_glDetachObjectARB = (PFNGLDETACHOBJECTARBPROC)load("glDetachObjectARB");
	cppgl_glCreateShaderObjectARB = (PFNGLCREATESHADEROBJECTARBPROC)load("glCreateShaderObjectARB");
	cppgl_glShaderSourceARB = (PFNGLSHADERSOURCEARBPROC)load("glShaderSourceARB");
	cppgl_glCompileShaderARB = (PFNGLCOMPILESHADERARBPROC)load("glCompileShaderARB");
	cppgl_glCreateProgramObjectARB = (PFNGLCREATEPROGRAMOBJECTARBPROC)load("glCreateProgramObjectARB");
	cppgl_glAttachObjectARB = (PFNGLATTACHOBJECTARBPROC)load("glAttachObjectARB");
	cppgl_glLinkProgramARB = (PFNGLLINKPROGRAMARBPROC)load("glLinkProgramARB");
	cppgl_glUseProgramObjectARB = (PFNGLUSEPROGRAMOBJECTARBPROC)load("glUseProgramObjectARB");
	cppgl_glValidateProgramARB = (PFNGLVALIDATEPROGRAMARBPROC)load("glValidateProgramARB");
	cppgl_glUniform1fARB = (PFNGLUNIFORM1FARBPROC)load("glUniform1fARB");
	cppgl_glUniform2fARB = (PFNGLUNIFORM2FARBPROC)load("glUniform2fARB");
	cppgl_glUniform3fARB = (PFNGLUNIFORM3FARBPROC)load("glUniform3fARB");
	cppgl_glUniform4fARB = (PFNGLUNIFORM4FARBPROC)load("glUniform4fARB");
	cppgl_glUniform1iARB = (PFNGLUNIFORM1IARBPROC)load("glUniform1iARB");
	cppgl_glUniform2iARB = (PFNGLUNIFORM2IARBPROC)load("glUniform2iARB");
	cppgl_glUniform3iARB = (PFNGLUNIFORM3IARBPROC)load("glUniform3iARB");
	cppgl_glUniform4iARB = (PFNGLUNIFORM4IARBPROC)load("glUniform4iARB");
	cppgl_glUniform1fvARB = (PFNGLUNIFORM1FVARBPROC)load("glUniform1fvARB");
	cppgl_glUniform2fvARB = (PFNGLUNIFORM2FVARBPROC)load("glUniform2fvARB");
	cppgl_glUniform3fvARB = (PFNGLUNIFORM3FVARBPROC)load("glUniform3fvARB");
	cppgl_glUniform4fvARB = (PFNGLUNIFORM4FVARBPROC)load("glUniform4fvARB");
	cppgl_glUniform1ivARB = (PFNGLUNIFORM1IVARBPROC)load("glUniform1ivARB");
	cppgl_glUniform2ivARB = (PFNGLUNIFORM2IVARBPROC)load("glUniform2ivARB");
	cppgl_glUniform3ivARB = (PFNGLUNIFORM3IVARBPROC)load("glUniform3ivARB");
	cppgl_glUniform4ivARB = (PFNGLUNIFORM4IVARBPROC)load("glUniform4ivARB");
	cppgl_glUniformMatrix2fvARB = (PFNGLUNIFORMMATRIX2FVARBPROC)load("glUniformMatrix2fvARB");
	cppgl_glUniformMatrix3fvARB = (PFNGLUNIFORMMATRIX3FVARBPROC)load("glUniformMatrix3fvARB");
	cppgl_glUniformMatrix4fvARB = (PFNGLUNIFORMMATRIX4FVARBPROC)load("glUniformMatrix4fvARB");
	cppgl_glGetObjectParameterfvARB = (PFNGLGETOBJECTPARAMETERFVARBPROC)load("glGetObjectParameterfvARB");
	cppgl_glGetObjectParameterivARB = (PFNGLGETOBJECTPARAMETERIVARBPROC)load("glGetObjectParameterivARB");
	cppgl_glGetInfoLogARB = (PFNGLGETINFOLOGARBPROC)load("glGetInfoLogARB");
	cppgl_glGetAttachedObjectsARB = (PFNGLGETATTACHEDOBJECTSARBPROC)load("glGetAttachedObjectsARB");
	cppgl_glGetUniformLocationARB = (PFNGLGETUNIFORMLOCATIONARBPROC)load("glGetUniformLocationARB");
	cppgl_glGetActiveUniformARB = (PFNGLGETACTIVEUNIFORMARBPROC)load("glGetActiveUniformARB");
	cppgl_glGetUniformfvARB = (PFNGLGETUNIFORMFVARBPROC)load("glGetUniformfvARB");
	cppgl_glGetUniformivARB = (PFNGLGETUNIFORMIVARBPROC)load("glGetUniformivARB");
	cppgl_glGetShaderSourceARB = (PFNGLGETSHADERSOURCEARBPROC)load("glGetShaderSourceARB");
}
static void load_GL_ARB_shader_storage_buffer_object(CPPGLloadproc load) {
	if(!CPPGL_GL_ARB_shader_storage_buffer_object) return;
	cppgl_glShaderStorageBlockBinding = (PFNGLSHADERSTORAGEBLOCKBINDINGPROC)load("glShaderStorageBlockBinding");
}
static void load_GL_ARB_shader_subroutine(CPPGLloadproc load) {
	if(!CPPGL_GL_ARB_shader_subroutine) return;
	cppgl_glGetSubroutineUniformLocation = (PFNGLGETSUBROUTINEUNIFORMLOCATIONPROC)load("glGetSubroutineUniformLocation");
	cppgl_glGetSubroutineIndex = (PFNGLGETSUBROUTINEINDEXPROC)load("glGetSubroutineIndex");
	cppgl_glGetActiveSubroutineUniformiv = (PFNGLGETACTIVESUBROUTINEUNIFORMIVPROC)load("glGetActiveSubroutineUniformiv");
	cppgl_glGetActiveSubroutineUniformName = (PFNGLGETACTIVESUBROUTINEUNIFORMNAMEPROC)load("glGetActiveSubroutineUniformName");
	cppgl_glGetActiveSubroutineName = (PFNGLGETACTIVESUBROUTINENAMEPROC)load("glGetActiveSubroutineName");
	cppgl_glUniformSubroutinesuiv = (PFNGLUNIFORMSUBROUTINESUIVPROC)load("glUniformSubroutinesuiv");
	cppgl_glGetUniformSubroutineuiv = (PFNGLGETUNIFORMSUBROUTINEUIVPROC)load("glGetUniformSubroutineuiv");
	cppgl_glGetProgramStageiv = (PFNGLGETPROGRAMSTAGEIVPROC)load("glGetProgramStageiv");
}
static void load_GL_ARB_shading_language_include(CPPGLloadproc load) {
	if(!CPPGL_GL_ARB_shading_language_include) return;
	cppgl_glNamedStringARB = (PFNGLNAMEDSTRINGARBPROC)load("glNamedStringARB");
	cppgl_glDeleteNamedStringARB = (PFNGLDELETENAMEDSTRINGARBPROC)load("glDeleteNamedStringARB");
	cppgl_glCompileShaderIncludeARB = (PFNGLCOMPILESHADERINCLUDEARBPROC)load("glCompileShaderIncludeARB");
	cppgl_glIsNamedStringARB = (PFNGLISNAMEDSTRINGARBPROC)load("glIsNamedStringARB");
	cppgl_glGetNamedStringARB = (PFNGLGETNAMEDSTRINGARBPROC)load("glGetNamedStringARB");
	cppgl_glGetNamedStringivARB = (PFNGLGETNAMEDSTRINGIVARBPROC)load("glGetNamedStringivARB");
}
static void load_GL_ARB_sparse_buffer(CPPGLloadproc load) {
	if(!CPPGL_GL_ARB_sparse_buffer) return;
	cppgl_glBufferPageCommitmentARB = (PFNGLBUFFERPAGECOMMITMENTARBPROC)load("glBufferPageCommitmentARB");
	cppgl_glNamedBufferPageCommitmentEXT = (PFNGLNAMEDBUFFERPAGECOMMITMENTEXTPROC)load("glNamedBufferPageCommitmentEXT");
	cppgl_glNamedBufferPageCommitmentARB = (PFNGLNAMEDBUFFERPAGECOMMITMENTARBPROC)load("glNamedBufferPageCommitmentARB");
}
static void load_GL_ARB_sparse_texture(CPPGLloadproc load) {
	if(!CPPGL_GL_ARB_sparse_texture) return;
	cppgl_glTexPageCommitmentARB = (PFNGLTEXPAGECOMMITMENTARBPROC)load("glTexPageCommitmentARB");
}
static void load_GL_ARB_sync(CPPGLloadproc load) {
	if(!CPPGL_GL_ARB_sync) return;
	cppgl_glFenceSync = (PFNGLFENCESYNCPROC)load("glFenceSync");
	cppgl_glIsSync = (PFNGLISSYNCPROC)load("glIsSync");
	cppgl_glDeleteSync = (PFNGLDELETESYNCPROC)load("glDeleteSync");
	cppgl_glClientWaitSync = (PFNGLCLIENTWAITSYNCPROC)load("glClientWaitSync");
	cppgl_glWaitSync = (PFNGLWAITSYNCPROC)load("glWaitSync");
	cppgl_glGetInteger64v = (PFNGLGETINTEGER64VPROC)load("glGetInteger64v");
	cppgl_glGetSynciv = (PFNGLGETSYNCIVPROC)load("glGetSynciv");
}
static void load_GL_ARB_tessellation_shader(CPPGLloadproc load) {
	if(!CPPGL_GL_ARB_tessellation_shader) return;
	cppgl_glPatchParameteri = (PFNGLPATCHPARAMETERIPROC)load("glPatchParameteri");
	cppgl_glPatchParameterfv = (PFNGLPATCHPARAMETERFVPROC)load("glPatchParameterfv");
}
static void load_GL_ARB_texture_barrier(CPPGLloadproc load) {
	if(!CPPGL_GL_ARB_texture_barrier) return;
	cppgl_glTextureBarrier = (PFNGLTEXTUREBARRIERPROC)load("glTextureBarrier");
}
static void load_GL_ARB_texture_buffer_object(CPPGLloadproc load) {
	if(!CPPGL_GL_ARB_texture_buffer_object) return;
	cppgl_glTexBufferARB = (PFNGLTEXBUFFERARBPROC)load("glTexBufferARB");
}
static void load_GL_ARB_texture_buffer_range(CPPGLloadproc load) {
	if(!CPPGL_GL_ARB_texture_buffer_range) return;
	cppgl_glTexBufferRange = (PFNGLTEXBUFFERRANGEPROC)load("glTexBufferRange");
}
static void load_GL_ARB_texture_compression(CPPGLloadproc load) {
	if(!CPPGL_GL_ARB_texture_compression) return;
	cppgl_glCompressedTexImage3DARB = (PFNGLCOMPRESSEDTEXIMAGE3DARBPROC)load("glCompressedTexImage3DARB");
	cppgl_glCompressedTexImage2DARB = (PFNGLCOMPRESSEDTEXIMAGE2DARBPROC)load("glCompressedTexImage2DARB");
	cppgl_glCompressedTexImage1DARB = (PFNGLCOMPRESSEDTEXIMAGE1DARBPROC)load("glCompressedTexImage1DARB");
	cppgl_glCompressedTexSubImage3DARB = (PFNGLCOMPRESSEDTEXSUBIMAGE3DARBPROC)load("glCompressedTexSubImage3DARB");
	cppgl_glCompressedTexSubImage2DARB = (PFNGLCOMPRESSEDTEXSUBIMAGE2DARBPROC)load("glCompressedTexSubImage2DARB");
	cppgl_glCompressedTexSubImage1DARB = (PFNGLCOMPRESSEDTEXSUBIMAGE1DARBPROC)load("glCompressedTexSubImage1DARB");
	cppgl_glGetCompressedTexImageARB = (PFNGLGETCOMPRESSEDTEXIMAGEARBPROC)load("glGetCompressedTexImageARB");
}
static void load_GL_ARB_texture_multisample(CPPGLloadproc load) {
	if(!CPPGL_GL_ARB_texture_multisample) return;
	cppgl_glTexImage2DMultisample = (PFNGLTEXIMAGE2DMULTISAMPLEPROC)load("glTexImage2DMultisample");
	cppgl_glTexImage3DMultisample = (PFNGLTEXIMAGE3DMULTISAMPLEPROC)load("glTexImage3DMultisample");
	cppgl_glGetMultisamplefv = (PFNGLGETMULTISAMPLEFVPROC)load("glGetMultisamplefv");
	cppgl_glSampleMaski = (PFNGLSAMPLEMASKIPROC)load("glSampleMaski");
}
static void load_GL_ARB_texture_storage(CPPGLloadproc load) {
	if(!CPPGL_GL_ARB_texture_storage) return;
	cppgl_glTexStorage1D = (PFNGLTEXSTORAGE1DPROC)load("glTexStorage1D");
	cppgl_glTexStorage2D = (PFNGLTEXSTORAGE2DPROC)load("glTexStorage2D");
	cppgl_glTexStorage3D = (PFNGLTEXSTORAGE3DPROC)load("glTexStorage3D");
}
static void load_GL_ARB_texture_storage_multisample(CPPGLloadproc load) {
	if(!CPPGL_GL_ARB_texture_storage_multisample) return;
	cppgl_glTexStorage2DMultisample = (PFNGLTEXSTORAGE2DMULTISAMPLEPROC)load("glTexStorage2DMultisample");
	cppgl_glTexStorage3DMultisample = (PFNGLTEXSTORAGE3DMULTISAMPLEPROC)load("glTexStorage3DMultisample");
}
static void load_GL_ARB_texture_view(CPPGLloadproc load) {
	if(!CPPGL_GL_ARB_texture_view) return;
	cppgl_glTextureView = (PFNGLTEXTUREVIEWPROC)load("glTextureView");
}
static void load_GL_ARB_timer_query(CPPGLloadproc load) {
	if(!CPPGL_GL_ARB_timer_query) return;
	cppgl_glQueryCounter = (PFNGLQUERYCOUNTERPROC)load("glQueryCounter");
	cppgl_glGetQueryObjecti64v = (PFNGLGETQUERYOBJECTI64VPROC)load("glGetQueryObjecti64v");
	cppgl_glGetQueryObjectui64v = (PFNGLGETQUERYOBJECTUI64VPROC)load("glGetQueryObjectui64v");
}
static void load_GL_ARB_transform_feedback2(CPPGLloadproc load) {
	if(!CPPGL_GL_ARB_transform_feedback2) return;
	cppgl_glBindTransformFeedback = (PFNGLBINDTRANSFORMFEEDBACKPROC)load("glBindTransformFeedback");
	cppgl_glDeleteTransformFeedbacks = (PFNGLDELETETRANSFORMFEEDBACKSPROC)load("glDeleteTransformFeedbacks");
	cppgl_glGenTransformFeedbacks = (PFNGLGENTRANSFORMFEEDBACKSPROC)load("glGenTransformFeedbacks");
	cppgl_glIsTransformFeedback = (PFNGLISTRANSFORMFEEDBACKPROC)load("glIsTransformFeedback");
	cppgl_glPauseTransformFeedback = (PFNGLPAUSETRANSFORMFEEDBACKPROC)load("glPauseTransformFeedback");
	cppgl_glResumeTransformFeedback = (PFNGLRESUMETRANSFORMFEEDBACKPROC)load("glResumeTransformFeedback");
	cppgl_glDrawTransformFeedback = (PFNGLDRAWTRANSFORMFEEDBACKPROC)load("glDrawTransformFeedback");
}
static void load_GL_ARB_transform_feedback3(CPPGLloadproc load) {
	if(!CPPGL_GL_ARB_transform_feedback3) return;
	cppgl_glDrawTransformFeedbackStream = (PFNGLDRAWTRANSFORMFEEDBACKSTREAMPROC)load("glDrawTransformFeedbackStream");
	cppgl_glBeginQueryIndexed = (PFNGLBEGINQUERYINDEXEDPROC)load("glBeginQueryIndexed");
	cppgl_glEndQueryIndexed = (PFNGLENDQUERYINDEXEDPROC)load("glEndQueryIndexed");
	cppgl_glGetQueryIndexediv = (PFNGLGETQUERYINDEXEDIVPROC)load("glGetQueryIndexediv");
}
static void load_GL_ARB_transform_feedback_instanced(CPPGLloadproc load) {
	if(!CPPGL_GL_ARB_transform_feedback_instanced) return;
	cppgl_glDrawTransformFeedbackInstanced = (PFNGLDRAWTRANSFORMFEEDBACKINSTANCEDPROC)load("glDrawTransformFeedbackInstanced");
	cppgl_glDrawTransformFeedbackStreamInstanced = (PFNGLDRAWTRANSFORMFEEDBACKSTREAMINSTANCEDPROC)load("glDrawTransformFeedbackStreamInstanced");
}
static void load_GL_ARB_transpose_matrix(CPPGLloadproc load) {
	if(!CPPGL_GL_ARB_transpose_matrix) return;
	cppgl_glLoadTransposeMatrixfARB = (PFNGLLOADTRANSPOSEMATRIXFARBPROC)load("glLoadTransposeMatrixfARB");
	cppgl_glLoadTransposeMatrixdARB = (PFNGLLOADTRANSPOSEMATRIXDARBPROC)load("glLoadTransposeMatrixdARB");
	cppgl_glMultTransposeMatrixfARB = (PFNGLMULTTRANSPOSEMATRIXFARBPROC)load("glMultTransposeMatrixfARB");
	cppgl_glMultTransposeMatrixdARB = (PFNGLMULTTRANSPOSEMATRIXDARBPROC)load("glMultTransposeMatrixdARB");
}
static void load_GL_ARB_uniform_buffer_object(CPPGLloadproc load) {
	if(!CPPGL_GL_ARB_uniform_buffer_object) return;
	cppgl_glGetUniformIndices = (PFNGLGETUNIFORMINDICESPROC)load("glGetUniformIndices");
	cppgl_glGetActiveUniformsiv = (PFNGLGETACTIVEUNIFORMSIVPROC)load("glGetActiveUniformsiv");
	cppgl_glGetActiveUniformName = (PFNGLGETACTIVEUNIFORMNAMEPROC)load("glGetActiveUniformName");
	cppgl_glGetUniformBlockIndex = (PFNGLGETUNIFORMBLOCKINDEXPROC)load("glGetUniformBlockIndex");
	cppgl_glGetActiveUniformBlockiv = (PFNGLGETACTIVEUNIFORMBLOCKIVPROC)load("glGetActiveUniformBlockiv");
	cppgl_glGetActiveUniformBlockName = (PFNGLGETACTIVEUNIFORMBLOCKNAMEPROC)load("glGetActiveUniformBlockName");
	cppgl_glUniformBlockBinding = (PFNGLUNIFORMBLOCKBINDINGPROC)load("glUniformBlockBinding");
	cppgl_glBindBufferRange = (PFNGLBINDBUFFERRANGEPROC)load("glBindBufferRange");
	cppgl_glBindBufferBase = (PFNGLBINDBUFFERBASEPROC)load("glBindBufferBase");
	cppgl_glGetIntegeri_v = (PFNGLGETINTEGERI_VPROC)load("glGetIntegeri_v");
}
static void load_GL_ARB_vertex_array_object(CPPGLloadproc load) {
	if(!CPPGL_GL_ARB_vertex_array_object) return;
	cppgl_glBindVertexArray = (PFNGLBINDVERTEXARRAYPROC)load("glBindVertexArray");
	cppgl_glDeleteVertexArrays = (PFNGLDELETEVERTEXARRAYSPROC)load("glDeleteVertexArrays");
	cppgl_glGenVertexArrays = (PFNGLGENVERTEXARRAYSPROC)load("glGenVertexArrays");
	cppgl_glIsVertexArray = (PFNGLISVERTEXARRAYPROC)load("glIsVertexArray");
}
static void load_GL_ARB_vertex_attrib_64bit(CPPGLloadproc load) {
	if(!CPPGL_GL_ARB_vertex_attrib_64bit) return;
	cppgl_glVertexAttribL1d = (PFNGLVERTEXATTRIBL1DPROC)load("glVertexAttribL1d");
	cppgl_glVertexAttribL2d = (PFNGLVERTEXATTRIBL2DPROC)load("glVertexAttribL2d");
	cppgl_glVertexAttribL3d = (PFNGLVERTEXATTRIBL3DPROC)load("glVertexAttribL3d");
	cppgl_glVertexAttribL4d = (PFNGLVERTEXATTRIBL4DPROC)load("glVertexAttribL4d");
	cppgl_glVertexAttribL1dv = (PFNGLVERTEXATTRIBL1DVPROC)load("glVertexAttribL1dv");
	cppgl_glVertexAttribL2dv = (PFNGLVERTEXATTRIBL2DVPROC)load("glVertexAttribL2dv");
	cppgl_glVertexAttribL3dv = (PFNGLVERTEXATTRIBL3DVPROC)load("glVertexAttribL3dv");
	cppgl_glVertexAttribL4dv = (PFNGLVERTEXATTRIBL4DVPROC)load("glVertexAttribL4dv");
	cppgl_glVertexAttribLPointer = (PFNGLVERTEXATTRIBLPOINTERPROC)load("glVertexAttribLPointer");
	cppgl_glGetVertexAttribLdv = (PFNGLGETVERTEXATTRIBLDVPROC)load("glGetVertexAttribLdv");
}
static void load_GL_ARB_vertex_attrib_binding(CPPGLloadproc load) {
	if(!CPPGL_GL_ARB_vertex_attrib_binding) return;
	cppgl_glBindVertexBuffer = (PFNGLBINDVERTEXBUFFERPROC)load("glBindVertexBuffer");
	cppgl_glVertexAttribFormat = (PFNGLVERTEXATTRIBFORMATPROC)load("glVertexAttribFormat");
	cppgl_glVertexAttribIFormat = (PFNGLVERTEXATTRIBIFORMATPROC)load("glVertexAttribIFormat");
	cppgl_glVertexAttribLFormat = (PFNGLVERTEXATTRIBLFORMATPROC)load("glVertexAttribLFormat");
	cppgl_glVertexAttribBinding = (PFNGLVERTEXATTRIBBINDINGPROC)load("glVertexAttribBinding");
	cppgl_glVertexBindingDivisor = (PFNGLVERTEXBINDINGDIVISORPROC)load("glVertexBindingDivisor");
}
static void load_GL_ARB_vertex_blend(CPPGLloadproc load) {
	if(!CPPGL_GL_ARB_vertex_blend) return;
	cppgl_glWeightbvARB = (PFNGLWEIGHTBVARBPROC)load("glWeightbvARB");
	cppgl_glWeightsvARB = (PFNGLWEIGHTSVARBPROC)load("glWeightsvARB");
	cppgl_glWeightivARB = (PFNGLWEIGHTIVARBPROC)load("glWeightivARB");
	cppgl_glWeightfvARB = (PFNGLWEIGHTFVARBPROC)load("glWeightfvARB");
	cppgl_glWeightdvARB = (PFNGLWEIGHTDVARBPROC)load("glWeightdvARB");
	cppgl_glWeightubvARB = (PFNGLWEIGHTUBVARBPROC)load("glWeightubvARB");
	cppgl_glWeightusvARB = (PFNGLWEIGHTUSVARBPROC)load("glWeightusvARB");
	cppgl_glWeightuivARB = (PFNGLWEIGHTUIVARBPROC)load("glWeightuivARB");
	cppgl_glWeightPointerARB = (PFNGLWEIGHTPOINTERARBPROC)load("glWeightPointerARB");
	cppgl_glVertexBlendARB = (PFNGLVERTEXBLENDARBPROC)load("glVertexBlendARB");
}
static void load_GL_ARB_vertex_buffer_object(CPPGLloadproc load) {
	if(!CPPGL_GL_ARB_vertex_buffer_object) return;
	cppgl_glBindBufferARB = (PFNGLBINDBUFFERARBPROC)load("glBindBufferARB");
	cppgl_glDeleteBuffersARB = (PFNGLDELETEBUFFERSARBPROC)load("glDeleteBuffersARB");
	cppgl_glGenBuffersARB = (PFNGLGENBUFFERSARBPROC)load("glGenBuffersARB");
	cppgl_glIsBufferARB = (PFNGLISBUFFERARBPROC)load("glIsBufferARB");
	cppgl_glBufferDataARB = (PFNGLBUFFERDATAARBPROC)load("glBufferDataARB");
	cppgl_glBufferSubDataARB = (PFNGLBUFFERSUBDATAARBPROC)load("glBufferSubDataARB");
	cppgl_glGetBufferSubDataARB = (PFNGLGETBUFFERSUBDATAARBPROC)load("glGetBufferSubDataARB");
	cppgl_glMapBufferARB = (PFNGLMAPBUFFERARBPROC)load("glMapBufferARB");
	cppgl_glUnmapBufferARB = (PFNGLUNMAPBUFFERARBPROC)load("glUnmapBufferARB");
	cppgl_glGetBufferParameterivARB = (PFNGLGETBUFFERPARAMETERIVARBPROC)load("glGetBufferParameterivARB");
	cppgl_glGetBufferPointervARB = (PFNGLGETBUFFERPOINTERVARBPROC)load("glGetBufferPointervARB");
}
static void load_GL_ARB_vertex_program(CPPGLloadproc load) {
	if(!CPPGL_GL_ARB_vertex_program) return;
	cppgl_glVertexAttrib1dARB = (PFNGLVERTEXATTRIB1DARBPROC)load("glVertexAttrib1dARB");
	cppgl_glVertexAttrib1dvARB = (PFNGLVERTEXATTRIB1DVARBPROC)load("glVertexAttrib1dvARB");
	cppgl_glVertexAttrib1fARB = (PFNGLVERTEXATTRIB1FARBPROC)load("glVertexAttrib1fARB");
	cppgl_glVertexAttrib1fvARB = (PFNGLVERTEXATTRIB1FVARBPROC)load("glVertexAttrib1fvARB");
	cppgl_glVertexAttrib1sARB = (PFNGLVERTEXATTRIB1SARBPROC)load("glVertexAttrib1sARB");
	cppgl_glVertexAttrib1svARB = (PFNGLVERTEXATTRIB1SVARBPROC)load("glVertexAttrib1svARB");
	cppgl_glVertexAttrib2dARB = (PFNGLVERTEXATTRIB2DARBPROC)load("glVertexAttrib2dARB");
	cppgl_glVertexAttrib2dvARB = (PFNGLVERTEXATTRIB2DVARBPROC)load("glVertexAttrib2dvARB");
	cppgl_glVertexAttrib2fARB = (PFNGLVERTEXATTRIB2FARBPROC)load("glVertexAttrib2fARB");
	cppgl_glVertexAttrib2fvARB = (PFNGLVERTEXATTRIB2FVARBPROC)load("glVertexAttrib2fvARB");
	cppgl_glVertexAttrib2sARB = (PFNGLVERTEXATTRIB2SARBPROC)load("glVertexAttrib2sARB");
	cppgl_glVertexAttrib2svARB = (PFNGLVERTEXATTRIB2SVARBPROC)load("glVertexAttrib2svARB");
	cppgl_glVertexAttrib3dARB = (PFNGLVERTEXATTRIB3DARBPROC)load("glVertexAttrib3dARB");
	cppgl_glVertexAttrib3dvARB = (PFNGLVERTEXATTRIB3DVARBPROC)load("glVertexAttrib3dvARB");
	cppgl_glVertexAttrib3fARB = (PFNGLVERTEXATTRIB3FARBPROC)load("glVertexAttrib3fARB");
	cppgl_glVertexAttrib3fvARB = (PFNGLVERTEXATTRIB3FVARBPROC)load("glVertexAttrib3fvARB");
	cppgl_glVertexAttrib3sARB = (PFNGLVERTEXATTRIB3SARBPROC)load("glVertexAttrib3sARB");
	cppgl_glVertexAttrib3svARB = (PFNGLVERTEXATTRIB3SVARBPROC)load("glVertexAttrib3svARB");
	cppgl_glVertexAttrib4NbvARB = (PFNGLVERTEXATTRIB4NBVARBPROC)load("glVertexAttrib4NbvARB");
	cppgl_glVertexAttrib4NivARB = (PFNGLVERTEXATTRIB4NIVARBPROC)load("glVertexAttrib4NivARB");
	cppgl_glVertexAttrib4NsvARB = (PFNGLVERTEXATTRIB4NSVARBPROC)load("glVertexAttrib4NsvARB");
	cppgl_glVertexAttrib4NubARB = (PFNGLVERTEXATTRIB4NUBARBPROC)load("glVertexAttrib4NubARB");
	cppgl_glVertexAttrib4NubvARB = (PFNGLVERTEXATTRIB4NUBVARBPROC)load("glVertexAttrib4NubvARB");
	cppgl_glVertexAttrib4NuivARB = (PFNGLVERTEXATTRIB4NUIVARBPROC)load("glVertexAttrib4NuivARB");
	cppgl_glVertexAttrib4NusvARB = (PFNGLVERTEXATTRIB4NUSVARBPROC)load("glVertexAttrib4NusvARB");
	cppgl_glVertexAttrib4bvARB = (PFNGLVERTEXATTRIB4BVARBPROC)load("glVertexAttrib4bvARB");
	cppgl_glVertexAttrib4dARB = (PFNGLVERTEXATTRIB4DARBPROC)load("glVertexAttrib4dARB");
	cppgl_glVertexAttrib4dvARB = (PFNGLVERTEXATTRIB4DVARBPROC)load("glVertexAttrib4dvARB");
	cppgl_glVertexAttrib4fARB = (PFNGLVERTEXATTRIB4FARBPROC)load("glVertexAttrib4fARB");
	cppgl_glVertexAttrib4fvARB = (PFNGLVERTEXATTRIB4FVARBPROC)load("glVertexAttrib4fvARB");
	cppgl_glVertexAttrib4ivARB = (PFNGLVERTEXATTRIB4IVARBPROC)load("glVertexAttrib4ivARB");
	cppgl_glVertexAttrib4sARB = (PFNGLVERTEXATTRIB4SARBPROC)load("glVertexAttrib4sARB");
	cppgl_glVertexAttrib4svARB = (PFNGLVERTEXATTRIB4SVARBPROC)load("glVertexAttrib4svARB");
	cppgl_glVertexAttrib4ubvARB = (PFNGLVERTEXATTRIB4UBVARBPROC)load("glVertexAttrib4ubvARB");
	cppgl_glVertexAttrib4uivARB = (PFNGLVERTEXATTRIB4UIVARBPROC)load("glVertexAttrib4uivARB");
	cppgl_glVertexAttrib4usvARB = (PFNGLVERTEXATTRIB4USVARBPROC)load("glVertexAttrib4usvARB");
	cppgl_glVertexAttribPointerARB = (PFNGLVERTEXATTRIBPOINTERARBPROC)load("glVertexAttribPointerARB");
	cppgl_glEnableVertexAttribArrayARB = (PFNGLENABLEVERTEXATTRIBARRAYARBPROC)load("glEnableVertexAttribArrayARB");
	cppgl_glDisableVertexAttribArrayARB = (PFNGLDISABLEVERTEXATTRIBARRAYARBPROC)load("glDisableVertexAttribArrayARB");
	cppgl_glProgramStringARB = (PFNGLPROGRAMSTRINGARBPROC)load("glProgramStringARB");
	cppgl_glBindProgramARB = (PFNGLBINDPROGRAMARBPROC)load("glBindProgramARB");
	cppgl_glDeleteProgramsARB = (PFNGLDELETEPROGRAMSARBPROC)load("glDeleteProgramsARB");
	cppgl_glGenProgramsARB = (PFNGLGENPROGRAMSARBPROC)load("glGenProgramsARB");
	cppgl_glProgramEnvParameter4dARB = (PFNGLPROGRAMENVPARAMETER4DARBPROC)load("glProgramEnvParameter4dARB");
	cppgl_glProgramEnvParameter4dvARB = (PFNGLPROGRAMENVPARAMETER4DVARBPROC)load("glProgramEnvParameter4dvARB");
	cppgl_glProgramEnvParameter4fARB = (PFNGLPROGRAMENVPARAMETER4FARBPROC)load("glProgramEnvParameter4fARB");
	cppgl_glProgramEnvParameter4fvARB = (PFNGLPROGRAMENVPARAMETER4FVARBPROC)load("glProgramEnvParameter4fvARB");
	cppgl_glProgramLocalParameter4dARB = (PFNGLPROGRAMLOCALPARAMETER4DARBPROC)load("glProgramLocalParameter4dARB");
	cppgl_glProgramLocalParameter4dvARB = (PFNGLPROGRAMLOCALPARAMETER4DVARBPROC)load("glProgramLocalParameter4dvARB");
	cppgl_glProgramLocalParameter4fARB = (PFNGLPROGRAMLOCALPARAMETER4FARBPROC)load("glProgramLocalParameter4fARB");
	cppgl_glProgramLocalParameter4fvARB = (PFNGLPROGRAMLOCALPARAMETER4FVARBPROC)load("glProgramLocalParameter4fvARB");
	cppgl_glGetProgramEnvParameterdvARB = (PFNGLGETPROGRAMENVPARAMETERDVARBPROC)load("glGetProgramEnvParameterdvARB");
	cppgl_glGetProgramEnvParameterfvARB = (PFNGLGETPROGRAMENVPARAMETERFVARBPROC)load("glGetProgramEnvParameterfvARB");
	cppgl_glGetProgramLocalParameterdvARB = (PFNGLGETPROGRAMLOCALPARAMETERDVARBPROC)load("glGetProgramLocalParameterdvARB");
	cppgl_glGetProgramLocalParameterfvARB = (PFNGLGETPROGRAMLOCALPARAMETERFVARBPROC)load("glGetProgramLocalParameterfvARB");
	cppgl_glGetProgramivARB = (PFNGLGETPROGRAMIVARBPROC)load("glGetProgramivARB");
	cppgl_glGetProgramStringARB = (PFNGLGETPROGRAMSTRINGARBPROC)load("glGetProgramStringARB");
	cppgl_glGetVertexAttribdvARB = (PFNGLGETVERTEXATTRIBDVARBPROC)load("glGetVertexAttribdvARB");
	cppgl_glGetVertexAttribfvARB = (PFNGLGETVERTEXATTRIBFVARBPROC)load("glGetVertexAttribfvARB");
	cppgl_glGetVertexAttribivARB = (PFNGLGETVERTEXATTRIBIVARBPROC)load("glGetVertexAttribivARB");
	cppgl_glGetVertexAttribPointervARB = (PFNGLGETVERTEXATTRIBPOINTERVARBPROC)load("glGetVertexAttribPointervARB");
	cppgl_glIsProgramARB = (PFNGLISPROGRAMARBPROC)load("glIsProgramARB");
}
static void load_GL_ARB_vertex_shader(CPPGLloadproc load) {
	if(!CPPGL_GL_ARB_vertex_shader) return;
	cppgl_glVertexAttrib1fARB = (PFNGLVERTEXATTRIB1FARBPROC)load("glVertexAttrib1fARB");
	cppgl_glVertexAttrib1sARB = (PFNGLVERTEXATTRIB1SARBPROC)load("glVertexAttrib1sARB");
	cppgl_glVertexAttrib1dARB = (PFNGLVERTEXATTRIB1DARBPROC)load("glVertexAttrib1dARB");
	cppgl_glVertexAttrib2fARB = (PFNGLVERTEXATTRIB2FARBPROC)load("glVertexAttrib2fARB");
	cppgl_glVertexAttrib2sARB = (PFNGLVERTEXATTRIB2SARBPROC)load("glVertexAttrib2sARB");
	cppgl_glVertexAttrib2dARB = (PFNGLVERTEXATTRIB2DARBPROC)load("glVertexAttrib2dARB");
	cppgl_glVertexAttrib3fARB = (PFNGLVERTEXATTRIB3FARBPROC)load("glVertexAttrib3fARB");
	cppgl_glVertexAttrib3sARB = (PFNGLVERTEXATTRIB3SARBPROC)load("glVertexAttrib3sARB");
	cppgl_glVertexAttrib3dARB = (PFNGLVERTEXATTRIB3DARBPROC)load("glVertexAttrib3dARB");
	cppgl_glVertexAttrib4fARB = (PFNGLVERTEXATTRIB4FARBPROC)load("glVertexAttrib4fARB");
	cppgl_glVertexAttrib4sARB = (PFNGLVERTEXATTRIB4SARBPROC)load("glVertexAttrib4sARB");
	cppgl_glVertexAttrib4dARB = (PFNGLVERTEXATTRIB4DARBPROC)load("glVertexAttrib4dARB");
	cppgl_glVertexAttrib4NubARB = (PFNGLVERTEXATTRIB4NUBARBPROC)load("glVertexAttrib4NubARB");
	cppgl_glVertexAttrib1fvARB = (PFNGLVERTEXATTRIB1FVARBPROC)load("glVertexAttrib1fvARB");
	cppgl_glVertexAttrib1svARB = (PFNGLVERTEXATTRIB1SVARBPROC)load("glVertexAttrib1svARB");
	cppgl_glVertexAttrib1dvARB = (PFNGLVERTEXATTRIB1DVARBPROC)load("glVertexAttrib1dvARB");
	cppgl_glVertexAttrib2fvARB = (PFNGLVERTEXATTRIB2FVARBPROC)load("glVertexAttrib2fvARB");
	cppgl_glVertexAttrib2svARB = (PFNGLVERTEXATTRIB2SVARBPROC)load("glVertexAttrib2svARB");
	cppgl_glVertexAttrib2dvARB = (PFNGLVERTEXATTRIB2DVARBPROC)load("glVertexAttrib2dvARB");
	cppgl_glVertexAttrib3fvARB = (PFNGLVERTEXATTRIB3FVARBPROC)load("glVertexAttrib3fvARB");
	cppgl_glVertexAttrib3svARB = (PFNGLVERTEXATTRIB3SVARBPROC)load("glVertexAttrib3svARB");
	cppgl_glVertexAttrib3dvARB = (PFNGLVERTEXATTRIB3DVARBPROC)load("glVertexAttrib3dvARB");
	cppgl_glVertexAttrib4fvARB = (PFNGLVERTEXATTRIB4FVARBPROC)load("glVertexAttrib4fvARB");
	cppgl_glVertexAttrib4svARB = (PFNGLVERTEXATTRIB4SVARBPROC)load("glVertexAttrib4svARB");
	cppgl_glVertexAttrib4dvARB = (PFNGLVERTEXATTRIB4DVARBPROC)load("glVertexAttrib4dvARB");
	cppgl_glVertexAttrib4ivARB = (PFNGLVERTEXATTRIB4IVARBPROC)load("glVertexAttrib4ivARB");
	cppgl_glVertexAttrib4bvARB = (PFNGLVERTEXATTRIB4BVARBPROC)load("glVertexAttrib4bvARB");
	cppgl_glVertexAttrib4ubvARB = (PFNGLVERTEXATTRIB4UBVARBPROC)load("glVertexAttrib4ubvARB");
	cppgl_glVertexAttrib4usvARB = (PFNGLVERTEXATTRIB4USVARBPROC)load("glVertexAttrib4usvARB");
	cppgl_glVertexAttrib4uivARB = (PFNGLVERTEXATTRIB4UIVARBPROC)load("glVertexAttrib4uivARB");
	cppgl_glVertexAttrib4NbvARB = (PFNGLVERTEXATTRIB4NBVARBPROC)load("glVertexAttrib4NbvARB");
	cppgl_glVertexAttrib4NsvARB = (PFNGLVERTEXATTRIB4NSVARBPROC)load("glVertexAttrib4NsvARB");
	cppgl_glVertexAttrib4NivARB = (PFNGLVERTEXATTRIB4NIVARBPROC)load("glVertexAttrib4NivARB");
	cppgl_glVertexAttrib4NubvARB = (PFNGLVERTEXATTRIB4NUBVARBPROC)load("glVertexAttrib4NubvARB");
	cppgl_glVertexAttrib4NusvARB = (PFNGLVERTEXATTRIB4NUSVARBPROC)load("glVertexAttrib4NusvARB");
	cppgl_glVertexAttrib4NuivARB = (PFNGLVERTEXATTRIB4NUIVARBPROC)load("glVertexAttrib4NuivARB");
	cppgl_glVertexAttribPointerARB = (PFNGLVERTEXATTRIBPOINTERARBPROC)load("glVertexAttribPointerARB");
	cppgl_glEnableVertexAttribArrayARB = (PFNGLENABLEVERTEXATTRIBARRAYARBPROC)load("glEnableVertexAttribArrayARB");
	cppgl_glDisableVertexAttribArrayARB = (PFNGLDISABLEVERTEXATTRIBARRAYARBPROC)load("glDisableVertexAttribArrayARB");
	cppgl_glBindAttribLocationARB = (PFNGLBINDATTRIBLOCATIONARBPROC)load("glBindAttribLocationARB");
	cppgl_glGetActiveAttribARB = (PFNGLGETACTIVEATTRIBARBPROC)load("glGetActiveAttribARB");
	cppgl_glGetAttribLocationARB = (PFNGLGETATTRIBLOCATIONARBPROC)load("glGetAttribLocationARB");
	cppgl_glGetVertexAttribdvARB = (PFNGLGETVERTEXATTRIBDVARBPROC)load("glGetVertexAttribdvARB");
	cppgl_glGetVertexAttribfvARB = (PFNGLGETVERTEXATTRIBFVARBPROC)load("glGetVertexAttribfvARB");
	cppgl_glGetVertexAttribivARB = (PFNGLGETVERTEXATTRIBIVARBPROC)load("glGetVertexAttribivARB");
	cppgl_glGetVertexAttribPointervARB = (PFNGLGETVERTEXATTRIBPOINTERVARBPROC)load("glGetVertexAttribPointervARB");
}
static void load_GL_ARB_vertex_type_2_10_10_10_rev(CPPGLloadproc load) {
	if(!CPPGL_GL_ARB_vertex_type_2_10_10_10_rev) return;
	cppgl_glVertexAttribP1ui = (PFNGLVERTEXATTRIBP1UIPROC)load("glVertexAttribP1ui");
	cppgl_glVertexAttribP1uiv = (PFNGLVERTEXATTRIBP1UIVPROC)load("glVertexAttribP1uiv");
	cppgl_glVertexAttribP2ui = (PFNGLVERTEXATTRIBP2UIPROC)load("glVertexAttribP2ui");
	cppgl_glVertexAttribP2uiv = (PFNGLVERTEXATTRIBP2UIVPROC)load("glVertexAttribP2uiv");
	cppgl_glVertexAttribP3ui = (PFNGLVERTEXATTRIBP3UIPROC)load("glVertexAttribP3ui");
	cppgl_glVertexAttribP3uiv = (PFNGLVERTEXATTRIBP3UIVPROC)load("glVertexAttribP3uiv");
	cppgl_glVertexAttribP4ui = (PFNGLVERTEXATTRIBP4UIPROC)load("glVertexAttribP4ui");
	cppgl_glVertexAttribP4uiv = (PFNGLVERTEXATTRIBP4UIVPROC)load("glVertexAttribP4uiv");
	cppgl_glVertexP2ui = (PFNGLVERTEXP2UIPROC)load("glVertexP2ui");
	cppgl_glVertexP2uiv = (PFNGLVERTEXP2UIVPROC)load("glVertexP2uiv");
	cppgl_glVertexP3ui = (PFNGLVERTEXP3UIPROC)load("glVertexP3ui");
	cppgl_glVertexP3uiv = (PFNGLVERTEXP3UIVPROC)load("glVertexP3uiv");
	cppgl_glVertexP4ui = (PFNGLVERTEXP4UIPROC)load("glVertexP4ui");
	cppgl_glVertexP4uiv = (PFNGLVERTEXP4UIVPROC)load("glVertexP4uiv");
	cppgl_glTexCoordP1ui = (PFNGLTEXCOORDP1UIPROC)load("glTexCoordP1ui");
	cppgl_glTexCoordP1uiv = (PFNGLTEXCOORDP1UIVPROC)load("glTexCoordP1uiv");
	cppgl_glTexCoordP2ui = (PFNGLTEXCOORDP2UIPROC)load("glTexCoordP2ui");
	cppgl_glTexCoordP2uiv = (PFNGLTEXCOORDP2UIVPROC)load("glTexCoordP2uiv");
	cppgl_glTexCoordP3ui = (PFNGLTEXCOORDP3UIPROC)load("glTexCoordP3ui");
	cppgl_glTexCoordP3uiv = (PFNGLTEXCOORDP3UIVPROC)load("glTexCoordP3uiv");
	cppgl_glTexCoordP4ui = (PFNGLTEXCOORDP4UIPROC)load("glTexCoordP4ui");
	cppgl_glTexCoordP4uiv = (PFNGLTEXCOORDP4UIVPROC)load("glTexCoordP4uiv");
	cppgl_glMultiTexCoordP1ui = (PFNGLMULTITEXCOORDP1UIPROC)load("glMultiTexCoordP1ui");
	cppgl_glMultiTexCoordP1uiv = (PFNGLMULTITEXCOORDP1UIVPROC)load("glMultiTexCoordP1uiv");
	cppgl_glMultiTexCoordP2ui = (PFNGLMULTITEXCOORDP2UIPROC)load("glMultiTexCoordP2ui");
	cppgl_glMultiTexCoordP2uiv = (PFNGLMULTITEXCOORDP2UIVPROC)load("glMultiTexCoordP2uiv");
	cppgl_glMultiTexCoordP3ui = (PFNGLMULTITEXCOORDP3UIPROC)load("glMultiTexCoordP3ui");
	cppgl_glMultiTexCoordP3uiv = (PFNGLMULTITEXCOORDP3UIVPROC)load("glMultiTexCoordP3uiv");
	cppgl_glMultiTexCoordP4ui = (PFNGLMULTITEXCOORDP4UIPROC)load("glMultiTexCoordP4ui");
	cppgl_glMultiTexCoordP4uiv = (PFNGLMULTITEXCOORDP4UIVPROC)load("glMultiTexCoordP4uiv");
	cppgl_glNormalP3ui = (PFNGLNORMALP3UIPROC)load("glNormalP3ui");
	cppgl_glNormalP3uiv = (PFNGLNORMALP3UIVPROC)load("glNormalP3uiv");
	cppgl_glColorP3ui = (PFNGLCOLORP3UIPROC)load("glColorP3ui");
	cppgl_glColorP3uiv = (PFNGLCOLORP3UIVPROC)load("glColorP3uiv");
	cppgl_glColorP4ui = (PFNGLCOLORP4UIPROC)load("glColorP4ui");
	cppgl_glColorP4uiv = (PFNGLCOLORP4UIVPROC)load("glColorP4uiv");
	cppgl_glSecondaryColorP3ui = (PFNGLSECONDARYCOLORP3UIPROC)load("glSecondaryColorP3ui");
	cppgl_glSecondaryColorP3uiv = (PFNGLSECONDARYCOLORP3UIVPROC)load("glSecondaryColorP3uiv");
}
static void load_GL_ARB_viewport_array(CPPGLloadproc load) {
	if(!CPPGL_GL_ARB_viewport_array) return;
	cppgl_glViewportArrayv = (PFNGLVIEWPORTARRAYVPROC)load("glViewportArrayv");
	cppgl_glViewportIndexedf = (PFNGLVIEWPORTINDEXEDFPROC)load("glViewportIndexedf");
	cppgl_glViewportIndexedfv = (PFNGLVIEWPORTINDEXEDFVPROC)load("glViewportIndexedfv");
	cppgl_glScissorArrayv = (PFNGLSCISSORARRAYVPROC)load("glScissorArrayv");
	cppgl_glScissorIndexed = (PFNGLSCISSORINDEXEDPROC)load("glScissorIndexed");
	cppgl_glScissorIndexedv = (PFNGLSCISSORINDEXEDVPROC)load("glScissorIndexedv");
	cppgl_glDepthRangeArrayv = (PFNGLDEPTHRANGEARRAYVPROC)load("glDepthRangeArrayv");
	cppgl_glDepthRangeIndexed = (PFNGLDEPTHRANGEINDEXEDPROC)load("glDepthRangeIndexed");
	cppgl_glGetFloati_v = (PFNGLGETFLOATI_VPROC)load("glGetFloati_v");
	cppgl_glGetDoublei_v = (PFNGLGETDOUBLEI_VPROC)load("glGetDoublei_v");
}
static void load_GL_ARB_window_pos(CPPGLloadproc load) {
	if(!CPPGL_GL_ARB_window_pos) return;
	cppgl_glWindowPos2dARB = (PFNGLWINDOWPOS2DARBPROC)load("glWindowPos2dARB");
	cppgl_glWindowPos2dvARB = (PFNGLWINDOWPOS2DVARBPROC)load("glWindowPos2dvARB");
	cppgl_glWindowPos2fARB = (PFNGLWINDOWPOS2FARBPROC)load("glWindowPos2fARB");
	cppgl_glWindowPos2fvARB = (PFNGLWINDOWPOS2FVARBPROC)load("glWindowPos2fvARB");
	cppgl_glWindowPos2iARB = (PFNGLWINDOWPOS2IARBPROC)load("glWindowPos2iARB");
	cppgl_glWindowPos2ivARB = (PFNGLWINDOWPOS2IVARBPROC)load("glWindowPos2ivARB");
	cppgl_glWindowPos2sARB = (PFNGLWINDOWPOS2SARBPROC)load("glWindowPos2sARB");
	cppgl_glWindowPos2svARB = (PFNGLWINDOWPOS2SVARBPROC)load("glWindowPos2svARB");
	cppgl_glWindowPos3dARB = (PFNGLWINDOWPOS3DARBPROC)load("glWindowPos3dARB");
	cppgl_glWindowPos3dvARB = (PFNGLWINDOWPOS3DVARBPROC)load("glWindowPos3dvARB");
	cppgl_glWindowPos3fARB = (PFNGLWINDOWPOS3FARBPROC)load("glWindowPos3fARB");
	cppgl_glWindowPos3fvARB = (PFNGLWINDOWPOS3FVARBPROC)load("glWindowPos3fvARB");
	cppgl_glWindowPos3iARB = (PFNGLWINDOWPOS3IARBPROC)load("glWindowPos3iARB");
	cppgl_glWindowPos3ivARB = (PFNGLWINDOWPOS3IVARBPROC)load("glWindowPos3ivARB");
	cppgl_glWindowPos3sARB = (PFNGLWINDOWPOS3SARBPROC)load("glWindowPos3sARB");
	cppgl_glWindowPos3svARB = (PFNGLWINDOWPOS3SVARBPROC)load("glWindowPos3svARB");
}
static void load_GL_ATI_draw_buffers(CPPGLloadproc load) {
	if(!CPPGL_GL_ATI_draw_buffers) return;
	cppgl_glDrawBuffersATI = (PFNGLDRAWBUFFERSATIPROC)load("glDrawBuffersATI");
}
static void load_GL_ATI_element_array(CPPGLloadproc load) {
	if(!CPPGL_GL_ATI_element_array) return;
	cppgl_glElementPointerATI = (PFNGLELEMENTPOINTERATIPROC)load("glElementPointerATI");
	cppgl_glDrawElementArrayATI = (PFNGLDRAWELEMENTARRAYATIPROC)load("glDrawElementArrayATI");
	cppgl_glDrawRangeElementArrayATI = (PFNGLDRAWRANGEELEMENTARRAYATIPROC)load("glDrawRangeElementArrayATI");
}
static void load_GL_ATI_envmap_bumpmap(CPPGLloadproc load) {
	if(!CPPGL_GL_ATI_envmap_bumpmap) return;
	cppgl_glTexBumpParameterivATI = (PFNGLTEXBUMPPARAMETERIVATIPROC)load("glTexBumpParameterivATI");
	cppgl_glTexBumpParameterfvATI = (PFNGLTEXBUMPPARAMETERFVATIPROC)load("glTexBumpParameterfvATI");
	cppgl_glGetTexBumpParameterivATI = (PFNGLGETTEXBUMPPARAMETERIVATIPROC)load("glGetTexBumpParameterivATI");
	cppgl_glGetTexBumpParameterfvATI = (PFNGLGETTEXBUMPPARAMETERFVATIPROC)load("glGetTexBumpParameterfvATI");
}
static void load_GL_ATI_fragment_shader(CPPGLloadproc load) {
	if(!CPPGL_GL_ATI_fragment_shader) return;
	cppgl_glGenFragmentShadersATI = (PFNGLGENFRAGMENTSHADERSATIPROC)load("glGenFragmentShadersATI");
	cppgl_glBindFragmentShaderATI = (PFNGLBINDFRAGMENTSHADERATIPROC)load("glBindFragmentShaderATI");
	cppgl_glDeleteFragmentShaderATI = (PFNGLDELETEFRAGMENTSHADERATIPROC)load("glDeleteFragmentShaderATI");
	cppgl_glBeginFragmentShaderATI = (PFNGLBEGINFRAGMENTSHADERATIPROC)load("glBeginFragmentShaderATI");
	cppgl_glEndFragmentShaderATI = (PFNGLENDFRAGMENTSHADERATIPROC)load("glEndFragmentShaderATI");
	cppgl_glPassTexCoordATI = (PFNGLPASSTEXCOORDATIPROC)load("glPassTexCoordATI");
	cppgl_glSampleMapATI = (PFNGLSAMPLEMAPATIPROC)load("glSampleMapATI");
	cppgl_glColorFragmentOp1ATI = (PFNGLCOLORFRAGMENTOP1ATIPROC)load("glColorFragmentOp1ATI");
	cppgl_glColorFragmentOp2ATI = (PFNGLCOLORFRAGMENTOP2ATIPROC)load("glColorFragmentOp2ATI");
	cppgl_glColorFragmentOp3ATI = (PFNGLCOLORFRAGMENTOP3ATIPROC)load("glColorFragmentOp3ATI");
	cppgl_glAlphaFragmentOp1ATI = (PFNGLALPHAFRAGMENTOP1ATIPROC)load("glAlphaFragmentOp1ATI");
	cppgl_glAlphaFragmentOp2ATI = (PFNGLALPHAFRAGMENTOP2ATIPROC)load("glAlphaFragmentOp2ATI");
	cppgl_glAlphaFragmentOp3ATI = (PFNGLALPHAFRAGMENTOP3ATIPROC)load("glAlphaFragmentOp3ATI");
	cppgl_glSetFragmentShaderConstantATI = (PFNGLSETFRAGMENTSHADERCONSTANTATIPROC)load("glSetFragmentShaderConstantATI");
}
static void load_GL_ATI_map_object_buffer(CPPGLloadproc load) {
	if(!CPPGL_GL_ATI_map_object_buffer) return;
	cppgl_glMapObjectBufferATI = (PFNGLMAPOBJECTBUFFERATIPROC)load("glMapObjectBufferATI");
	cppgl_glUnmapObjectBufferATI = (PFNGLUNMAPOBJECTBUFFERATIPROC)load("glUnmapObjectBufferATI");
}
static void load_GL_ATI_pn_triangles(CPPGLloadproc load) {
	if(!CPPGL_GL_ATI_pn_triangles) return;
	cppgl_glPNTrianglesiATI = (PFNGLPNTRIANGLESIATIPROC)load("glPNTrianglesiATI");
	cppgl_glPNTrianglesfATI = (PFNGLPNTRIANGLESFATIPROC)load("glPNTrianglesfATI");
}
static void load_GL_ATI_separate_stencil(CPPGLloadproc load) {
	if(!CPPGL_GL_ATI_separate_stencil) return;
	cppgl_glStencilOpSeparateATI = (PFNGLSTENCILOPSEPARATEATIPROC)load("glStencilOpSeparateATI");
	cppgl_glStencilFuncSeparateATI = (PFNGLSTENCILFUNCSEPARATEATIPROC)load("glStencilFuncSeparateATI");
}
static void load_GL_ATI_vertex_array_object(CPPGLloadproc load) {
	if(!CPPGL_GL_ATI_vertex_array_object) return;
	cppgl_glNewObjectBufferATI = (PFNGLNEWOBJECTBUFFERATIPROC)load("glNewObjectBufferATI");
	cppgl_glIsObjectBufferATI = (PFNGLISOBJECTBUFFERATIPROC)load("glIsObjectBufferATI");
	cppgl_glUpdateObjectBufferATI = (PFNGLUPDATEOBJECTBUFFERATIPROC)load("glUpdateObjectBufferATI");
	cppgl_glGetObjectBufferfvATI = (PFNGLGETOBJECTBUFFERFVATIPROC)load("glGetObjectBufferfvATI");
	cppgl_glGetObjectBufferivATI = (PFNGLGETOBJECTBUFFERIVATIPROC)load("glGetObjectBufferivATI");
	cppgl_glFreeObjectBufferATI = (PFNGLFREEOBJECTBUFFERATIPROC)load("glFreeObjectBufferATI");
	cppgl_glArrayObjectATI = (PFNGLARRAYOBJECTATIPROC)load("glArrayObjectATI");
	cppgl_glGetArrayObjectfvATI = (PFNGLGETARRAYOBJECTFVATIPROC)load("glGetArrayObjectfvATI");
	cppgl_glGetArrayObjectivATI = (PFNGLGETARRAYOBJECTIVATIPROC)load("glGetArrayObjectivATI");
	cppgl_glVariantArrayObjectATI = (PFNGLVARIANTARRAYOBJECTATIPROC)load("glVariantArrayObjectATI");
	cppgl_glGetVariantArrayObjectfvATI = (PFNGLGETVARIANTARRAYOBJECTFVATIPROC)load("glGetVariantArrayObjectfvATI");
	cppgl_glGetVariantArrayObjectivATI = (PFNGLGETVARIANTARRAYOBJECTIVATIPROC)load("glGetVariantArrayObjectivATI");
}
static void load_GL_ATI_vertex_attrib_array_object(CPPGLloadproc load) {
	if(!CPPGL_GL_ATI_vertex_attrib_array_object) return;
	cppgl_glVertexAttribArrayObjectATI = (PFNGLVERTEXATTRIBARRAYOBJECTATIPROC)load("glVertexAttribArrayObjectATI");
	cppgl_glGetVertexAttribArrayObjectfvATI = (PFNGLGETVERTEXATTRIBARRAYOBJECTFVATIPROC)load("glGetVertexAttribArrayObjectfvATI");
	cppgl_glGetVertexAttribArrayObjectivATI = (PFNGLGETVERTEXATTRIBARRAYOBJECTIVATIPROC)load("glGetVertexAttribArrayObjectivATI");
}
static void load_GL_ATI_vertex_streams(CPPGLloadproc load) {
	if(!CPPGL_GL_ATI_vertex_streams) return;
	cppgl_glVertexStream1sATI = (PFNGLVERTEXSTREAM1SATIPROC)load("glVertexStream1sATI");
	cppgl_glVertexStream1svATI = (PFNGLVERTEXSTREAM1SVATIPROC)load("glVertexStream1svATI");
	cppgl_glVertexStream1iATI = (PFNGLVERTEXSTREAM1IATIPROC)load("glVertexStream1iATI");
	cppgl_glVertexStream1ivATI = (PFNGLVERTEXSTREAM1IVATIPROC)load("glVertexStream1ivATI");
	cppgl_glVertexStream1fATI = (PFNGLVERTEXSTREAM1FATIPROC)load("glVertexStream1fATI");
	cppgl_glVertexStream1fvATI = (PFNGLVERTEXSTREAM1FVATIPROC)load("glVertexStream1fvATI");
	cppgl_glVertexStream1dATI = (PFNGLVERTEXSTREAM1DATIPROC)load("glVertexStream1dATI");
	cppgl_glVertexStream1dvATI = (PFNGLVERTEXSTREAM1DVATIPROC)load("glVertexStream1dvATI");
	cppgl_glVertexStream2sATI = (PFNGLVERTEXSTREAM2SATIPROC)load("glVertexStream2sATI");
	cppgl_glVertexStream2svATI = (PFNGLVERTEXSTREAM2SVATIPROC)load("glVertexStream2svATI");
	cppgl_glVertexStream2iATI = (PFNGLVERTEXSTREAM2IATIPROC)load("glVertexStream2iATI");
	cppgl_glVertexStream2ivATI = (PFNGLVERTEXSTREAM2IVATIPROC)load("glVertexStream2ivATI");
	cppgl_glVertexStream2fATI = (PFNGLVERTEXSTREAM2FATIPROC)load("glVertexStream2fATI");
	cppgl_glVertexStream2fvATI = (PFNGLVERTEXSTREAM2FVATIPROC)load("glVertexStream2fvATI");
	cppgl_glVertexStream2dATI = (PFNGLVERTEXSTREAM2DATIPROC)load("glVertexStream2dATI");
	cppgl_glVertexStream2dvATI = (PFNGLVERTEXSTREAM2DVATIPROC)load("glVertexStream2dvATI");
	cppgl_glVertexStream3sATI = (PFNGLVERTEXSTREAM3SATIPROC)load("glVertexStream3sATI");
	cppgl_glVertexStream3svATI = (PFNGLVERTEXSTREAM3SVATIPROC)load("glVertexStream3svATI");
	cppgl_glVertexStream3iATI = (PFNGLVERTEXSTREAM3IATIPROC)load("glVertexStream3iATI");
	cppgl_glVertexStream3ivATI = (PFNGLVERTEXSTREAM3IVATIPROC)load("glVertexStream3ivATI");
	cppgl_glVertexStream3fATI = (PFNGLVERTEXSTREAM3FATIPROC)load("glVertexStream3fATI");
	cppgl_glVertexStream3fvATI = (PFNGLVERTEXSTREAM3FVATIPROC)load("glVertexStream3fvATI");
	cppgl_glVertexStream3dATI = (PFNGLVERTEXSTREAM3DATIPROC)load("glVertexStream3dATI");
	cppgl_glVertexStream3dvATI = (PFNGLVERTEXSTREAM3DVATIPROC)load("glVertexStream3dvATI");
	cppgl_glVertexStream4sATI = (PFNGLVERTEXSTREAM4SATIPROC)load("glVertexStream4sATI");
	cppgl_glVertexStream4svATI = (PFNGLVERTEXSTREAM4SVATIPROC)load("glVertexStream4svATI");
	cppgl_glVertexStream4iATI = (PFNGLVERTEXSTREAM4IATIPROC)load("glVertexStream4iATI");
	cppgl_glVertexStream4ivATI = (PFNGLVERTEXSTREAM4IVATIPROC)load("glVertexStream4ivATI");
	cppgl_glVertexStream4fATI = (PFNGLVERTEXSTREAM4FATIPROC)load("glVertexStream4fATI");
	cppgl_glVertexStream4fvATI = (PFNGLVERTEXSTREAM4FVATIPROC)load("glVertexStream4fvATI");
	cppgl_glVertexStream4dATI = (PFNGLVERTEXSTREAM4DATIPROC)load("glVertexStream4dATI");
	cppgl_glVertexStream4dvATI = (PFNGLVERTEXSTREAM4DVATIPROC)load("glVertexStream4dvATI");
	cppgl_glNormalStream3bATI = (PFNGLNORMALSTREAM3BATIPROC)load("glNormalStream3bATI");
	cppgl_glNormalStream3bvATI = (PFNGLNORMALSTREAM3BVATIPROC)load("glNormalStream3bvATI");
	cppgl_glNormalStream3sATI = (PFNGLNORMALSTREAM3SATIPROC)load("glNormalStream3sATI");
	cppgl_glNormalStream3svATI = (PFNGLNORMALSTREAM3SVATIPROC)load("glNormalStream3svATI");
	cppgl_glNormalStream3iATI = (PFNGLNORMALSTREAM3IATIPROC)load("glNormalStream3iATI");
	cppgl_glNormalStream3ivATI = (PFNGLNORMALSTREAM3IVATIPROC)load("glNormalStream3ivATI");
	cppgl_glNormalStream3fATI = (PFNGLNORMALSTREAM3FATIPROC)load("glNormalStream3fATI");
	cppgl_glNormalStream3fvATI = (PFNGLNORMALSTREAM3FVATIPROC)load("glNormalStream3fvATI");
	cppgl_glNormalStream3dATI = (PFNGLNORMALSTREAM3DATIPROC)load("glNormalStream3dATI");
	cppgl_glNormalStream3dvATI = (PFNGLNORMALSTREAM3DVATIPROC)load("glNormalStream3dvATI");
	cppgl_glClientActiveVertexStreamATI = (PFNGLCLIENTACTIVEVERTEXSTREAMATIPROC)load("glClientActiveVertexStreamATI");
	cppgl_glVertexBlendEnviATI = (PFNGLVERTEXBLENDENVIATIPROC)load("glVertexBlendEnviATI");
	cppgl_glVertexBlendEnvfATI = (PFNGLVERTEXBLENDENVFATIPROC)load("glVertexBlendEnvfATI");
}
static void load_GL_EXT_bindable_uniform(CPPGLloadproc load) {
	if(!CPPGL_GL_EXT_bindable_uniform) return;
	cppgl_glUniformBufferEXT = (PFNGLUNIFORMBUFFEREXTPROC)load("glUniformBufferEXT");
	cppgl_glGetUniformBufferSizeEXT = (PFNGLGETUNIFORMBUFFERSIZEEXTPROC)load("glGetUniformBufferSizeEXT");
	cppgl_glGetUniformOffsetEXT = (PFNGLGETUNIFORMOFFSETEXTPROC)load("glGetUniformOffsetEXT");
}
static void load_GL_EXT_blend_color(CPPGLloadproc load) {
	if(!CPPGL_GL_EXT_blend_color) return;
	cppgl_glBlendColorEXT = (PFNGLBLENDCOLOREXTPROC)load("glBlendColorEXT");
}
static void load_GL_EXT_blend_equation_separate(CPPGLloadproc load) {
	if(!CPPGL_GL_EXT_blend_equation_separate) return;
	cppgl_glBlendEquationSeparateEXT = (PFNGLBLENDEQUATIONSEPARATEEXTPROC)load("glBlendEquationSeparateEXT");
}
static void load_GL_EXT_blend_func_separate(CPPGLloadproc load) {
	if(!CPPGL_GL_EXT_blend_func_separate) return;
	cppgl_glBlendFuncSeparateEXT = (PFNGLBLENDFUNCSEPARATEEXTPROC)load("glBlendFuncSeparateEXT");
}
static void load_GL_EXT_blend_minmax(CPPGLloadproc load) {
	if(!CPPGL_GL_EXT_blend_minmax) return;
	cppgl_glBlendEquationEXT = (PFNGLBLENDEQUATIONEXTPROC)load("glBlendEquationEXT");
}
static void load_GL_EXT_color_subtable(CPPGLloadproc load) {
	if(!CPPGL_GL_EXT_color_subtable) return;
	cppgl_glColorSubTableEXT = (PFNGLCOLORSUBTABLEEXTPROC)load("glColorSubTableEXT");
	cppgl_glCopyColorSubTableEXT = (PFNGLCOPYCOLORSUBTABLEEXTPROC)load("glCopyColorSubTableEXT");
}
static void load_GL_EXT_compiled_vertex_array(CPPGLloadproc load) {
	if(!CPPGL_GL_EXT_compiled_vertex_array) return;
	cppgl_glLockArraysEXT = (PFNGLLOCKARRAYSEXTPROC)load("glLockArraysEXT");
	cppgl_glUnlockArraysEXT = (PFNGLUNLOCKARRAYSEXTPROC)load("glUnlockArraysEXT");
}
static void load_GL_EXT_convolution(CPPGLloadproc load) {
	if(!CPPGL_GL_EXT_convolution) return;
	cppgl_glConvolutionFilter1DEXT = (PFNGLCONVOLUTIONFILTER1DEXTPROC)load("glConvolutionFilter1DEXT");
	cppgl_glConvolutionFilter2DEXT = (PFNGLCONVOLUTIONFILTER2DEXTPROC)load("glConvolutionFilter2DEXT");
	cppgl_glConvolutionParameterfEXT = (PFNGLCONVOLUTIONPARAMETERFEXTPROC)load("glConvolutionParameterfEXT");
	cppgl_glConvolutionParameterfvEXT = (PFNGLCONVOLUTIONPARAMETERFVEXTPROC)load("glConvolutionParameterfvEXT");
	cppgl_glConvolutionParameteriEXT = (PFNGLCONVOLUTIONPARAMETERIEXTPROC)load("glConvolutionParameteriEXT");
	cppgl_glConvolutionParameterivEXT = (PFNGLCONVOLUTIONPARAMETERIVEXTPROC)load("glConvolutionParameterivEXT");
	cppgl_glCopyConvolutionFilter1DEXT = (PFNGLCOPYCONVOLUTIONFILTER1DEXTPROC)load("glCopyConvolutionFilter1DEXT");
	cppgl_glCopyConvolutionFilter2DEXT = (PFNGLCOPYCONVOLUTIONFILTER2DEXTPROC)load("glCopyConvolutionFilter2DEXT");
	cppgl_glGetConvolutionFilterEXT = (PFNGLGETCONVOLUTIONFILTEREXTPROC)load("glGetConvolutionFilterEXT");
	cppgl_glGetConvolutionParameterfvEXT = (PFNGLGETCONVOLUTIONPARAMETERFVEXTPROC)load("glGetConvolutionParameterfvEXT");
	cppgl_glGetConvolutionParameterivEXT = (PFNGLGETCONVOLUTIONPARAMETERIVEXTPROC)load("glGetConvolutionParameterivEXT");
	cppgl_glGetSeparableFilterEXT = (PFNGLGETSEPARABLEFILTEREXTPROC)load("glGetSeparableFilterEXT");
	cppgl_glSeparableFilter2DEXT = (PFNGLSEPARABLEFILTER2DEXTPROC)load("glSeparableFilter2DEXT");
}
static void load_GL_EXT_coordinate_frame(CPPGLloadproc load) {
	if(!CPPGL_GL_EXT_coordinate_frame) return;
	cppgl_glTangent3bEXT = (PFNGLTANGENT3BEXTPROC)load("glTangent3bEXT");
	cppgl_glTangent3bvEXT = (PFNGLTANGENT3BVEXTPROC)load("glTangent3bvEXT");
	cppgl_glTangent3dEXT = (PFNGLTANGENT3DEXTPROC)load("glTangent3dEXT");
	cppgl_glTangent3dvEXT = (PFNGLTANGENT3DVEXTPROC)load("glTangent3dvEXT");
	cppgl_glTangent3fEXT = (PFNGLTANGENT3FEXTPROC)load("glTangent3fEXT");
	cppgl_glTangent3fvEXT = (PFNGLTANGENT3FVEXTPROC)load("glTangent3fvEXT");
	cppgl_glTangent3iEXT = (PFNGLTANGENT3IEXTPROC)load("glTangent3iEXT");
	cppgl_glTangent3ivEXT = (PFNGLTANGENT3IVEXTPROC)load("glTangent3ivEXT");
	cppgl_glTangent3sEXT = (PFNGLTANGENT3SEXTPROC)load("glTangent3sEXT");
	cppgl_glTangent3svEXT = (PFNGLTANGENT3SVEXTPROC)load("glTangent3svEXT");
	cppgl_glBinormal3bEXT = (PFNGLBINORMAL3BEXTPROC)load("glBinormal3bEXT");
	cppgl_glBinormal3bvEXT = (PFNGLBINORMAL3BVEXTPROC)load("glBinormal3bvEXT");
	cppgl_glBinormal3dEXT = (PFNGLBINORMAL3DEXTPROC)load("glBinormal3dEXT");
	cppgl_glBinormal3dvEXT = (PFNGLBINORMAL3DVEXTPROC)load("glBinormal3dvEXT");
	cppgl_glBinormal3fEXT = (PFNGLBINORMAL3FEXTPROC)load("glBinormal3fEXT");
	cppgl_glBinormal3fvEXT = (PFNGLBINORMAL3FVEXTPROC)load("glBinormal3fvEXT");
	cppgl_glBinormal3iEXT = (PFNGLBINORMAL3IEXTPROC)load("glBinormal3iEXT");
	cppgl_glBinormal3ivEXT = (PFNGLBINORMAL3IVEXTPROC)load("glBinormal3ivEXT");
	cppgl_glBinormal3sEXT = (PFNGLBINORMAL3SEXTPROC)load("glBinormal3sEXT");
	cppgl_glBinormal3svEXT = (PFNGLBINORMAL3SVEXTPROC)load("glBinormal3svEXT");
	cppgl_glTangentPointerEXT = (PFNGLTANGENTPOINTEREXTPROC)load("glTangentPointerEXT");
	cppgl_glBinormalPointerEXT = (PFNGLBINORMALPOINTEREXTPROC)load("glBinormalPointerEXT");
}
static void load_GL_EXT_copy_texture(CPPGLloadproc load) {
	if(!CPPGL_GL_EXT_copy_texture) return;
	cppgl_glCopyTexImage1DEXT = (PFNGLCOPYTEXIMAGE1DEXTPROC)load("glCopyTexImage1DEXT");
	cppgl_glCopyTexImage2DEXT = (PFNGLCOPYTEXIMAGE2DEXTPROC)load("glCopyTexImage2DEXT");
	cppgl_glCopyTexSubImage1DEXT = (PFNGLCOPYTEXSUBIMAGE1DEXTPROC)load("glCopyTexSubImage1DEXT");
	cppgl_glCopyTexSubImage2DEXT = (PFNGLCOPYTEXSUBIMAGE2DEXTPROC)load("glCopyTexSubImage2DEXT");
	cppgl_glCopyTexSubImage3DEXT = (PFNGLCOPYTEXSUBIMAGE3DEXTPROC)load("glCopyTexSubImage3DEXT");
}
static void load_GL_EXT_cull_vertex(CPPGLloadproc load) {
	if(!CPPGL_GL_EXT_cull_vertex) return;
	cppgl_glCullParameterdvEXT = (PFNGLCULLPARAMETERDVEXTPROC)load("glCullParameterdvEXT");
	cppgl_glCullParameterfvEXT = (PFNGLCULLPARAMETERFVEXTPROC)load("glCullParameterfvEXT");
}
static void load_GL_EXT_debug_label(CPPGLloadproc load) {
	if(!CPPGL_GL_EXT_debug_label) return;
	cppgl_glLabelObjectEXT = (PFNGLLABELOBJECTEXTPROC)load("glLabelObjectEXT");
	cppgl_glGetObjectLabelEXT = (PFNGLGETOBJECTLABELEXTPROC)load("glGetObjectLabelEXT");
}
static void load_GL_EXT_debug_marker(CPPGLloadproc load) {
	if(!CPPGL_GL_EXT_debug_marker) return;
	cppgl_glInsertEventMarkerEXT = (PFNGLINSERTEVENTMARKEREXTPROC)load("glInsertEventMarkerEXT");
	cppgl_glPushGroupMarkerEXT = (PFNGLPUSHGROUPMARKEREXTPROC)load("glPushGroupMarkerEXT");
	cppgl_glPopGroupMarkerEXT = (PFNGLPOPGROUPMARKEREXTPROC)load("glPopGroupMarkerEXT");
}
static void load_GL_EXT_depth_bounds_test(CPPGLloadproc load) {
	if(!CPPGL_GL_EXT_depth_bounds_test) return;
	cppgl_glDepthBoundsEXT = (PFNGLDEPTHBOUNDSEXTPROC)load("glDepthBoundsEXT");
}
static void load_GL_EXT_direct_state_access(CPPGLloadproc load) {
	if(!CPPGL_GL_EXT_direct_state_access) return;
	cppgl_glMatrixLoadfEXT = (PFNGLMATRIXLOADFEXTPROC)load("glMatrixLoadfEXT");
	cppgl_glMatrixLoaddEXT = (PFNGLMATRIXLOADDEXTPROC)load("glMatrixLoaddEXT");
	cppgl_glMatrixMultfEXT = (PFNGLMATRIXMULTFEXTPROC)load("glMatrixMultfEXT");
	cppgl_glMatrixMultdEXT = (PFNGLMATRIXMULTDEXTPROC)load("glMatrixMultdEXT");
	cppgl_glMatrixLoadIdentityEXT = (PFNGLMATRIXLOADIDENTITYEXTPROC)load("glMatrixLoadIdentityEXT");
	cppgl_glMatrixRotatefEXT = (PFNGLMATRIXROTATEFEXTPROC)load("glMatrixRotatefEXT");
	cppgl_glMatrixRotatedEXT = (PFNGLMATRIXROTATEDEXTPROC)load("glMatrixRotatedEXT");
	cppgl_glMatrixScalefEXT = (PFNGLMATRIXSCALEFEXTPROC)load("glMatrixScalefEXT");
	cppgl_glMatrixScaledEXT = (PFNGLMATRIXSCALEDEXTPROC)load("glMatrixScaledEXT");
	cppgl_glMatrixTranslatefEXT = (PFNGLMATRIXTRANSLATEFEXTPROC)load("glMatrixTranslatefEXT");
	cppgl_glMatrixTranslatedEXT = (PFNGLMATRIXTRANSLATEDEXTPROC)load("glMatrixTranslatedEXT");
	cppgl_glMatrixFrustumEXT = (PFNGLMATRIXFRUSTUMEXTPROC)load("glMatrixFrustumEXT");
	cppgl_glMatrixOrthoEXT = (PFNGLMATRIXORTHOEXTPROC)load("glMatrixOrthoEXT");
	cppgl_glMatrixPopEXT = (PFNGLMATRIXPOPEXTPROC)load("glMatrixPopEXT");
	cppgl_glMatrixPushEXT = (PFNGLMATRIXPUSHEXTPROC)load("glMatrixPushEXT");
	cppgl_glClientAttribDefaultEXT = (PFNGLCLIENTATTRIBDEFAULTEXTPROC)load("glClientAttribDefaultEXT");
	cppgl_glPushClientAttribDefaultEXT = (PFNGLPUSHCLIENTATTRIBDEFAULTEXTPROC)load("glPushClientAttribDefaultEXT");
	cppgl_glTextureParameterfEXT = (PFNGLTEXTUREPARAMETERFEXTPROC)load("glTextureParameterfEXT");
	cppgl_glTextureParameterfvEXT = (PFNGLTEXTUREPARAMETERFVEXTPROC)load("glTextureParameterfvEXT");
	cppgl_glTextureParameteriEXT = (PFNGLTEXTUREPARAMETERIEXTPROC)load("glTextureParameteriEXT");
	cppgl_glTextureParameterivEXT = (PFNGLTEXTUREPARAMETERIVEXTPROC)load("glTextureParameterivEXT");
	cppgl_glTextureImage1DEXT = (PFNGLTEXTUREIMAGE1DEXTPROC)load("glTextureImage1DEXT");
	cppgl_glTextureImage2DEXT = (PFNGLTEXTUREIMAGE2DEXTPROC)load("glTextureImage2DEXT");
	cppgl_glTextureSubImage1DEXT = (PFNGLTEXTURESUBIMAGE1DEXTPROC)load("glTextureSubImage1DEXT");
	cppgl_glTextureSubImage2DEXT = (PFNGLTEXTURESUBIMAGE2DEXTPROC)load("glTextureSubImage2DEXT");
	cppgl_glCopyTextureImage1DEXT = (PFNGLCOPYTEXTUREIMAGE1DEXTPROC)load("glCopyTextureImage1DEXT");
	cppgl_glCopyTextureImage2DEXT = (PFNGLCOPYTEXTUREIMAGE2DEXTPROC)load("glCopyTextureImage2DEXT");
	cppgl_glCopyTextureSubImage1DEXT = (PFNGLCOPYTEXTURESUBIMAGE1DEXTPROC)load("glCopyTextureSubImage1DEXT");
	cppgl_glCopyTextureSubImage2DEXT = (PFNGLCOPYTEXTURESUBIMAGE2DEXTPROC)load("glCopyTextureSubImage2DEXT");
	cppgl_glGetTextureImageEXT = (PFNGLGETTEXTUREIMAGEEXTPROC)load("glGetTextureImageEXT");
	cppgl_glGetTextureParameterfvEXT = (PFNGLGETTEXTUREPARAMETERFVEXTPROC)load("glGetTextureParameterfvEXT");
	cppgl_glGetTextureParameterivEXT = (PFNGLGETTEXTUREPARAMETERIVEXTPROC)load("glGetTextureParameterivEXT");
	cppgl_glGetTextureLevelParameterfvEXT = (PFNGLGETTEXTURELEVELPARAMETERFVEXTPROC)load("glGetTextureLevelParameterfvEXT");
	cppgl_glGetTextureLevelParameterivEXT = (PFNGLGETTEXTURELEVELPARAMETERIVEXTPROC)load("glGetTextureLevelParameterivEXT");
	cppgl_glTextureImage3DEXT = (PFNGLTEXTUREIMAGE3DEXTPROC)load("glTextureImage3DEXT");
	cppgl_glTextureSubImage3DEXT = (PFNGLTEXTURESUBIMAGE3DEXTPROC)load("glTextureSubImage3DEXT");
	cppgl_glCopyTextureSubImage3DEXT = (PFNGLCOPYTEXTURESUBIMAGE3DEXTPROC)load("glCopyTextureSubImage3DEXT");
	cppgl_glBindMultiTextureEXT = (PFNGLBINDMULTITEXTUREEXTPROC)load("glBindMultiTextureEXT");
	cppgl_glMultiTexCoordPointerEXT = (PFNGLMULTITEXCOORDPOINTEREXTPROC)load("glMultiTexCoordPointerEXT");
	cppgl_glMultiTexEnvfEXT = (PFNGLMULTITEXENVFEXTPROC)load("glMultiTexEnvfEXT");
	cppgl_glMultiTexEnvfvEXT = (PFNGLMULTITEXENVFVEXTPROC)load("glMultiTexEnvfvEXT");
	cppgl_glMultiTexEnviEXT = (PFNGLMULTITEXENVIEXTPROC)load("glMultiTexEnviEXT");
	cppgl_glMultiTexEnvivEXT = (PFNGLMULTITEXENVIVEXTPROC)load("glMultiTexEnvivEXT");
	cppgl_glMultiTexGendEXT = (PFNGLMULTITEXGENDEXTPROC)load("glMultiTexGendEXT");
	cppgl_glMultiTexGendvEXT = (PFNGLMULTITEXGENDVEXTPROC)load("glMultiTexGendvEXT");
	cppgl_glMultiTexGenfEXT = (PFNGLMULTITEXGENFEXTPROC)load("glMultiTexGenfEXT");
	cppgl_glMultiTexGenfvEXT = (PFNGLMULTITEXGENFVEXTPROC)load("glMultiTexGenfvEXT");
	cppgl_glMultiTexGeniEXT = (PFNGLMULTITEXGENIEXTPROC)load("glMultiTexGeniEXT");
	cppgl_glMultiTexGenivEXT = (PFNGLMULTITEXGENIVEXTPROC)load("glMultiTexGenivEXT");
	cppgl_glGetMultiTexEnvfvEXT = (PFNGLGETMULTITEXENVFVEXTPROC)load("glGetMultiTexEnvfvEXT");
	cppgl_glGetMultiTexEnvivEXT = (PFNGLGETMULTITEXENVIVEXTPROC)load("glGetMultiTexEnvivEXT");
	cppgl_glGetMultiTexGendvEXT = (PFNGLGETMULTITEXGENDVEXTPROC)load("glGetMultiTexGendvEXT");
	cppgl_glGetMultiTexGenfvEXT = (PFNGLGETMULTITEXGENFVEXTPROC)load("glGetMultiTexGenfvEXT");
	cppgl_glGetMultiTexGenivEXT = (PFNGLGETMULTITEXGENIVEXTPROC)load("glGetMultiTexGenivEXT");
	cppgl_glMultiTexParameteriEXT = (PFNGLMULTITEXPARAMETERIEXTPROC)load("glMultiTexParameteriEXT");
	cppgl_glMultiTexParameterivEXT = (PFNGLMULTITEXPARAMETERIVEXTPROC)load("glMultiTexParameterivEXT");
	cppgl_glMultiTexParameterfEXT = (PFNGLMULTITEXPARAMETERFEXTPROC)load("glMultiTexParameterfEXT");
	cppgl_glMultiTexParameterfvEXT = (PFNGLMULTITEXPARAMETERFVEXTPROC)load("glMultiTexParameterfvEXT");
	cppgl_glMultiTexImage1DEXT = (PFNGLMULTITEXIMAGE1DEXTPROC)load("glMultiTexImage1DEXT");
	cppgl_glMultiTexImage2DEXT = (PFNGLMULTITEXIMAGE2DEXTPROC)load("glMultiTexImage2DEXT");
	cppgl_glMultiTexSubImage1DEXT = (PFNGLMULTITEXSUBIMAGE1DEXTPROC)load("glMultiTexSubImage1DEXT");
	cppgl_glMultiTexSubImage2DEXT = (PFNGLMULTITEXSUBIMAGE2DEXTPROC)load("glMultiTexSubImage2DEXT");
	cppgl_glCopyMultiTexImage1DEXT = (PFNGLCOPYMULTITEXIMAGE1DEXTPROC)load("glCopyMultiTexImage1DEXT");
	cppgl_glCopyMultiTexImage2DEXT = (PFNGLCOPYMULTITEXIMAGE2DEXTPROC)load("glCopyMultiTexImage2DEXT");
	cppgl_glCopyMultiTexSubImage1DEXT = (PFNGLCOPYMULTITEXSUBIMAGE1DEXTPROC)load("glCopyMultiTexSubImage1DEXT");
	cppgl_glCopyMultiTexSubImage2DEXT = (PFNGLCOPYMULTITEXSUBIMAGE2DEXTPROC)load("glCopyMultiTexSubImage2DEXT");
	cppgl_glGetMultiTexImageEXT = (PFNGLGETMULTITEXIMAGEEXTPROC)load("glGetMultiTexImageEXT");
	cppgl_glGetMultiTexParameterfvEXT = (PFNGLGETMULTITEXPARAMETERFVEXTPROC)load("glGetMultiTexParameterfvEXT");
	cppgl_glGetMultiTexParameterivEXT = (PFNGLGETMULTITEXPARAMETERIVEXTPROC)load("glGetMultiTexParameterivEXT");
	cppgl_glGetMultiTexLevelParameterfvEXT = (PFNGLGETMULTITEXLEVELPARAMETERFVEXTPROC)load("glGetMultiTexLevelParameterfvEXT");
	cppgl_glGetMultiTexLevelParameterivEXT = (PFNGLGETMULTITEXLEVELPARAMETERIVEXTPROC)load("glGetMultiTexLevelParameterivEXT");
	cppgl_glMultiTexImage3DEXT = (PFNGLMULTITEXIMAGE3DEXTPROC)load("glMultiTexImage3DEXT");
	cppgl_glMultiTexSubImage3DEXT = (PFNGLMULTITEXSUBIMAGE3DEXTPROC)load("glMultiTexSubImage3DEXT");
	cppgl_glCopyMultiTexSubImage3DEXT = (PFNGLCOPYMULTITEXSUBIMAGE3DEXTPROC)load("glCopyMultiTexSubImage3DEXT");
	cppgl_glEnableClientStateIndexedEXT = (PFNGLENABLECLIENTSTATEINDEXEDEXTPROC)load("glEnableClientStateIndexedEXT");
	cppgl_glDisableClientStateIndexedEXT = (PFNGLDISABLECLIENTSTATEINDEXEDEXTPROC)load("glDisableClientStateIndexedEXT");
	cppgl_glGetFloatIndexedvEXT = (PFNGLGETFLOATINDEXEDVEXTPROC)load("glGetFloatIndexedvEXT");
	cppgl_glGetDoubleIndexedvEXT = (PFNGLGETDOUBLEINDEXEDVEXTPROC)load("glGetDoubleIndexedvEXT");
	cppgl_glGetPointerIndexedvEXT = (PFNGLGETPOINTERINDEXEDVEXTPROC)load("glGetPointerIndexedvEXT");
	cppgl_glEnableIndexedEXT = (PFNGLENABLEINDEXEDEXTPROC)load("glEnableIndexedEXT");
	cppgl_glDisableIndexedEXT = (PFNGLDISABLEINDEXEDEXTPROC)load("glDisableIndexedEXT");
	cppgl_glIsEnabledIndexedEXT = (PFNGLISENABLEDINDEXEDEXTPROC)load("glIsEnabledIndexedEXT");
	cppgl_glGetIntegerIndexedvEXT = (PFNGLGETINTEGERINDEXEDVEXTPROC)load("glGetIntegerIndexedvEXT");
	cppgl_glGetBooleanIndexedvEXT = (PFNGLGETBOOLEANINDEXEDVEXTPROC)load("glGetBooleanIndexedvEXT");
	cppgl_glCompressedTextureImage3DEXT = (PFNGLCOMPRESSEDTEXTUREIMAGE3DEXTPROC)load("glCompressedTextureImage3DEXT");
	cppgl_glCompressedTextureImage2DEXT = (PFNGLCOMPRESSEDTEXTUREIMAGE2DEXTPROC)load("glCompressedTextureImage2DEXT");
	cppgl_glCompressedTextureImage1DEXT = (PFNGLCOMPRESSEDTEXTUREIMAGE1DEXTPROC)load("glCompressedTextureImage1DEXT");
	cppgl_glCompressedTextureSubImage3DEXT = (PFNGLCOMPRESSEDTEXTURESUBIMAGE3DEXTPROC)load("glCompressedTextureSubImage3DEXT");
	cppgl_glCompressedTextureSubImage2DEXT = (PFNGLCOMPRESSEDTEXTURESUBIMAGE2DEXTPROC)load("glCompressedTextureSubImage2DEXT");
	cppgl_glCompressedTextureSubImage1DEXT = (PFNGLCOMPRESSEDTEXTURESUBIMAGE1DEXTPROC)load("glCompressedTextureSubImage1DEXT");
	cppgl_glGetCompressedTextureImageEXT = (PFNGLGETCOMPRESSEDTEXTUREIMAGEEXTPROC)load("glGetCompressedTextureImageEXT");
	cppgl_glCompressedMultiTexImage3DEXT = (PFNGLCOMPRESSEDMULTITEXIMAGE3DEXTPROC)load("glCompressedMultiTexImage3DEXT");
	cppgl_glCompressedMultiTexImage2DEXT = (PFNGLCOMPRESSEDMULTITEXIMAGE2DEXTPROC)load("glCompressedMultiTexImage2DEXT");
	cppgl_glCompressedMultiTexImage1DEXT = (PFNGLCOMPRESSEDMULTITEXIMAGE1DEXTPROC)load("glCompressedMultiTexImage1DEXT");
	cppgl_glCompressedMultiTexSubImage3DEXT = (PFNGLCOMPRESSEDMULTITEXSUBIMAGE3DEXTPROC)load("glCompressedMultiTexSubImage3DEXT");
	cppgl_glCompressedMultiTexSubImage2DEXT = (PFNGLCOMPRESSEDMULTITEXSUBIMAGE2DEXTPROC)load("glCompressedMultiTexSubImage2DEXT");
	cppgl_glCompressedMultiTexSubImage1DEXT = (PFNGLCOMPRESSEDMULTITEXSUBIMAGE1DEXTPROC)load("glCompressedMultiTexSubImage1DEXT");
	cppgl_glGetCompressedMultiTexImageEXT = (PFNGLGETCOMPRESSEDMULTITEXIMAGEEXTPROC)load("glGetCompressedMultiTexImageEXT");
	cppgl_glMatrixLoadTransposefEXT = (PFNGLMATRIXLOADTRANSPOSEFEXTPROC)load("glMatrixLoadTransposefEXT");
	cppgl_glMatrixLoadTransposedEXT = (PFNGLMATRIXLOADTRANSPOSEDEXTPROC)load("glMatrixLoadTransposedEXT");
	cppgl_glMatrixMultTransposefEXT = (PFNGLMATRIXMULTTRANSPOSEFEXTPROC)load("glMatrixMultTransposefEXT");
	cppgl_glMatrixMultTransposedEXT = (PFNGLMATRIXMULTTRANSPOSEDEXTPROC)load("glMatrixMultTransposedEXT");
	cppgl_glNamedBufferDataEXT = (PFNGLNAMEDBUFFERDATAEXTPROC)load("glNamedBufferDataEXT");
	cppgl_glNamedBufferSubDataEXT = (PFNGLNAMEDBUFFERSUBDATAEXTPROC)load("glNamedBufferSubDataEXT");
	cppgl_glMapNamedBufferEXT = (PFNGLMAPNAMEDBUFFEREXTPROC)load("glMapNamedBufferEXT");
	cppgl_glUnmapNamedBufferEXT = (PFNGLUNMAPNAMEDBUFFEREXTPROC)load("glUnmapNamedBufferEXT");
	cppgl_glGetNamedBufferParameterivEXT = (PFNGLGETNAMEDBUFFERPARAMETERIVEXTPROC)load("glGetNamedBufferParameterivEXT");
	cppgl_glGetNamedBufferPointervEXT = (PFNGLGETNAMEDBUFFERPOINTERVEXTPROC)load("glGetNamedBufferPointervEXT");
	cppgl_glGetNamedBufferSubDataEXT = (PFNGLGETNAMEDBUFFERSUBDATAEXTPROC)load("glGetNamedBufferSubDataEXT");
	cppgl_glProgramUniform1fEXT = (PFNGLPROGRAMUNIFORM1FEXTPROC)load("glProgramUniform1fEXT");
	cppgl_glProgramUniform2fEXT = (PFNGLPROGRAMUNIFORM2FEXTPROC)load("glProgramUniform2fEXT");
	cppgl_glProgramUniform3fEXT = (PFNGLPROGRAMUNIFORM3FEXTPROC)load("glProgramUniform3fEXT");
	cppgl_glProgramUniform4fEXT = (PFNGLPROGRAMUNIFORM4FEXTPROC)load("glProgramUniform4fEXT");
	cppgl_glProgramUniform1iEXT = (PFNGLPROGRAMUNIFORM1IEXTPROC)load("glProgramUniform1iEXT");
	cppgl_glProgramUniform2iEXT = (PFNGLPROGRAMUNIFORM2IEXTPROC)load("glProgramUniform2iEXT");
	cppgl_glProgramUniform3iEXT = (PFNGLPROGRAMUNIFORM3IEXTPROC)load("glProgramUniform3iEXT");
	cppgl_glProgramUniform4iEXT = (PFNGLPROGRAMUNIFORM4IEXTPROC)load("glProgramUniform4iEXT");
	cppgl_glProgramUniform1fvEXT = (PFNGLPROGRAMUNIFORM1FVEXTPROC)load("glProgramUniform1fvEXT");
	cppgl_glProgramUniform2fvEXT = (PFNGLPROGRAMUNIFORM2FVEXTPROC)load("glProgramUniform2fvEXT");
	cppgl_glProgramUniform3fvEXT = (PFNGLPROGRAMUNIFORM3FVEXTPROC)load("glProgramUniform3fvEXT");
	cppgl_glProgramUniform4fvEXT = (PFNGLPROGRAMUNIFORM4FVEXTPROC)load("glProgramUniform4fvEXT");
	cppgl_glProgramUniform1ivEXT = (PFNGLPROGRAMUNIFORM1IVEXTPROC)load("glProgramUniform1ivEXT");
	cppgl_glProgramUniform2ivEXT = (PFNGLPROGRAMUNIFORM2IVEXTPROC)load("glProgramUniform2ivEXT");
	cppgl_glProgramUniform3ivEXT = (PFNGLPROGRAMUNIFORM3IVEXTPROC)load("glProgramUniform3ivEXT");
	cppgl_glProgramUniform4ivEXT = (PFNGLPROGRAMUNIFORM4IVEXTPROC)load("glProgramUniform4ivEXT");
	cppgl_glProgramUniformMatrix2fvEXT = (PFNGLPROGRAMUNIFORMMATRIX2FVEXTPROC)load("glProgramUniformMatrix2fvEXT");
	cppgl_glProgramUniformMatrix3fvEXT = (PFNGLPROGRAMUNIFORMMATRIX3FVEXTPROC)load("glProgramUniformMatrix3fvEXT");
	cppgl_glProgramUniformMatrix4fvEXT = (PFNGLPROGRAMUNIFORMMATRIX4FVEXTPROC)load("glProgramUniformMatrix4fvEXT");
	cppgl_glProgramUniformMatrix2x3fvEXT = (PFNGLPROGRAMUNIFORMMATRIX2X3FVEXTPROC)load("glProgramUniformMatrix2x3fvEXT");
	cppgl_glProgramUniformMatrix3x2fvEXT = (PFNGLPROGRAMUNIFORMMATRIX3X2FVEXTPROC)load("glProgramUniformMatrix3x2fvEXT");
	cppgl_glProgramUniformMatrix2x4fvEXT = (PFNGLPROGRAMUNIFORMMATRIX2X4FVEXTPROC)load("glProgramUniformMatrix2x4fvEXT");
	cppgl_glProgramUniformMatrix4x2fvEXT = (PFNGLPROGRAMUNIFORMMATRIX4X2FVEXTPROC)load("glProgramUniformMatrix4x2fvEXT");
	cppgl_glProgramUniformMatrix3x4fvEXT = (PFNGLPROGRAMUNIFORMMATRIX3X4FVEXTPROC)load("glProgramUniformMatrix3x4fvEXT");
	cppgl_glProgramUniformMatrix4x3fvEXT = (PFNGLPROGRAMUNIFORMMATRIX4X3FVEXTPROC)load("glProgramUniformMatrix4x3fvEXT");
	cppgl_glTextureBufferEXT = (PFNGLTEXTUREBUFFEREXTPROC)load("glTextureBufferEXT");
	cppgl_glMultiTexBufferEXT = (PFNGLMULTITEXBUFFEREXTPROC)load("glMultiTexBufferEXT");
	cppgl_glTextureParameterIivEXT = (PFNGLTEXTUREPARAMETERIIVEXTPROC)load("glTextureParameterIivEXT");
	cppgl_glTextureParameterIuivEXT = (PFNGLTEXTUREPARAMETERIUIVEXTPROC)load("glTextureParameterIuivEXT");
	cppgl_glGetTextureParameterIivEXT = (PFNGLGETTEXTUREPARAMETERIIVEXTPROC)load("glGetTextureParameterIivEXT");
	cppgl_glGetTextureParameterIuivEXT = (PFNGLGETTEXTUREPARAMETERIUIVEXTPROC)load("glGetTextureParameterIuivEXT");
	cppgl_glMultiTexParameterIivEXT = (PFNGLMULTITEXPARAMETERIIVEXTPROC)load("glMultiTexParameterIivEXT");
	cppgl_glMultiTexParameterIuivEXT = (PFNGLMULTITEXPARAMETERIUIVEXTPROC)load("glMultiTexParameterIuivEXT");
	cppgl_glGetMultiTexParameterIivEXT = (PFNGLGETMULTITEXPARAMETERIIVEXTPROC)load("glGetMultiTexParameterIivEXT");
	cppgl_glGetMultiTexParameterIuivEXT = (PFNGLGETMULTITEXPARAMETERIUIVEXTPROC)load("glGetMultiTexParameterIuivEXT");
	cppgl_glProgramUniform1uiEXT = (PFNGLPROGRAMUNIFORM1UIEXTPROC)load("glProgramUniform1uiEXT");
	cppgl_glProgramUniform2uiEXT = (PFNGLPROGRAMUNIFORM2UIEXTPROC)load("glProgramUniform2uiEXT");
	cppgl_glProgramUniform3uiEXT = (PFNGLPROGRAMUNIFORM3UIEXTPROC)load("glProgramUniform3uiEXT");
	cppgl_glProgramUniform4uiEXT = (PFNGLPROGRAMUNIFORM4UIEXTPROC)load("glProgramUniform4uiEXT");
	cppgl_glProgramUniform1uivEXT = (PFNGLPROGRAMUNIFORM1UIVEXTPROC)load("glProgramUniform1uivEXT");
	cppgl_glProgramUniform2uivEXT = (PFNGLPROGRAMUNIFORM2UIVEXTPROC)load("glProgramUniform2uivEXT");
	cppgl_glProgramUniform3uivEXT = (PFNGLPROGRAMUNIFORM3UIVEXTPROC)load("glProgramUniform3uivEXT");
	cppgl_glProgramUniform4uivEXT = (PFNGLPROGRAMUNIFORM4UIVEXTPROC)load("glProgramUniform4uivEXT");
	cppgl_glNamedProgramLocalParameters4fvEXT = (PFNGLNAMEDPROGRAMLOCALPARAMETERS4FVEXTPROC)load("glNamedProgramLocalParameters4fvEXT");
	cppgl_glNamedProgramLocalParameterI4iEXT = (PFNGLNAMEDPROGRAMLOCALPARAMETERI4IEXTPROC)load("glNamedProgramLocalParameterI4iEXT");
	cppgl_glNamedProgramLocalParameterI4ivEXT = (PFNGLNAMEDPROGRAMLOCALPARAMETERI4IVEXTPROC)load("glNamedProgramLocalParameterI4ivEXT");
	cppgl_glNamedProgramLocalParametersI4ivEXT = (PFNGLNAMEDPROGRAMLOCALPARAMETERSI4IVEXTPROC)load("glNamedProgramLocalParametersI4ivEXT");
	cppgl_glNamedProgramLocalParameterI4uiEXT = (PFNGLNAMEDPROGRAMLOCALPARAMETERI4UIEXTPROC)load("glNamedProgramLocalParameterI4uiEXT");
	cppgl_glNamedProgramLocalParameterI4uivEXT = (PFNGLNAMEDPROGRAMLOCALPARAMETERI4UIVEXTPROC)load("glNamedProgramLocalParameterI4uivEXT");
	cppgl_glNamedProgramLocalParametersI4uivEXT = (PFNGLNAMEDPROGRAMLOCALPARAMETERSI4UIVEXTPROC)load("glNamedProgramLocalParametersI4uivEXT");
	cppgl_glGetNamedProgramLocalParameterIivEXT = (PFNGLGETNAMEDPROGRAMLOCALPARAMETERIIVEXTPROC)load("glGetNamedProgramLocalParameterIivEXT");
	cppgl_glGetNamedProgramLocalParameterIuivEXT = (PFNGLGETNAMEDPROGRAMLOCALPARAMETERIUIVEXTPROC)load("glGetNamedProgramLocalParameterIuivEXT");
	cppgl_glEnableClientStateiEXT = (PFNGLENABLECLIENTSTATEIEXTPROC)load("glEnableClientStateiEXT");
	cppgl_glDisableClientStateiEXT = (PFNGLDISABLECLIENTSTATEIEXTPROC)load("glDisableClientStateiEXT");
	cppgl_glGetFloati_vEXT = (PFNGLGETFLOATI_VEXTPROC)load("glGetFloati_vEXT");
	cppgl_glGetDoublei_vEXT = (PFNGLGETDOUBLEI_VEXTPROC)load("glGetDoublei_vEXT");
	cppgl_glGetPointeri_vEXT = (PFNGLGETPOINTERI_VEXTPROC)load("glGetPointeri_vEXT");
	cppgl_glNamedProgramStringEXT = (PFNGLNAMEDPROGRAMSTRINGEXTPROC)load("glNamedProgramStringEXT");
	cppgl_glNamedProgramLocalParameter4dEXT = (PFNGLNAMEDPROGRAMLOCALPARAMETER4DEXTPROC)load("glNamedProgramLocalParameter4dEXT");
	cppgl_glNamedProgramLocalParameter4dvEXT = (PFNGLNAMEDPROGRAMLOCALPARAMETER4DVEXTPROC)load("glNamedProgramLocalParameter4dvEXT");
	cppgl_glNamedProgramLocalParameter4fEXT = (PFNGLNAMEDPROGRAMLOCALPARAMETER4FEXTPROC)load("glNamedProgramLocalParameter4fEXT");
	cppgl_glNamedProgramLocalParameter4fvEXT = (PFNGLNAMEDPROGRAMLOCALPARAMETER4FVEXTPROC)load("glNamedProgramLocalParameter4fvEXT");
	cppgl_glGetNamedProgramLocalParameterdvEXT = (PFNGLGETNAMEDPROGRAMLOCALPARAMETERDVEXTPROC)load("glGetNamedProgramLocalParameterdvEXT");
	cppgl_glGetNamedProgramLocalParameterfvEXT = (PFNGLGETNAMEDPROGRAMLOCALPARAMETERFVEXTPROC)load("glGetNamedProgramLocalParameterfvEXT");
	cppgl_glGetNamedProgramivEXT = (PFNGLGETNAMEDPROGRAMIVEXTPROC)load("glGetNamedProgramivEXT");
	cppgl_glGetNamedProgramStringEXT = (PFNGLGETNAMEDPROGRAMSTRINGEXTPROC)load("glGetNamedProgramStringEXT");
	cppgl_glNamedRenderbufferStorageEXT = (PFNGLNAMEDRENDERBUFFERSTORAGEEXTPROC)load("glNamedRenderbufferStorageEXT");
	cppgl_glGetNamedRenderbufferParameterivEXT = (PFNGLGETNAMEDRENDERBUFFERPARAMETERIVEXTPROC)load("glGetNamedRenderbufferParameterivEXT");
	cppgl_glNamedRenderbufferStorageMultisampleEXT = (PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLEEXTPROC)load("glNamedRenderbufferStorageMultisampleEXT");
	cppgl_glNamedRenderbufferStorageMultisampleCoverageEXT = (PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLECOVERAGEEXTPROC)load("glNamedRenderbufferStorageMultisampleCoverageEXT");
	cppgl_glCheckNamedFramebufferStatusEXT = (PFNGLCHECKNAMEDFRAMEBUFFERSTATUSEXTPROC)load("glCheckNamedFramebufferStatusEXT");
	cppgl_glNamedFramebufferTexture1DEXT = (PFNGLNAMEDFRAMEBUFFERTEXTURE1DEXTPROC)load("glNamedFramebufferTexture1DEXT");
	cppgl_glNamedFramebufferTexture2DEXT = (PFNGLNAMEDFRAMEBUFFERTEXTURE2DEXTPROC)load("glNamedFramebufferTexture2DEXT");
	cppgl_glNamedFramebufferTexture3DEXT = (PFNGLNAMEDFRAMEBUFFERTEXTURE3DEXTPROC)load("glNamedFramebufferTexture3DEXT");
	cppgl_glNamedFramebufferRenderbufferEXT = (PFNGLNAMEDFRAMEBUFFERRENDERBUFFEREXTPROC)load("glNamedFramebufferRenderbufferEXT");
	cppgl_glGetNamedFramebufferAttachmentParameterivEXT = (PFNGLGETNAMEDFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC)load("glGetNamedFramebufferAttachmentParameterivEXT");
	cppgl_glGenerateTextureMipmapEXT = (PFNGLGENERATETEXTUREMIPMAPEXTPROC)load("glGenerateTextureMipmapEXT");
	cppgl_glGenerateMultiTexMipmapEXT = (PFNGLGENERATEMULTITEXMIPMAPEXTPROC)load("glGenerateMultiTexMipmapEXT");
	cppgl_glFramebufferDrawBufferEXT = (PFNGLFRAMEBUFFERDRAWBUFFEREXTPROC)load("glFramebufferDrawBufferEXT");
	cppgl_glFramebufferDrawBuffersEXT = (PFNGLFRAMEBUFFERDRAWBUFFERSEXTPROC)load("glFramebufferDrawBuffersEXT");
	cppgl_glFramebufferReadBufferEXT = (PFNGLFRAMEBUFFERREADBUFFEREXTPROC)load("glFramebufferReadBufferEXT");
	cppgl_glGetFramebufferParameterivEXT = (PFNGLGETFRAMEBUFFERPARAMETERIVEXTPROC)load("glGetFramebufferParameterivEXT");
	cppgl_glNamedCopyBufferSubDataEXT = (PFNGLNAMEDCOPYBUFFERSUBDATAEXTPROC)load("glNamedCopyBufferSubDataEXT");
	cppgl_glNamedFramebufferTextureEXT = (PFNGLNAMEDFRAMEBUFFERTEXTUREEXTPROC)load("glNamedFramebufferTextureEXT");
	cppgl_glNamedFramebufferTextureLayerEXT = (PFNGLNAMEDFRAMEBUFFERTEXTURELAYEREXTPROC)load("glNamedFramebufferTextureLayerEXT");
	cppgl_glNamedFramebufferTextureFaceEXT = (PFNGLNAMEDFRAMEBUFFERTEXTUREFACEEXTPROC)load("glNamedFramebufferTextureFaceEXT");
	cppgl_glTextureRenderbufferEXT = (PFNGLTEXTURERENDERBUFFEREXTPROC)load("glTextureRenderbufferEXT");
	cppgl_glMultiTexRenderbufferEXT = (PFNGLMULTITEXRENDERBUFFEREXTPROC)load("glMultiTexRenderbufferEXT");
	cppgl_glVertexArrayVertexOffsetEXT = (PFNGLVERTEXARRAYVERTEXOFFSETEXTPROC)load("glVertexArrayVertexOffsetEXT");
	cppgl_glVertexArrayColorOffsetEXT = (PFNGLVERTEXARRAYCOLOROFFSETEXTPROC)load("glVertexArrayColorOffsetEXT");
	cppgl_glVertexArrayEdgeFlagOffsetEXT = (PFNGLVERTEXARRAYEDGEFLAGOFFSETEXTPROC)load("glVertexArrayEdgeFlagOffsetEXT");
	cppgl_glVertexArrayIndexOffsetEXT = (PFNGLVERTEXARRAYINDEXOFFSETEXTPROC)load("glVertexArrayIndexOffsetEXT");
	cppgl_glVertexArrayNormalOffsetEXT = (PFNGLVERTEXARRAYNORMALOFFSETEXTPROC)load("glVertexArrayNormalOffsetEXT");
	cppgl_glVertexArrayTexCoordOffsetEXT = (PFNGLVERTEXARRAYTEXCOORDOFFSETEXTPROC)load("glVertexArrayTexCoordOffsetEXT");
	cppgl_glVertexArrayMultiTexCoordOffsetEXT = (PFNGLVERTEXARRAYMULTITEXCOORDOFFSETEXTPROC)load("glVertexArrayMultiTexCoordOffsetEXT");
	cppgl_glVertexArrayFogCoordOffsetEXT = (PFNGLVERTEXARRAYFOGCOORDOFFSETEXTPROC)load("glVertexArrayFogCoordOffsetEXT");
	cppgl_glVertexArraySecondaryColorOffsetEXT = (PFNGLVERTEXARRAYSECONDARYCOLOROFFSETEXTPROC)load("glVertexArraySecondaryColorOffsetEXT");
	cppgl_glVertexArrayVertexAttribOffsetEXT = (PFNGLVERTEXARRAYVERTEXATTRIBOFFSETEXTPROC)load("glVertexArrayVertexAttribOffsetEXT");
	cppgl_glVertexArrayVertexAttribIOffsetEXT = (PFNGLVERTEXARRAYVERTEXATTRIBIOFFSETEXTPROC)load("glVertexArrayVertexAttribIOffsetEXT");
	cppgl_glEnableVertexArrayEXT = (PFNGLENABLEVERTEXARRAYEXTPROC)load("glEnableVertexArrayEXT");
	cppgl_glDisableVertexArrayEXT = (PFNGLDISABLEVERTEXARRAYEXTPROC)load("glDisableVertexArrayEXT");
	cppgl_glEnableVertexArrayAttribEXT = (PFNGLENABLEVERTEXARRAYATTRIBEXTPROC)load("glEnableVertexArrayAttribEXT");
	cppgl_glDisableVertexArrayAttribEXT = (PFNGLDISABLEVERTEXARRAYATTRIBEXTPROC)load("glDisableVertexArrayAttribEXT");
	cppgl_glGetVertexArrayIntegervEXT = (PFNGLGETVERTEXARRAYINTEGERVEXTPROC)load("glGetVertexArrayIntegervEXT");
	cppgl_glGetVertexArrayPointervEXT = (PFNGLGETVERTEXARRAYPOINTERVEXTPROC)load("glGetVertexArrayPointervEXT");
	cppgl_glGetVertexArrayIntegeri_vEXT = (PFNGLGETVERTEXARRAYINTEGERI_VEXTPROC)load("glGetVertexArrayIntegeri_vEXT");
	cppgl_glGetVertexArrayPointeri_vEXT = (PFNGLGETVERTEXARRAYPOINTERI_VEXTPROC)load("glGetVertexArrayPointeri_vEXT");
	cppgl_glMapNamedBufferRangeEXT = (PFNGLMAPNAMEDBUFFERRANGEEXTPROC)load("glMapNamedBufferRangeEXT");
	cppgl_glFlushMappedNamedBufferRangeEXT = (PFNGLFLUSHMAPPEDNAMEDBUFFERRANGEEXTPROC)load("glFlushMappedNamedBufferRangeEXT");
	cppgl_glNamedBufferStorageEXT = (PFNGLNAMEDBUFFERSTORAGEEXTPROC)load("glNamedBufferStorageEXT");
	cppgl_glClearNamedBufferDataEXT = (PFNGLCLEARNAMEDBUFFERDATAEXTPROC)load("glClearNamedBufferDataEXT");
	cppgl_glClearNamedBufferSubDataEXT = (PFNGLCLEARNAMEDBUFFERSUBDATAEXTPROC)load("glClearNamedBufferSubDataEXT");
	cppgl_glNamedFramebufferParameteriEXT = (PFNGLNAMEDFRAMEBUFFERPARAMETERIEXTPROC)load("glNamedFramebufferParameteriEXT");
	cppgl_glGetNamedFramebufferParameterivEXT = (PFNGLGETNAMEDFRAMEBUFFERPARAMETERIVEXTPROC)load("glGetNamedFramebufferParameterivEXT");
	cppgl_glProgramUniform1dEXT = (PFNGLPROGRAMUNIFORM1DEXTPROC)load("glProgramUniform1dEXT");
	cppgl_glProgramUniform2dEXT = (PFNGLPROGRAMUNIFORM2DEXTPROC)load("glProgramUniform2dEXT");
	cppgl_glProgramUniform3dEXT = (PFNGLPROGRAMUNIFORM3DEXTPROC)load("glProgramUniform3dEXT");
	cppgl_glProgramUniform4dEXT = (PFNGLPROGRAMUNIFORM4DEXTPROC)load("glProgramUniform4dEXT");
	cppgl_glProgramUniform1dvEXT = (PFNGLPROGRAMUNIFORM1DVEXTPROC)load("glProgramUniform1dvEXT");
	cppgl_glProgramUniform2dvEXT = (PFNGLPROGRAMUNIFORM2DVEXTPROC)load("glProgramUniform2dvEXT");
	cppgl_glProgramUniform3dvEXT = (PFNGLPROGRAMUNIFORM3DVEXTPROC)load("glProgramUniform3dvEXT");
	cppgl_glProgramUniform4dvEXT = (PFNGLPROGRAMUNIFORM4DVEXTPROC)load("glProgramUniform4dvEXT");
	cppgl_glProgramUniformMatrix2dvEXT = (PFNGLPROGRAMUNIFORMMATRIX2DVEXTPROC)load("glProgramUniformMatrix2dvEXT");
	cppgl_glProgramUniformMatrix3dvEXT = (PFNGLPROGRAMUNIFORMMATRIX3DVEXTPROC)load("glProgramUniformMatrix3dvEXT");
	cppgl_glProgramUniformMatrix4dvEXT = (PFNGLPROGRAMUNIFORMMATRIX4DVEXTPROC)load("glProgramUniformMatrix4dvEXT");
	cppgl_glProgramUniformMatrix2x3dvEXT = (PFNGLPROGRAMUNIFORMMATRIX2X3DVEXTPROC)load("glProgramUniformMatrix2x3dvEXT");
	cppgl_glProgramUniformMatrix2x4dvEXT = (PFNGLPROGRAMUNIFORMMATRIX2X4DVEXTPROC)load("glProgramUniformMatrix2x4dvEXT");
	cppgl_glProgramUniformMatrix3x2dvEXT = (PFNGLPROGRAMUNIFORMMATRIX3X2DVEXTPROC)load("glProgramUniformMatrix3x2dvEXT");
	cppgl_glProgramUniformMatrix3x4dvEXT = (PFNGLPROGRAMUNIFORMMATRIX3X4DVEXTPROC)load("glProgramUniformMatrix3x4dvEXT");
	cppgl_glProgramUniformMatrix4x2dvEXT = (PFNGLPROGRAMUNIFORMMATRIX4X2DVEXTPROC)load("glProgramUniformMatrix4x2dvEXT");
	cppgl_glProgramUniformMatrix4x3dvEXT = (PFNGLPROGRAMUNIFORMMATRIX4X3DVEXTPROC)load("glProgramUniformMatrix4x3dvEXT");
	cppgl_glTextureBufferRangeEXT = (PFNGLTEXTUREBUFFERRANGEEXTPROC)load("glTextureBufferRangeEXT");
	cppgl_glTextureStorage1DEXT = (PFNGLTEXTURESTORAGE1DEXTPROC)load("glTextureStorage1DEXT");
	cppgl_glTextureStorage2DEXT = (PFNGLTEXTURESTORAGE2DEXTPROC)load("glTextureStorage2DEXT");
	cppgl_glTextureStorage3DEXT = (PFNGLTEXTURESTORAGE3DEXTPROC)load("glTextureStorage3DEXT");
	cppgl_glTextureStorage2DMultisampleEXT = (PFNGLTEXTURESTORAGE2DMULTISAMPLEEXTPROC)load("glTextureStorage2DMultisampleEXT");
	cppgl_glTextureStorage3DMultisampleEXT = (PFNGLTEXTURESTORAGE3DMULTISAMPLEEXTPROC)load("glTextureStorage3DMultisampleEXT");
	cppgl_glVertexArrayBindVertexBufferEXT = (PFNGLVERTEXARRAYBINDVERTEXBUFFEREXTPROC)load("glVertexArrayBindVertexBufferEXT");
	cppgl_glVertexArrayVertexAttribFormatEXT = (PFNGLVERTEXARRAYVERTEXATTRIBFORMATEXTPROC)load("glVertexArrayVertexAttribFormatEXT");
	cppgl_glVertexArrayVertexAttribIFormatEXT = (PFNGLVERTEXARRAYVERTEXATTRIBIFORMATEXTPROC)load("glVertexArrayVertexAttribIFormatEXT");
	cppgl_glVertexArrayVertexAttribLFormatEXT = (PFNGLVERTEXARRAYVERTEXATTRIBLFORMATEXTPROC)load("glVertexArrayVertexAttribLFormatEXT");
	cppgl_glVertexArrayVertexAttribBindingEXT = (PFNGLVERTEXARRAYVERTEXATTRIBBINDINGEXTPROC)load("glVertexArrayVertexAttribBindingEXT");
	cppgl_glVertexArrayVertexBindingDivisorEXT = (PFNGLVERTEXARRAYVERTEXBINDINGDIVISOREXTPROC)load("glVertexArrayVertexBindingDivisorEXT");
	cppgl_glVertexArrayVertexAttribLOffsetEXT = (PFNGLVERTEXARRAYVERTEXATTRIBLOFFSETEXTPROC)load("glVertexArrayVertexAttribLOffsetEXT");
	cppgl_glTexturePageCommitmentEXT = (PFNGLTEXTUREPAGECOMMITMENTEXTPROC)load("glTexturePageCommitmentEXT");
	cppgl_glVertexArrayVertexAttribDivisorEXT = (PFNGLVERTEXARRAYVERTEXATTRIBDIVISOREXTPROC)load("glVertexArrayVertexAttribDivisorEXT");
}
static void load_GL_EXT_draw_buffers2(CPPGLloadproc load) {
	if(!CPPGL_GL_EXT_draw_buffers2) return;
	cppgl_glColorMaskIndexedEXT = (PFNGLCOLORMASKINDEXEDEXTPROC)load("glColorMaskIndexedEXT");
	cppgl_glGetBooleanIndexedvEXT = (PFNGLGETBOOLEANINDEXEDVEXTPROC)load("glGetBooleanIndexedvEXT");
	cppgl_glGetIntegerIndexedvEXT = (PFNGLGETINTEGERINDEXEDVEXTPROC)load("glGetIntegerIndexedvEXT");
	cppgl_glEnableIndexedEXT = (PFNGLENABLEINDEXEDEXTPROC)load("glEnableIndexedEXT");
	cppgl_glDisableIndexedEXT = (PFNGLDISABLEINDEXEDEXTPROC)load("glDisableIndexedEXT");
	cppgl_glIsEnabledIndexedEXT = (PFNGLISENABLEDINDEXEDEXTPROC)load("glIsEnabledIndexedEXT");
}
static void load_GL_EXT_draw_instanced(CPPGLloadproc load) {
	if(!CPPGL_GL_EXT_draw_instanced) return;
	cppgl_glDrawArraysInstancedEXT = (PFNGLDRAWARRAYSINSTANCEDEXTPROC)load("glDrawArraysInstancedEXT");
	cppgl_glDrawElementsInstancedEXT = (PFNGLDRAWELEMENTSINSTANCEDEXTPROC)load("glDrawElementsInstancedEXT");
}
static void load_GL_EXT_draw_range_elements(CPPGLloadproc load) {
	if(!CPPGL_GL_EXT_draw_range_elements) return;
	cppgl_glDrawRangeElementsEXT = (PFNGLDRAWRANGEELEMENTSEXTPROC)load("glDrawRangeElementsEXT");
}
static void load_GL_EXT_fog_coord(CPPGLloadproc load) {
	if(!CPPGL_GL_EXT_fog_coord) return;
	cppgl_glFogCoordfEXT = (PFNGLFOGCOORDFEXTPROC)load("glFogCoordfEXT");
	cppgl_glFogCoordfvEXT = (PFNGLFOGCOORDFVEXTPROC)load("glFogCoordfvEXT");
	cppgl_glFogCoorddEXT = (PFNGLFOGCOORDDEXTPROC)load("glFogCoorddEXT");
	cppgl_glFogCoorddvEXT = (PFNGLFOGCOORDDVEXTPROC)load("glFogCoorddvEXT");
	cppgl_glFogCoordPointerEXT = (PFNGLFOGCOORDPOINTEREXTPROC)load("glFogCoordPointerEXT");
}
static void load_GL_EXT_framebuffer_blit(CPPGLloadproc load) {
	if(!CPPGL_GL_EXT_framebuffer_blit) return;
	cppgl_glBlitFramebufferEXT = (PFNGLBLITFRAMEBUFFEREXTPROC)load("glBlitFramebufferEXT");
}
static void load_GL_EXT_framebuffer_multisample(CPPGLloadproc load) {
	if(!CPPGL_GL_EXT_framebuffer_multisample) return;
	cppgl_glRenderbufferStorageMultisampleEXT = (PFNGLRENDERBUFFERSTORAGEMULTISAMPLEEXTPROC)load("glRenderbufferStorageMultisampleEXT");
}
static void load_GL_EXT_framebuffer_object(CPPGLloadproc load) {
	if(!CPPGL_GL_EXT_framebuffer_object) return;
	cppgl_glIsRenderbufferEXT = (PFNGLISRENDERBUFFEREXTPROC)load("glIsRenderbufferEXT");
	cppgl_glBindRenderbufferEXT = (PFNGLBINDRENDERBUFFEREXTPROC)load("glBindRenderbufferEXT");
	cppgl_glDeleteRenderbuffersEXT = (PFNGLDELETERENDERBUFFERSEXTPROC)load("glDeleteRenderbuffersEXT");
	cppgl_glGenRenderbuffersEXT = (PFNGLGENRENDERBUFFERSEXTPROC)load("glGenRenderbuffersEXT");
	cppgl_glRenderbufferStorageEXT = (PFNGLRENDERBUFFERSTORAGEEXTPROC)load("glRenderbufferStorageEXT");
	cppgl_glGetRenderbufferParameterivEXT = (PFNGLGETRENDERBUFFERPARAMETERIVEXTPROC)load("glGetRenderbufferParameterivEXT");
	cppgl_glIsFramebufferEXT = (PFNGLISFRAMEBUFFEREXTPROC)load("glIsFramebufferEXT");
	cppgl_glBindFramebufferEXT = (PFNGLBINDFRAMEBUFFEREXTPROC)load("glBindFramebufferEXT");
	cppgl_glDeleteFramebuffersEXT = (PFNGLDELETEFRAMEBUFFERSEXTPROC)load("glDeleteFramebuffersEXT");
	cppgl_glGenFramebuffersEXT = (PFNGLGENFRAMEBUFFERSEXTPROC)load("glGenFramebuffersEXT");
	cppgl_glCheckFramebufferStatusEXT = (PFNGLCHECKFRAMEBUFFERSTATUSEXTPROC)load("glCheckFramebufferStatusEXT");
	cppgl_glFramebufferTexture1DEXT = (PFNGLFRAMEBUFFERTEXTURE1DEXTPROC)load("glFramebufferTexture1DEXT");
	cppgl_glFramebufferTexture2DEXT = (PFNGLFRAMEBUFFERTEXTURE2DEXTPROC)load("glFramebufferTexture2DEXT");
	cppgl_glFramebufferTexture3DEXT = (PFNGLFRAMEBUFFERTEXTURE3DEXTPROC)load("glFramebufferTexture3DEXT");
	cppgl_glFramebufferRenderbufferEXT = (PFNGLFRAMEBUFFERRENDERBUFFEREXTPROC)load("glFramebufferRenderbufferEXT");
	cppgl_glGetFramebufferAttachmentParameterivEXT = (PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC)load("glGetFramebufferAttachmentParameterivEXT");
	cppgl_glGenerateMipmapEXT = (PFNGLGENERATEMIPMAPEXTPROC)load("glGenerateMipmapEXT");
}
static void load_GL_EXT_geometry_shader4(CPPGLloadproc load) {
	if(!CPPGL_GL_EXT_geometry_shader4) return;
	cppgl_glProgramParameteriEXT = (PFNGLPROGRAMPARAMETERIEXTPROC)load("glProgramParameteriEXT");
}
static void load_GL_EXT_gpu_program_parameters(CPPGLloadproc load) {
	if(!CPPGL_GL_EXT_gpu_program_parameters) return;
	cppgl_glProgramEnvParameters4fvEXT = (PFNGLPROGRAMENVPARAMETERS4FVEXTPROC)load("glProgramEnvParameters4fvEXT");
	cppgl_glProgramLocalParameters4fvEXT = (PFNGLPROGRAMLOCALPARAMETERS4FVEXTPROC)load("glProgramLocalParameters4fvEXT");
}
static void load_GL_EXT_gpu_shader4(CPPGLloadproc load) {
	if(!CPPGL_GL_EXT_gpu_shader4) return;
	cppgl_glGetUniformuivEXT = (PFNGLGETUNIFORMUIVEXTPROC)load("glGetUniformuivEXT");
	cppgl_glBindFragDataLocationEXT = (PFNGLBINDFRAGDATALOCATIONEXTPROC)load("glBindFragDataLocationEXT");
	cppgl_glGetFragDataLocationEXT = (PFNGLGETFRAGDATALOCATIONEXTPROC)load("glGetFragDataLocationEXT");
	cppgl_glUniform1uiEXT = (PFNGLUNIFORM1UIEXTPROC)load("glUniform1uiEXT");
	cppgl_glUniform2uiEXT = (PFNGLUNIFORM2UIEXTPROC)load("glUniform2uiEXT");
	cppgl_glUniform3uiEXT = (PFNGLUNIFORM3UIEXTPROC)load("glUniform3uiEXT");
	cppgl_glUniform4uiEXT = (PFNGLUNIFORM4UIEXTPROC)load("glUniform4uiEXT");
	cppgl_glUniform1uivEXT = (PFNGLUNIFORM1UIVEXTPROC)load("glUniform1uivEXT");
	cppgl_glUniform2uivEXT = (PFNGLUNIFORM2UIVEXTPROC)load("glUniform2uivEXT");
	cppgl_glUniform3uivEXT = (PFNGLUNIFORM3UIVEXTPROC)load("glUniform3uivEXT");
	cppgl_glUniform4uivEXT = (PFNGLUNIFORM4UIVEXTPROC)load("glUniform4uivEXT");
}
static void load_GL_EXT_histogram(CPPGLloadproc load) {
	if(!CPPGL_GL_EXT_histogram) return;
	cppgl_glGetHistogramEXT = (PFNGLGETHISTOGRAMEXTPROC)load("glGetHistogramEXT");
	cppgl_glGetHistogramParameterfvEXT = (PFNGLGETHISTOGRAMPARAMETERFVEXTPROC)load("glGetHistogramParameterfvEXT");
	cppgl_glGetHistogramParameterivEXT = (PFNGLGETHISTOGRAMPARAMETERIVEXTPROC)load("glGetHistogramParameterivEXT");
	cppgl_glGetMinmaxEXT = (PFNGLGETMINMAXEXTPROC)load("glGetMinmaxEXT");
	cppgl_glGetMinmaxParameterfvEXT = (PFNGLGETMINMAXPARAMETERFVEXTPROC)load("glGetMinmaxParameterfvEXT");
	cppgl_glGetMinmaxParameterivEXT = (PFNGLGETMINMAXPARAMETERIVEXTPROC)load("glGetMinmaxParameterivEXT");
	cppgl_glHistogramEXT = (PFNGLHISTOGRAMEXTPROC)load("glHistogramEXT");
	cppgl_glMinmaxEXT = (PFNGLMINMAXEXTPROC)load("glMinmaxEXT");
	cppgl_glResetHistogramEXT = (PFNGLRESETHISTOGRAMEXTPROC)load("glResetHistogramEXT");
	cppgl_glResetMinmaxEXT = (PFNGLRESETMINMAXEXTPROC)load("glResetMinmaxEXT");
}
static void load_GL_EXT_index_func(CPPGLloadproc load) {
	if(!CPPGL_GL_EXT_index_func) return;
	cppgl_glIndexFuncEXT = (PFNGLINDEXFUNCEXTPROC)load("glIndexFuncEXT");
}
static void load_GL_EXT_index_material(CPPGLloadproc load) {
	if(!CPPGL_GL_EXT_index_material) return;
	cppgl_glIndexMaterialEXT = (PFNGLINDEXMATERIALEXTPROC)load("glIndexMaterialEXT");
}
static void load_GL_EXT_light_texture(CPPGLloadproc load) {
	if(!CPPGL_GL_EXT_light_texture) return;
	cppgl_glApplyTextureEXT = (PFNGLAPPLYTEXTUREEXTPROC)load("glApplyTextureEXT");
	cppgl_glTextureLightEXT = (PFNGLTEXTURELIGHTEXTPROC)load("glTextureLightEXT");
	cppgl_glTextureMaterialEXT = (PFNGLTEXTUREMATERIALEXTPROC)load("glTextureMaterialEXT");
}
static void load_GL_EXT_multi_draw_arrays(CPPGLloadproc load) {
	if(!CPPGL_GL_EXT_multi_draw_arrays) return;
	cppgl_glMultiDrawArraysEXT = (PFNGLMULTIDRAWARRAYSEXTPROC)load("glMultiDrawArraysEXT");
	cppgl_glMultiDrawElementsEXT = (PFNGLMULTIDRAWELEMENTSEXTPROC)load("glMultiDrawElementsEXT");
}
static void load_GL_EXT_multisample(CPPGLloadproc load) {
	if(!CPPGL_GL_EXT_multisample) return;
	cppgl_glSampleMaskEXT = (PFNGLSAMPLEMASKEXTPROC)load("glSampleMaskEXT");
	cppgl_glSamplePatternEXT = (PFNGLSAMPLEPATTERNEXTPROC)load("glSamplePatternEXT");
}
static void load_GL_EXT_paletted_texture(CPPGLloadproc load) {
	if(!CPPGL_GL_EXT_paletted_texture) return;
	cppgl_glColorTableEXT = (PFNGLCOLORTABLEEXTPROC)load("glColorTableEXT");
	cppgl_glGetColorTableEXT = (PFNGLGETCOLORTABLEEXTPROC)load("glGetColorTableEXT");
	cppgl_glGetColorTableParameterivEXT = (PFNGLGETCOLORTABLEPARAMETERIVEXTPROC)load("glGetColorTableParameterivEXT");
	cppgl_glGetColorTableParameterfvEXT = (PFNGLGETCOLORTABLEPARAMETERFVEXTPROC)load("glGetColorTableParameterfvEXT");
}
static void load_GL_EXT_pixel_transform(CPPGLloadproc load) {
	if(!CPPGL_GL_EXT_pixel_transform) return;
	cppgl_glPixelTransformParameteriEXT = (PFNGLPIXELTRANSFORMPARAMETERIEXTPROC)load("glPixelTransformParameteriEXT");
	cppgl_glPixelTransformParameterfEXT = (PFNGLPIXELTRANSFORMPARAMETERFEXTPROC)load("glPixelTransformParameterfEXT");
	cppgl_glPixelTransformParameterivEXT = (PFNGLPIXELTRANSFORMPARAMETERIVEXTPROC)load("glPixelTransformParameterivEXT");
	cppgl_glPixelTransformParameterfvEXT = (PFNGLPIXELTRANSFORMPARAMETERFVEXTPROC)load("glPixelTransformParameterfvEXT");
	cppgl_glGetPixelTransformParameterivEXT = (PFNGLGETPIXELTRANSFORMPARAMETERIVEXTPROC)load("glGetPixelTransformParameterivEXT");
	cppgl_glGetPixelTransformParameterfvEXT = (PFNGLGETPIXELTRANSFORMPARAMETERFVEXTPROC)load("glGetPixelTransformParameterfvEXT");
}
static void load_GL_EXT_point_parameters(CPPGLloadproc load) {
	if(!CPPGL_GL_EXT_point_parameters) return;
	cppgl_glPointParameterfEXT = (PFNGLPOINTPARAMETERFEXTPROC)load("glPointParameterfEXT");
	cppgl_glPointParameterfvEXT = (PFNGLPOINTPARAMETERFVEXTPROC)load("glPointParameterfvEXT");
}
static void load_GL_EXT_polygon_offset(CPPGLloadproc load) {
	if(!CPPGL_GL_EXT_polygon_offset) return;
	cppgl_glPolygonOffsetEXT = (PFNGLPOLYGONOFFSETEXTPROC)load("glPolygonOffsetEXT");
}
static void load_GL_EXT_polygon_offset_clamp(CPPGLloadproc load) {
	if(!CPPGL_GL_EXT_polygon_offset_clamp) return;
	cppgl_glPolygonOffsetClampEXT = (PFNGLPOLYGONOFFSETCLAMPEXTPROC)load("glPolygonOffsetClampEXT");
}
static void load_GL_EXT_provoking_vertex(CPPGLloadproc load) {
	if(!CPPGL_GL_EXT_provoking_vertex) return;
	cppgl_glProvokingVertexEXT = (PFNGLPROVOKINGVERTEXEXTPROC)load("glProvokingVertexEXT");
}
static void load_GL_EXT_raster_multisample(CPPGLloadproc load) {
	if(!CPPGL_GL_EXT_raster_multisample) return;
	cppgl_glRasterSamplesEXT = (PFNGLRASTERSAMPLESEXTPROC)load("glRasterSamplesEXT");
}
static void load_GL_EXT_secondary_color(CPPGLloadproc load) {
	if(!CPPGL_GL_EXT_secondary_color) return;
	cppgl_glSecondaryColor3bEXT = (PFNGLSECONDARYCOLOR3BEXTPROC)load("glSecondaryColor3bEXT");
	cppgl_glSecondaryColor3bvEXT = (PFNGLSECONDARYCOLOR3BVEXTPROC)load("glSecondaryColor3bvEXT");
	cppgl_glSecondaryColor3dEXT = (PFNGLSECONDARYCOLOR3DEXTPROC)load("glSecondaryColor3dEXT");
	cppgl_glSecondaryColor3dvEXT = (PFNGLSECONDARYCOLOR3DVEXTPROC)load("glSecondaryColor3dvEXT");
	cppgl_glSecondaryColor3fEXT = (PFNGLSECONDARYCOLOR3FEXTPROC)load("glSecondaryColor3fEXT");
	cppgl_glSecondaryColor3fvEXT = (PFNGLSECONDARYCOLOR3FVEXTPROC)load("glSecondaryColor3fvEXT");
	cppgl_glSecondaryColor3iEXT = (PFNGLSECONDARYCOLOR3IEXTPROC)load("glSecondaryColor3iEXT");
	cppgl_glSecondaryColor3ivEXT = (PFNGLSECONDARYCOLOR3IVEXTPROC)load("glSecondaryColor3ivEXT");
	cppgl_glSecondaryColor3sEXT = (PFNGLSECONDARYCOLOR3SEXTPROC)load("glSecondaryColor3sEXT");
	cppgl_glSecondaryColor3svEXT = (PFNGLSECONDARYCOLOR3SVEXTPROC)load("glSecondaryColor3svEXT");
	cppgl_glSecondaryColor3ubEXT = (PFNGLSECONDARYCOLOR3UBEXTPROC)load("glSecondaryColor3ubEXT");
	cppgl_glSecondaryColor3ubvEXT = (PFNGLSECONDARYCOLOR3UBVEXTPROC)load("glSecondaryColor3ubvEXT");
	cppgl_glSecondaryColor3uiEXT = (PFNGLSECONDARYCOLOR3UIEXTPROC)load("glSecondaryColor3uiEXT");
	cppgl_glSecondaryColor3uivEXT = (PFNGLSECONDARYCOLOR3UIVEXTPROC)load("glSecondaryColor3uivEXT");
	cppgl_glSecondaryColor3usEXT = (PFNGLSECONDARYCOLOR3USEXTPROC)load("glSecondaryColor3usEXT");
	cppgl_glSecondaryColor3usvEXT = (PFNGLSECONDARYCOLOR3USVEXTPROC)load("glSecondaryColor3usvEXT");
	cppgl_glSecondaryColorPointerEXT = (PFNGLSECONDARYCOLORPOINTEREXTPROC)load("glSecondaryColorPointerEXT");
}
static void load_GL_EXT_separate_shader_objects(CPPGLloadproc load) {
	if(!CPPGL_GL_EXT_separate_shader_objects) return;
	cppgl_glUseShaderProgramEXT = (PFNGLUSESHADERPROGRAMEXTPROC)load("glUseShaderProgramEXT");
	cppgl_glActiveProgramEXT = (PFNGLACTIVEPROGRAMEXTPROC)load("glActiveProgramEXT");
	cppgl_glCreateShaderProgramEXT = (PFNGLCREATESHADERPROGRAMEXTPROC)load("glCreateShaderProgramEXT");
	cppgl_glActiveShaderProgramEXT = (PFNGLACTIVESHADERPROGRAMEXTPROC)load("glActiveShaderProgramEXT");
	cppgl_glBindProgramPipelineEXT = (PFNGLBINDPROGRAMPIPELINEEXTPROC)load("glBindProgramPipelineEXT");
	cppgl_glCreateShaderProgramvEXT = (PFNGLCREATESHADERPROGRAMVEXTPROC)load("glCreateShaderProgramvEXT");
	cppgl_glDeleteProgramPipelinesEXT = (PFNGLDELETEPROGRAMPIPELINESEXTPROC)load("glDeleteProgramPipelinesEXT");
	cppgl_glGenProgramPipelinesEXT = (PFNGLGENPROGRAMPIPELINESEXTPROC)load("glGenProgramPipelinesEXT");
	cppgl_glGetProgramPipelineInfoLogEXT = (PFNGLGETPROGRAMPIPELINEINFOLOGEXTPROC)load("glGetProgramPipelineInfoLogEXT");
	cppgl_glGetProgramPipelineivEXT = (PFNGLGETPROGRAMPIPELINEIVEXTPROC)load("glGetProgramPipelineivEXT");
	cppgl_glIsProgramPipelineEXT = (PFNGLISPROGRAMPIPELINEEXTPROC)load("glIsProgramPipelineEXT");
	cppgl_glProgramParameteriEXT = (PFNGLPROGRAMPARAMETERIEXTPROC)load("glProgramParameteriEXT");
	cppgl_glProgramUniform1fEXT = (PFNGLPROGRAMUNIFORM1FEXTPROC)load("glProgramUniform1fEXT");
	cppgl_glProgramUniform1fvEXT = (PFNGLPROGRAMUNIFORM1FVEXTPROC)load("glProgramUniform1fvEXT");
	cppgl_glProgramUniform1iEXT = (PFNGLPROGRAMUNIFORM1IEXTPROC)load("glProgramUniform1iEXT");
	cppgl_glProgramUniform1ivEXT = (PFNGLPROGRAMUNIFORM1IVEXTPROC)load("glProgramUniform1ivEXT");
	cppgl_glProgramUniform2fEXT = (PFNGLPROGRAMUNIFORM2FEXTPROC)load("glProgramUniform2fEXT");
	cppgl_glProgramUniform2fvEXT = (PFNGLPROGRAMUNIFORM2FVEXTPROC)load("glProgramUniform2fvEXT");
	cppgl_glProgramUniform2iEXT = (PFNGLPROGRAMUNIFORM2IEXTPROC)load("glProgramUniform2iEXT");
	cppgl_glProgramUniform2ivEXT = (PFNGLPROGRAMUNIFORM2IVEXTPROC)load("glProgramUniform2ivEXT");
	cppgl_glProgramUniform3fEXT = (PFNGLPROGRAMUNIFORM3FEXTPROC)load("glProgramUniform3fEXT");
	cppgl_glProgramUniform3fvEXT = (PFNGLPROGRAMUNIFORM3FVEXTPROC)load("glProgramUniform3fvEXT");
	cppgl_glProgramUniform3iEXT = (PFNGLPROGRAMUNIFORM3IEXTPROC)load("glProgramUniform3iEXT");
	cppgl_glProgramUniform3ivEXT = (PFNGLPROGRAMUNIFORM3IVEXTPROC)load("glProgramUniform3ivEXT");
	cppgl_glProgramUniform4fEXT = (PFNGLPROGRAMUNIFORM4FEXTPROC)load("glProgramUniform4fEXT");
	cppgl_glProgramUniform4fvEXT = (PFNGLPROGRAMUNIFORM4FVEXTPROC)load("glProgramUniform4fvEXT");
	cppgl_glProgramUniform4iEXT = (PFNGLPROGRAMUNIFORM4IEXTPROC)load("glProgramUniform4iEXT");
	cppgl_glProgramUniform4ivEXT = (PFNGLPROGRAMUNIFORM4IVEXTPROC)load("glProgramUniform4ivEXT");
	cppgl_glProgramUniformMatrix2fvEXT = (PFNGLPROGRAMUNIFORMMATRIX2FVEXTPROC)load("glProgramUniformMatrix2fvEXT");
	cppgl_glProgramUniformMatrix3fvEXT = (PFNGLPROGRAMUNIFORMMATRIX3FVEXTPROC)load("glProgramUniformMatrix3fvEXT");
	cppgl_glProgramUniformMatrix4fvEXT = (PFNGLPROGRAMUNIFORMMATRIX4FVEXTPROC)load("glProgramUniformMatrix4fvEXT");
	cppgl_glUseProgramStagesEXT = (PFNGLUSEPROGRAMSTAGESEXTPROC)load("glUseProgramStagesEXT");
	cppgl_glValidateProgramPipelineEXT = (PFNGLVALIDATEPROGRAMPIPELINEEXTPROC)load("glValidateProgramPipelineEXT");
	cppgl_glProgramUniform1uiEXT = (PFNGLPROGRAMUNIFORM1UIEXTPROC)load("glProgramUniform1uiEXT");
	cppgl_glProgramUniform2uiEXT = (PFNGLPROGRAMUNIFORM2UIEXTPROC)load("glProgramUniform2uiEXT");
	cppgl_glProgramUniform3uiEXT = (PFNGLPROGRAMUNIFORM3UIEXTPROC)load("glProgramUniform3uiEXT");
	cppgl_glProgramUniform4uiEXT = (PFNGLPROGRAMUNIFORM4UIEXTPROC)load("glProgramUniform4uiEXT");
	cppgl_glProgramUniform1uivEXT = (PFNGLPROGRAMUNIFORM1UIVEXTPROC)load("glProgramUniform1uivEXT");
	cppgl_glProgramUniform2uivEXT = (PFNGLPROGRAMUNIFORM2UIVEXTPROC)load("glProgramUniform2uivEXT");
	cppgl_glProgramUniform3uivEXT = (PFNGLPROGRAMUNIFORM3UIVEXTPROC)load("glProgramUniform3uivEXT");
	cppgl_glProgramUniform4uivEXT = (PFNGLPROGRAMUNIFORM4UIVEXTPROC)load("glProgramUniform4uivEXT");
	cppgl_glProgramUniformMatrix4fvEXT = (PFNGLPROGRAMUNIFORMMATRIX4FVEXTPROC)load("glProgramUniformMatrix4fvEXT");
	cppgl_glProgramUniformMatrix2x3fvEXT = (PFNGLPROGRAMUNIFORMMATRIX2X3FVEXTPROC)load("glProgramUniformMatrix2x3fvEXT");
	cppgl_glProgramUniformMatrix3x2fvEXT = (PFNGLPROGRAMUNIFORMMATRIX3X2FVEXTPROC)load("glProgramUniformMatrix3x2fvEXT");
	cppgl_glProgramUniformMatrix2x4fvEXT = (PFNGLPROGRAMUNIFORMMATRIX2X4FVEXTPROC)load("glProgramUniformMatrix2x4fvEXT");
	cppgl_glProgramUniformMatrix4x2fvEXT = (PFNGLPROGRAMUNIFORMMATRIX4X2FVEXTPROC)load("glProgramUniformMatrix4x2fvEXT");
	cppgl_glProgramUniformMatrix3x4fvEXT = (PFNGLPROGRAMUNIFORMMATRIX3X4FVEXTPROC)load("glProgramUniformMatrix3x4fvEXT");
	cppgl_glProgramUniformMatrix4x3fvEXT = (PFNGLPROGRAMUNIFORMMATRIX4X3FVEXTPROC)load("glProgramUniformMatrix4x3fvEXT");
}
static void load_GL_EXT_shader_image_load_store(CPPGLloadproc load) {
	if(!CPPGL_GL_EXT_shader_image_load_store) return;
	cppgl_glBindImageTextureEXT = (PFNGLBINDIMAGETEXTUREEXTPROC)load("glBindImageTextureEXT");
	cppgl_glMemoryBarrierEXT = (PFNGLMEMORYBARRIEREXTPROC)load("glMemoryBarrierEXT");
}
static void load_GL_EXT_stencil_clear_tag(CPPGLloadproc load) {
	if(!CPPGL_GL_EXT_stencil_clear_tag) return;
	cppgl_glStencilClearTagEXT = (PFNGLSTENCILCLEARTAGEXTPROC)load("glStencilClearTagEXT");
}
static void load_GL_EXT_stencil_two_side(CPPGLloadproc load) {
	if(!CPPGL_GL_EXT_stencil_two_side) return;
	cppgl_glActiveStencilFaceEXT = (PFNGLACTIVESTENCILFACEEXTPROC)load("glActiveStencilFaceEXT");
}
static void load_GL_EXT_subtexture(CPPGLloadproc load) {
	if(!CPPGL_GL_EXT_subtexture) return;
	cppgl_glTexSubImage1DEXT = (PFNGLTEXSUBIMAGE1DEXTPROC)load("glTexSubImage1DEXT");
	cppgl_glTexSubImage2DEXT = (PFNGLTEXSUBIMAGE2DEXTPROC)load("glTexSubImage2DEXT");
}
static void load_GL_EXT_texture3D(CPPGLloadproc load) {
	if(!CPPGL_GL_EXT_texture3D) return;
	cppgl_glTexImage3DEXT = (PFNGLTEXIMAGE3DEXTPROC)load("glTexImage3DEXT");
	cppgl_glTexSubImage3DEXT = (PFNGLTEXSUBIMAGE3DEXTPROC)load("glTexSubImage3DEXT");
}
static void load_GL_EXT_texture_array(CPPGLloadproc load) {
	if(!CPPGL_GL_EXT_texture_array) return;
	cppgl_glFramebufferTextureLayerEXT = (PFNGLFRAMEBUFFERTEXTURELAYEREXTPROC)load("glFramebufferTextureLayerEXT");
}
static void load_GL_EXT_texture_buffer_object(CPPGLloadproc load) {
	if(!CPPGL_GL_EXT_texture_buffer_object) return;
	cppgl_glTexBufferEXT = (PFNGLTEXBUFFEREXTPROC)load("glTexBufferEXT");
}
static void load_GL_EXT_texture_filter_minmax(CPPGLloadproc load) {
	if(!CPPGL_GL_EXT_texture_filter_minmax) return;
	cppgl_glRasterSamplesEXT = (PFNGLRASTERSAMPLESEXTPROC)load("glRasterSamplesEXT");
}
static void load_GL_EXT_texture_integer(CPPGLloadproc load) {
	if(!CPPGL_GL_EXT_texture_integer) return;
	cppgl_glTexParameterIivEXT = (PFNGLTEXPARAMETERIIVEXTPROC)load("glTexParameterIivEXT");
	cppgl_glTexParameterIuivEXT = (PFNGLTEXPARAMETERIUIVEXTPROC)load("glTexParameterIuivEXT");
	cppgl_glGetTexParameterIivEXT = (PFNGLGETTEXPARAMETERIIVEXTPROC)load("glGetTexParameterIivEXT");
	cppgl_glGetTexParameterIuivEXT = (PFNGLGETTEXPARAMETERIUIVEXTPROC)load("glGetTexParameterIuivEXT");
	cppgl_glClearColorIiEXT = (PFNGLCLEARCOLORIIEXTPROC)load("glClearColorIiEXT");
	cppgl_glClearColorIuiEXT = (PFNGLCLEARCOLORIUIEXTPROC)load("glClearColorIuiEXT");
}
static void load_GL_EXT_texture_object(CPPGLloadproc load) {
	if(!CPPGL_GL_EXT_texture_object) return;
	cppgl_glAreTexturesResidentEXT = (PFNGLARETEXTURESRESIDENTEXTPROC)load("glAreTexturesResidentEXT");
	cppgl_glBindTextureEXT = (PFNGLBINDTEXTUREEXTPROC)load("glBindTextureEXT");
	cppgl_glDeleteTexturesEXT = (PFNGLDELETETEXTURESEXTPROC)load("glDeleteTexturesEXT");
	cppgl_glGenTexturesEXT = (PFNGLGENTEXTURESEXTPROC)load("glGenTexturesEXT");
	cppgl_glIsTextureEXT = (PFNGLISTEXTUREEXTPROC)load("glIsTextureEXT");
	cppgl_glPrioritizeTexturesEXT = (PFNGLPRIORITIZETEXTURESEXTPROC)load("glPrioritizeTexturesEXT");
}
static void load_GL_EXT_texture_perturb_normal(CPPGLloadproc load) {
	if(!CPPGL_GL_EXT_texture_perturb_normal) return;
	cppgl_glTextureNormalEXT = (PFNGLTEXTURENORMALEXTPROC)load("glTextureNormalEXT");
}
static void load_GL_EXT_timer_query(CPPGLloadproc load) {
	if(!CPPGL_GL_EXT_timer_query) return;
	cppgl_glGetQueryObjecti64vEXT = (PFNGLGETQUERYOBJECTI64VEXTPROC)load("glGetQueryObjecti64vEXT");
	cppgl_glGetQueryObjectui64vEXT = (PFNGLGETQUERYOBJECTUI64VEXTPROC)load("glGetQueryObjectui64vEXT");
}
static void load_GL_EXT_transform_feedback(CPPGLloadproc load) {
	if(!CPPGL_GL_EXT_transform_feedback) return;
	cppgl_glBeginTransformFeedbackEXT = (PFNGLBEGINTRANSFORMFEEDBACKEXTPROC)load("glBeginTransformFeedbackEXT");
	cppgl_glEndTransformFeedbackEXT = (PFNGLENDTRANSFORMFEEDBACKEXTPROC)load("glEndTransformFeedbackEXT");
	cppgl_glBindBufferRangeEXT = (PFNGLBINDBUFFERRANGEEXTPROC)load("glBindBufferRangeEXT");
	cppgl_glBindBufferOffsetEXT = (PFNGLBINDBUFFEROFFSETEXTPROC)load("glBindBufferOffsetEXT");
	cppgl_glBindBufferBaseEXT = (PFNGLBINDBUFFERBASEEXTPROC)load("glBindBufferBaseEXT");
	cppgl_glTransformFeedbackVaryingsEXT = (PFNGLTRANSFORMFEEDBACKVARYINGSEXTPROC)load("glTransformFeedbackVaryingsEXT");
	cppgl_glGetTransformFeedbackVaryingEXT = (PFNGLGETTRANSFORMFEEDBACKVARYINGEXTPROC)load("glGetTransformFeedbackVaryingEXT");
}
static void load_GL_EXT_vertex_array(CPPGLloadproc load) {
	if(!CPPGL_GL_EXT_vertex_array) return;
	cppgl_glArrayElementEXT = (PFNGLARRAYELEMENTEXTPROC)load("glArrayElementEXT");
	cppgl_glColorPointerEXT = (PFNGLCOLORPOINTEREXTPROC)load("glColorPointerEXT");
	cppgl_glDrawArraysEXT = (PFNGLDRAWARRAYSEXTPROC)load("glDrawArraysEXT");
	cppgl_glEdgeFlagPointerEXT = (PFNGLEDGEFLAGPOINTEREXTPROC)load("glEdgeFlagPointerEXT");
	cppgl_glGetPointervEXT = (PFNGLGETPOINTERVEXTPROC)load("glGetPointervEXT");
	cppgl_glIndexPointerEXT = (PFNGLINDEXPOINTEREXTPROC)load("glIndexPointerEXT");
	cppgl_glNormalPointerEXT = (PFNGLNORMALPOINTEREXTPROC)load("glNormalPointerEXT");
	cppgl_glTexCoordPointerEXT = (PFNGLTEXCOORDPOINTEREXTPROC)load("glTexCoordPointerEXT");
	cppgl_glVertexPointerEXT = (PFNGLVERTEXPOINTEREXTPROC)load("glVertexPointerEXT");
}
static void load_GL_EXT_vertex_attrib_64bit(CPPGLloadproc load) {
	if(!CPPGL_GL_EXT_vertex_attrib_64bit) return;
	cppgl_glVertexAttribL1dEXT = (PFNGLVERTEXATTRIBL1DEXTPROC)load("glVertexAttribL1dEXT");
	cppgl_glVertexAttribL2dEXT = (PFNGLVERTEXATTRIBL2DEXTPROC)load("glVertexAttribL2dEXT");
	cppgl_glVertexAttribL3dEXT = (PFNGLVERTEXATTRIBL3DEXTPROC)load("glVertexAttribL3dEXT");
	cppgl_glVertexAttribL4dEXT = (PFNGLVERTEXATTRIBL4DEXTPROC)load("glVertexAttribL4dEXT");
	cppgl_glVertexAttribL1dvEXT = (PFNGLVERTEXATTRIBL1DVEXTPROC)load("glVertexAttribL1dvEXT");
	cppgl_glVertexAttribL2dvEXT = (PFNGLVERTEXATTRIBL2DVEXTPROC)load("glVertexAttribL2dvEXT");
	cppgl_glVertexAttribL3dvEXT = (PFNGLVERTEXATTRIBL3DVEXTPROC)load("glVertexAttribL3dvEXT");
	cppgl_glVertexAttribL4dvEXT = (PFNGLVERTEXATTRIBL4DVEXTPROC)load("glVertexAttribL4dvEXT");
	cppgl_glVertexAttribLPointerEXT = (PFNGLVERTEXATTRIBLPOINTEREXTPROC)load("glVertexAttribLPointerEXT");
	cppgl_glGetVertexAttribLdvEXT = (PFNGLGETVERTEXATTRIBLDVEXTPROC)load("glGetVertexAttribLdvEXT");
}
static void load_GL_EXT_vertex_shader(CPPGLloadproc load) {
	if(!CPPGL_GL_EXT_vertex_shader) return;
	cppgl_glBeginVertexShaderEXT = (PFNGLBEGINVERTEXSHADEREXTPROC)load("glBeginVertexShaderEXT");
	cppgl_glEndVertexShaderEXT = (PFNGLENDVERTEXSHADEREXTPROC)load("glEndVertexShaderEXT");
	cppgl_glBindVertexShaderEXT = (PFNGLBINDVERTEXSHADEREXTPROC)load("glBindVertexShaderEXT");
	cppgl_glGenVertexShadersEXT = (PFNGLGENVERTEXSHADERSEXTPROC)load("glGenVertexShadersEXT");
	cppgl_glDeleteVertexShaderEXT = (PFNGLDELETEVERTEXSHADEREXTPROC)load("glDeleteVertexShaderEXT");
	cppgl_glShaderOp1EXT = (PFNGLSHADEROP1EXTPROC)load("glShaderOp1EXT");
	cppgl_glShaderOp2EXT = (PFNGLSHADEROP2EXTPROC)load("glShaderOp2EXT");
	cppgl_glShaderOp3EXT = (PFNGLSHADEROP3EXTPROC)load("glShaderOp3EXT");
	cppgl_glSwizzleEXT = (PFNGLSWIZZLEEXTPROC)load("glSwizzleEXT");
	cppgl_glWriteMaskEXT = (PFNGLWRITEMASKEXTPROC)load("glWriteMaskEXT");
	cppgl_glInsertComponentEXT = (PFNGLINSERTCOMPONENTEXTPROC)load("glInsertComponentEXT");
	cppgl_glExtractComponentEXT = (PFNGLEXTRACTCOMPONENTEXTPROC)load("glExtractComponentEXT");
	cppgl_glGenSymbolsEXT = (PFNGLGENSYMBOLSEXTPROC)load("glGenSymbolsEXT");
	cppgl_glSetInvariantEXT = (PFNGLSETINVARIANTEXTPROC)load("glSetInvariantEXT");
	cppgl_glSetLocalConstantEXT = (PFNGLSETLOCALCONSTANTEXTPROC)load("glSetLocalConstantEXT");
	cppgl_glVariantbvEXT = (PFNGLVARIANTBVEXTPROC)load("glVariantbvEXT");
	cppgl_glVariantsvEXT = (PFNGLVARIANTSVEXTPROC)load("glVariantsvEXT");
	cppgl_glVariantivEXT = (PFNGLVARIANTIVEXTPROC)load("glVariantivEXT");
	cppgl_glVariantfvEXT = (PFNGLVARIANTFVEXTPROC)load("glVariantfvEXT");
	cppgl_glVariantdvEXT = (PFNGLVARIANTDVEXTPROC)load("glVariantdvEXT");
	cppgl_glVariantubvEXT = (PFNGLVARIANTUBVEXTPROC)load("glVariantubvEXT");
	cppgl_glVariantusvEXT = (PFNGLVARIANTUSVEXTPROC)load("glVariantusvEXT");
	cppgl_glVariantuivEXT = (PFNGLVARIANTUIVEXTPROC)load("glVariantuivEXT");
	cppgl_glVariantPointerEXT = (PFNGLVARIANTPOINTEREXTPROC)load("glVariantPointerEXT");
	cppgl_glEnableVariantClientStateEXT = (PFNGLENABLEVARIANTCLIENTSTATEEXTPROC)load("glEnableVariantClientStateEXT");
	cppgl_glDisableVariantClientStateEXT = (PFNGLDISABLEVARIANTCLIENTSTATEEXTPROC)load("glDisableVariantClientStateEXT");
	cppgl_glBindLightParameterEXT = (PFNGLBINDLIGHTPARAMETEREXTPROC)load("glBindLightParameterEXT");
	cppgl_glBindMaterialParameterEXT = (PFNGLBINDMATERIALPARAMETEREXTPROC)load("glBindMaterialParameterEXT");
	cppgl_glBindTexGenParameterEXT = (PFNGLBINDTEXGENPARAMETEREXTPROC)load("glBindTexGenParameterEXT");
	cppgl_glBindTextureUnitParameterEXT = (PFNGLBINDTEXTUREUNITPARAMETEREXTPROC)load("glBindTextureUnitParameterEXT");
	cppgl_glBindParameterEXT = (PFNGLBINDPARAMETEREXTPROC)load("glBindParameterEXT");
	cppgl_glIsVariantEnabledEXT = (PFNGLISVARIANTENABLEDEXTPROC)load("glIsVariantEnabledEXT");
	cppgl_glGetVariantBooleanvEXT = (PFNGLGETVARIANTBOOLEANVEXTPROC)load("glGetVariantBooleanvEXT");
	cppgl_glGetVariantIntegervEXT = (PFNGLGETVARIANTINTEGERVEXTPROC)load("glGetVariantIntegervEXT");
	cppgl_glGetVariantFloatvEXT = (PFNGLGETVARIANTFLOATVEXTPROC)load("glGetVariantFloatvEXT");
	cppgl_glGetVariantPointervEXT = (PFNGLGETVARIANTPOINTERVEXTPROC)load("glGetVariantPointervEXT");
	cppgl_glGetInvariantBooleanvEXT = (PFNGLGETINVARIANTBOOLEANVEXTPROC)load("glGetInvariantBooleanvEXT");
	cppgl_glGetInvariantIntegervEXT = (PFNGLGETINVARIANTINTEGERVEXTPROC)load("glGetInvariantIntegervEXT");
	cppgl_glGetInvariantFloatvEXT = (PFNGLGETINVARIANTFLOATVEXTPROC)load("glGetInvariantFloatvEXT");
	cppgl_glGetLocalConstantBooleanvEXT = (PFNGLGETLOCALCONSTANTBOOLEANVEXTPROC)load("glGetLocalConstantBooleanvEXT");
	cppgl_glGetLocalConstantIntegervEXT = (PFNGLGETLOCALCONSTANTINTEGERVEXTPROC)load("glGetLocalConstantIntegervEXT");
	cppgl_glGetLocalConstantFloatvEXT = (PFNGLGETLOCALCONSTANTFLOATVEXTPROC)load("glGetLocalConstantFloatvEXT");
}
static void load_GL_EXT_vertex_weighting(CPPGLloadproc load) {
	if(!CPPGL_GL_EXT_vertex_weighting) return;
	cppgl_glVertexWeightfEXT = (PFNGLVERTEXWEIGHTFEXTPROC)load("glVertexWeightfEXT");
	cppgl_glVertexWeightfvEXT = (PFNGLVERTEXWEIGHTFVEXTPROC)load("glVertexWeightfvEXT");
	cppgl_glVertexWeightPointerEXT = (PFNGLVERTEXWEIGHTPOINTEREXTPROC)load("glVertexWeightPointerEXT");
}
static void load_GL_EXT_window_rectangles(CPPGLloadproc load) {
	if(!CPPGL_GL_EXT_window_rectangles) return;
	cppgl_glWindowRectanglesEXT = (PFNGLWINDOWRECTANGLESEXTPROC)load("glWindowRectanglesEXT");
}
static void load_GL_EXT_x11_sync_object(CPPGLloadproc load) {
	if(!CPPGL_GL_EXT_x11_sync_object) return;
	cppgl_glImportSyncEXT = (PFNGLIMPORTSYNCEXTPROC)load("glImportSyncEXT");
}
static void load_GL_GREMEDY_frame_terminator(CPPGLloadproc load) {
	if(!CPPGL_GL_GREMEDY_frame_terminator) return;
	cppgl_glFrameTerminatorGREMEDY = (PFNGLFRAMETERMINATORGREMEDYPROC)load("glFrameTerminatorGREMEDY");
}
static void load_GL_GREMEDY_string_marker(CPPGLloadproc load) {
	if(!CPPGL_GL_GREMEDY_string_marker) return;
	cppgl_glStringMarkerGREMEDY = (PFNGLSTRINGMARKERGREMEDYPROC)load("glStringMarkerGREMEDY");
}
static void load_GL_HP_image_transform(CPPGLloadproc load) {
	if(!CPPGL_GL_HP_image_transform) return;
	cppgl_glImageTransformParameteriHP = (PFNGLIMAGETRANSFORMPARAMETERIHPPROC)load("glImageTransformParameteriHP");
	cppgl_glImageTransformParameterfHP = (PFNGLIMAGETRANSFORMPARAMETERFHPPROC)load("glImageTransformParameterfHP");
	cppgl_glImageTransformParameterivHP = (PFNGLIMAGETRANSFORMPARAMETERIVHPPROC)load("glImageTransformParameterivHP");
	cppgl_glImageTransformParameterfvHP = (PFNGLIMAGETRANSFORMPARAMETERFVHPPROC)load("glImageTransformParameterfvHP");
	cppgl_glGetImageTransformParameterivHP = (PFNGLGETIMAGETRANSFORMPARAMETERIVHPPROC)load("glGetImageTransformParameterivHP");
	cppgl_glGetImageTransformParameterfvHP = (PFNGLGETIMAGETRANSFORMPARAMETERFVHPPROC)load("glGetImageTransformParameterfvHP");
}
static void load_GL_IBM_multimode_draw_arrays(CPPGLloadproc load) {
	if(!CPPGL_GL_IBM_multimode_draw_arrays) return;
	cppgl_glMultiModeDrawArraysIBM = (PFNGLMULTIMODEDRAWARRAYSIBMPROC)load("glMultiModeDrawArraysIBM");
	cppgl_glMultiModeDrawElementsIBM = (PFNGLMULTIMODEDRAWELEMENTSIBMPROC)load("glMultiModeDrawElementsIBM");
}
static void load_GL_IBM_static_data(CPPGLloadproc load) {
	if(!CPPGL_GL_IBM_static_data) return;
	cppgl_glFlushStaticDataIBM = (PFNGLFLUSHSTATICDATAIBMPROC)load("glFlushStaticDataIBM");
}
static void load_GL_IBM_vertex_array_lists(CPPGLloadproc load) {
	if(!CPPGL_GL_IBM_vertex_array_lists) return;
	cppgl_glColorPointerListIBM = (PFNGLCOLORPOINTERLISTIBMPROC)load("glColorPointerListIBM");
	cppgl_glSecondaryColorPointerListIBM = (PFNGLSECONDARYCOLORPOINTERLISTIBMPROC)load("glSecondaryColorPointerListIBM");
	cppgl_glEdgeFlagPointerListIBM = (PFNGLEDGEFLAGPOINTERLISTIBMPROC)load("glEdgeFlagPointerListIBM");
	cppgl_glFogCoordPointerListIBM = (PFNGLFOGCOORDPOINTERLISTIBMPROC)load("glFogCoordPointerListIBM");
	cppgl_glIndexPointerListIBM = (PFNGLINDEXPOINTERLISTIBMPROC)load("glIndexPointerListIBM");
	cppgl_glNormalPointerListIBM = (PFNGLNORMALPOINTERLISTIBMPROC)load("glNormalPointerListIBM");
	cppgl_glTexCoordPointerListIBM = (PFNGLTEXCOORDPOINTERLISTIBMPROC)load("glTexCoordPointerListIBM");
	cppgl_glVertexPointerListIBM = (PFNGLVERTEXPOINTERLISTIBMPROC)load("glVertexPointerListIBM");
}
static void load_GL_INGR_blend_func_separate(CPPGLloadproc load) {
	if(!CPPGL_GL_INGR_blend_func_separate) return;
	cppgl_glBlendFuncSeparateINGR = (PFNGLBLENDFUNCSEPARATEINGRPROC)load("glBlendFuncSeparateINGR");
}
static void load_GL_INTEL_framebuffer_CMAA(CPPGLloadproc load) {
	if(!CPPGL_GL_INTEL_framebuffer_CMAA) return;
	cppgl_glApplyFramebufferAttachmentCMAAINTEL = (PFNGLAPPLYFRAMEBUFFERATTACHMENTCMAAINTELPROC)load("glApplyFramebufferAttachmentCMAAINTEL");
}
static void load_GL_INTEL_map_texture(CPPGLloadproc load) {
	if(!CPPGL_GL_INTEL_map_texture) return;
	cppgl_glSyncTextureINTEL = (PFNGLSYNCTEXTUREINTELPROC)load("glSyncTextureINTEL");
	cppgl_glUnmapTexture2DINTEL = (PFNGLUNMAPTEXTURE2DINTELPROC)load("glUnmapTexture2DINTEL");
	cppgl_glMapTexture2DINTEL = (PFNGLMAPTEXTURE2DINTELPROC)load("glMapTexture2DINTEL");
}
static void load_GL_INTEL_parallel_arrays(CPPGLloadproc load) {
	if(!CPPGL_GL_INTEL_parallel_arrays) return;
	cppgl_glVertexPointervINTEL = (PFNGLVERTEXPOINTERVINTELPROC)load("glVertexPointervINTEL");
	cppgl_glNormalPointervINTEL = (PFNGLNORMALPOINTERVINTELPROC)load("glNormalPointervINTEL");
	cppgl_glColorPointervINTEL = (PFNGLCOLORPOINTERVINTELPROC)load("glColorPointervINTEL");
	cppgl_glTexCoordPointervINTEL = (PFNGLTEXCOORDPOINTERVINTELPROC)load("glTexCoordPointervINTEL");
}
static void load_GL_INTEL_performance_query(CPPGLloadproc load) {
	if(!CPPGL_GL_INTEL_performance_query) return;
	cppgl_glBeginPerfQueryINTEL = (PFNGLBEGINPERFQUERYINTELPROC)load("glBeginPerfQueryINTEL");
	cppgl_glCreatePerfQueryINTEL = (PFNGLCREATEPERFQUERYINTELPROC)load("glCreatePerfQueryINTEL");
	cppgl_glDeletePerfQueryINTEL = (PFNGLDELETEPERFQUERYINTELPROC)load("glDeletePerfQueryINTEL");
	cppgl_glEndPerfQueryINTEL = (PFNGLENDPERFQUERYINTELPROC)load("glEndPerfQueryINTEL");
	cppgl_glGetFirstPerfQueryIdINTEL = (PFNGLGETFIRSTPERFQUERYIDINTELPROC)load("glGetFirstPerfQueryIdINTEL");
	cppgl_glGetNextPerfQueryIdINTEL = (PFNGLGETNEXTPERFQUERYIDINTELPROC)load("glGetNextPerfQueryIdINTEL");
	cppgl_glGetPerfCounterInfoINTEL = (PFNGLGETPERFCOUNTERINFOINTELPROC)load("glGetPerfCounterInfoINTEL");
	cppgl_glGetPerfQueryDataINTEL = (PFNGLGETPERFQUERYDATAINTELPROC)load("glGetPerfQueryDataINTEL");
	cppgl_glGetPerfQueryIdByNameINTEL = (PFNGLGETPERFQUERYIDBYNAMEINTELPROC)load("glGetPerfQueryIdByNameINTEL");
	cppgl_glGetPerfQueryInfoINTEL = (PFNGLGETPERFQUERYINFOINTELPROC)load("glGetPerfQueryInfoINTEL");
}
static void load_GL_KHR_blend_equation_advanced(CPPGLloadproc load) {
	if(!CPPGL_GL_KHR_blend_equation_advanced) return;
	cppgl_glBlendBarrierKHR = (PFNGLBLENDBARRIERKHRPROC)load("glBlendBarrierKHR");
}
static void load_GL_KHR_debug(CPPGLloadproc load) {
	if(!CPPGL_GL_KHR_debug) return;
	cppgl_glDebugMessageControl = (PFNGLDEBUGMESSAGECONTROLPROC)load("glDebugMessageControl");
	cppgl_glDebugMessageInsert = (PFNGLDEBUGMESSAGEINSERTPROC)load("glDebugMessageInsert");
	cppgl_glDebugMessageCallback = (PFNGLDEBUGMESSAGECALLBACKPROC)load("glDebugMessageCallback");
	cppgl_glGetDebugMessageLog = (PFNGLGETDEBUGMESSAGELOGPROC)load("glGetDebugMessageLog");
	cppgl_glPushDebugGroup = (PFNGLPUSHDEBUGGROUPPROC)load("glPushDebugGroup");
	cppgl_glPopDebugGroup = (PFNGLPOPDEBUGGROUPPROC)load("glPopDebugGroup");
	cppgl_glObjectLabel = (PFNGLOBJECTLABELPROC)load("glObjectLabel");
	cppgl_glGetObjectLabel = (PFNGLGETOBJECTLABELPROC)load("glGetObjectLabel");
	cppgl_glObjectPtrLabel = (PFNGLOBJECTPTRLABELPROC)load("glObjectPtrLabel");
	cppgl_glGetObjectPtrLabel = (PFNGLGETOBJECTPTRLABELPROC)load("glGetObjectPtrLabel");
	cppgl_glGetPointerv = (PFNGLGETPOINTERVPROC)load("glGetPointerv");
	cppgl_glDebugMessageControlKHR = (PFNGLDEBUGMESSAGECONTROLKHRPROC)load("glDebugMessageControlKHR");
	cppgl_glDebugMessageInsertKHR = (PFNGLDEBUGMESSAGEINSERTKHRPROC)load("glDebugMessageInsertKHR");
	cppgl_glDebugMessageCallbackKHR = (PFNGLDEBUGMESSAGECALLBACKKHRPROC)load("glDebugMessageCallbackKHR");
	cppgl_glGetDebugMessageLogKHR = (PFNGLGETDEBUGMESSAGELOGKHRPROC)load("glGetDebugMessageLogKHR");
	cppgl_glPushDebugGroupKHR = (PFNGLPUSHDEBUGGROUPKHRPROC)load("glPushDebugGroupKHR");
	cppgl_glPopDebugGroupKHR = (PFNGLPOPDEBUGGROUPKHRPROC)load("glPopDebugGroupKHR");
	cppgl_glObjectLabelKHR = (PFNGLOBJECTLABELKHRPROC)load("glObjectLabelKHR");
	cppgl_glGetObjectLabelKHR = (PFNGLGETOBJECTLABELKHRPROC)load("glGetObjectLabelKHR");
	cppgl_glObjectPtrLabelKHR = (PFNGLOBJECTPTRLABELKHRPROC)load("glObjectPtrLabelKHR");
	cppgl_glGetObjectPtrLabelKHR = (PFNGLGETOBJECTPTRLABELKHRPROC)load("glGetObjectPtrLabelKHR");
	cppgl_glGetPointervKHR = (PFNGLGETPOINTERVKHRPROC)load("glGetPointervKHR");
}
static void load_GL_KHR_robustness(CPPGLloadproc load) {
	if(!CPPGL_GL_KHR_robustness) return;
	cppgl_glGetGraphicsResetStatus = (PFNGLGETGRAPHICSRESETSTATUSPROC)load("glGetGraphicsResetStatus");
	cppgl_glReadnPixels = (PFNGLREADNPIXELSPROC)load("glReadnPixels");
	cppgl_glGetnUniformfv = (PFNGLGETNUNIFORMFVPROC)load("glGetnUniformfv");
	cppgl_glGetnUniformiv = (PFNGLGETNUNIFORMIVPROC)load("glGetnUniformiv");
	cppgl_glGetnUniformuiv = (PFNGLGETNUNIFORMUIVPROC)load("glGetnUniformuiv");
	cppgl_glGetGraphicsResetStatusKHR = (PFNGLGETGRAPHICSRESETSTATUSKHRPROC)load("glGetGraphicsResetStatusKHR");
	cppgl_glReadnPixelsKHR = (PFNGLREADNPIXELSKHRPROC)load("glReadnPixelsKHR");
	cppgl_glGetnUniformfvKHR = (PFNGLGETNUNIFORMFVKHRPROC)load("glGetnUniformfvKHR");
	cppgl_glGetnUniformivKHR = (PFNGLGETNUNIFORMIVKHRPROC)load("glGetnUniformivKHR");
	cppgl_glGetnUniformuivKHR = (PFNGLGETNUNIFORMUIVKHRPROC)load("glGetnUniformuivKHR");
}
static void load_GL_MESA_resize_buffers(CPPGLloadproc load) {
	if(!CPPGL_GL_MESA_resize_buffers) return;
	cppgl_glResizeBuffersMESA = (PFNGLRESIZEBUFFERSMESAPROC)load("glResizeBuffersMESA");
}
static void load_GL_MESA_window_pos(CPPGLloadproc load) {
	if(!CPPGL_GL_MESA_window_pos) return;
	cppgl_glWindowPos2dMESA = (PFNGLWINDOWPOS2DMESAPROC)load("glWindowPos2dMESA");
	cppgl_glWindowPos2dvMESA = (PFNGLWINDOWPOS2DVMESAPROC)load("glWindowPos2dvMESA");
	cppgl_glWindowPos2fMESA = (PFNGLWINDOWPOS2FMESAPROC)load("glWindowPos2fMESA");
	cppgl_glWindowPos2fvMESA = (PFNGLWINDOWPOS2FVMESAPROC)load("glWindowPos2fvMESA");
	cppgl_glWindowPos2iMESA = (PFNGLWINDOWPOS2IMESAPROC)load("glWindowPos2iMESA");
	cppgl_glWindowPos2ivMESA = (PFNGLWINDOWPOS2IVMESAPROC)load("glWindowPos2ivMESA");
	cppgl_glWindowPos2sMESA = (PFNGLWINDOWPOS2SMESAPROC)load("glWindowPos2sMESA");
	cppgl_glWindowPos2svMESA = (PFNGLWINDOWPOS2SVMESAPROC)load("glWindowPos2svMESA");
	cppgl_glWindowPos3dMESA = (PFNGLWINDOWPOS3DMESAPROC)load("glWindowPos3dMESA");
	cppgl_glWindowPos3dvMESA = (PFNGLWINDOWPOS3DVMESAPROC)load("glWindowPos3dvMESA");
	cppgl_glWindowPos3fMESA = (PFNGLWINDOWPOS3FMESAPROC)load("glWindowPos3fMESA");
	cppgl_glWindowPos3fvMESA = (PFNGLWINDOWPOS3FVMESAPROC)load("glWindowPos3fvMESA");
	cppgl_glWindowPos3iMESA = (PFNGLWINDOWPOS3IMESAPROC)load("glWindowPos3iMESA");
	cppgl_glWindowPos3ivMESA = (PFNGLWINDOWPOS3IVMESAPROC)load("glWindowPos3ivMESA");
	cppgl_glWindowPos3sMESA = (PFNGLWINDOWPOS3SMESAPROC)load("glWindowPos3sMESA");
	cppgl_glWindowPos3svMESA = (PFNGLWINDOWPOS3SVMESAPROC)load("glWindowPos3svMESA");
	cppgl_glWindowPos4dMESA = (PFNGLWINDOWPOS4DMESAPROC)load("glWindowPos4dMESA");
	cppgl_glWindowPos4dvMESA = (PFNGLWINDOWPOS4DVMESAPROC)load("glWindowPos4dvMESA");
	cppgl_glWindowPos4fMESA = (PFNGLWINDOWPOS4FMESAPROC)load("glWindowPos4fMESA");
	cppgl_glWindowPos4fvMESA = (PFNGLWINDOWPOS4FVMESAPROC)load("glWindowPos4fvMESA");
	cppgl_glWindowPos4iMESA = (PFNGLWINDOWPOS4IMESAPROC)load("glWindowPos4iMESA");
	cppgl_glWindowPos4ivMESA = (PFNGLWINDOWPOS4IVMESAPROC)load("glWindowPos4ivMESA");
	cppgl_glWindowPos4sMESA = (PFNGLWINDOWPOS4SMESAPROC)load("glWindowPos4sMESA");
	cppgl_glWindowPos4svMESA = (PFNGLWINDOWPOS4SVMESAPROC)load("glWindowPos4svMESA");
}
static void load_GL_NVX_conditional_render(CPPGLloadproc load) {
	if(!CPPGL_GL_NVX_conditional_render) return;
	cppgl_glBeginConditionalRenderNVX = (PFNGLBEGINCONDITIONALRENDERNVXPROC)load("glBeginConditionalRenderNVX");
	cppgl_glEndConditionalRenderNVX = (PFNGLENDCONDITIONALRENDERNVXPROC)load("glEndConditionalRenderNVX");
}
static void load_GL_NV_bindless_multi_draw_indirect(CPPGLloadproc load) {
	if(!CPPGL_GL_NV_bindless_multi_draw_indirect) return;
	cppgl_glMultiDrawArraysIndirectBindlessNV = (PFNGLMULTIDRAWARRAYSINDIRECTBINDLESSNVPROC)load("glMultiDrawArraysIndirectBindlessNV");
	cppgl_glMultiDrawElementsIndirectBindlessNV = (PFNGLMULTIDRAWELEMENTSINDIRECTBINDLESSNVPROC)load("glMultiDrawElementsIndirectBindlessNV");
}
static void load_GL_NV_bindless_multi_draw_indirect_count(CPPGLloadproc load) {
	if(!CPPGL_GL_NV_bindless_multi_draw_indirect_count) return;
	cppgl_glMultiDrawArraysIndirectBindlessCountNV = (PFNGLMULTIDRAWARRAYSINDIRECTBINDLESSCOUNTNVPROC)load("glMultiDrawArraysIndirectBindlessCountNV");
	cppgl_glMultiDrawElementsIndirectBindlessCountNV = (PFNGLMULTIDRAWELEMENTSINDIRECTBINDLESSCOUNTNVPROC)load("glMultiDrawElementsIndirectBindlessCountNV");
}
static void load_GL_NV_bindless_texture(CPPGLloadproc load) {
	if(!CPPGL_GL_NV_bindless_texture) return;
	cppgl_glGetTextureHandleNV = (PFNGLGETTEXTUREHANDLENVPROC)load("glGetTextureHandleNV");
	cppgl_glGetTextureSamplerHandleNV = (PFNGLGETTEXTURESAMPLERHANDLENVPROC)load("glGetTextureSamplerHandleNV");
	cppgl_glMakeTextureHandleResidentNV = (PFNGLMAKETEXTUREHANDLERESIDENTNVPROC)load("glMakeTextureHandleResidentNV");
	cppgl_glMakeTextureHandleNonResidentNV = (PFNGLMAKETEXTUREHANDLENONRESIDENTNVPROC)load("glMakeTextureHandleNonResidentNV");
	cppgl_glGetImageHandleNV = (PFNGLGETIMAGEHANDLENVPROC)load("glGetImageHandleNV");
	cppgl_glMakeImageHandleResidentNV = (PFNGLMAKEIMAGEHANDLERESIDENTNVPROC)load("glMakeImageHandleResidentNV");
	cppgl_glMakeImageHandleNonResidentNV = (PFNGLMAKEIMAGEHANDLENONRESIDENTNVPROC)load("glMakeImageHandleNonResidentNV");
	cppgl_glUniformHandleui64NV = (PFNGLUNIFORMHANDLEUI64NVPROC)load("glUniformHandleui64NV");
	cppgl_glUniformHandleui64vNV = (PFNGLUNIFORMHANDLEUI64VNVPROC)load("glUniformHandleui64vNV");
	cppgl_glProgramUniformHandleui64NV = (PFNGLPROGRAMUNIFORMHANDLEUI64NVPROC)load("glProgramUniformHandleui64NV");
	cppgl_glProgramUniformHandleui64vNV = (PFNGLPROGRAMUNIFORMHANDLEUI64VNVPROC)load("glProgramUniformHandleui64vNV");
	cppgl_glIsTextureHandleResidentNV = (PFNGLISTEXTUREHANDLERESIDENTNVPROC)load("glIsTextureHandleResidentNV");
	cppgl_glIsImageHandleResidentNV = (PFNGLISIMAGEHANDLERESIDENTNVPROC)load("glIsImageHandleResidentNV");
}
static void load_GL_NV_blend_equation_advanced(CPPGLloadproc load) {
	if(!CPPGL_GL_NV_blend_equation_advanced) return;
	cppgl_glBlendParameteriNV = (PFNGLBLENDPARAMETERINVPROC)load("glBlendParameteriNV");
	cppgl_glBlendBarrierNV = (PFNGLBLENDBARRIERNVPROC)load("glBlendBarrierNV");
}
static void load_GL_NV_clip_space_w_scaling(CPPGLloadproc load) {
	if(!CPPGL_GL_NV_clip_space_w_scaling) return;
	cppgl_glViewportPositionWScaleNV = (PFNGLVIEWPORTPOSITIONWSCALENVPROC)load("glViewportPositionWScaleNV");
}
static void load_GL_NV_command_list(CPPGLloadproc load) {
	if(!CPPGL_GL_NV_command_list) return;
	cppgl_glCreateStatesNV = (PFNGLCREATESTATESNVPROC)load("glCreateStatesNV");
	cppgl_glDeleteStatesNV = (PFNGLDELETESTATESNVPROC)load("glDeleteStatesNV");
	cppgl_glIsStateNV = (PFNGLISSTATENVPROC)load("glIsStateNV");
	cppgl_glStateCaptureNV = (PFNGLSTATECAPTURENVPROC)load("glStateCaptureNV");
	cppgl_glGetCommandHeaderNV = (PFNGLGETCOMMANDHEADERNVPROC)load("glGetCommandHeaderNV");
	cppgl_glGetStageIndexNV = (PFNGLGETSTAGEINDEXNVPROC)load("glGetStageIndexNV");
	cppgl_glDrawCommandsNV = (PFNGLDRAWCOMMANDSNVPROC)load("glDrawCommandsNV");
	cppgl_glDrawCommandsAddressNV = (PFNGLDRAWCOMMANDSADDRESSNVPROC)load("glDrawCommandsAddressNV");
	cppgl_glDrawCommandsStatesNV = (PFNGLDRAWCOMMANDSSTATESNVPROC)load("glDrawCommandsStatesNV");
	cppgl_glDrawCommandsStatesAddressNV = (PFNGLDRAWCOMMANDSSTATESADDRESSNVPROC)load("glDrawCommandsStatesAddressNV");
	cppgl_glCreateCommandListsNV = (PFNGLCREATECOMMANDLISTSNVPROC)load("glCreateCommandListsNV");
	cppgl_glDeleteCommandListsNV = (PFNGLDELETECOMMANDLISTSNVPROC)load("glDeleteCommandListsNV");
	cppgl_glIsCommandListNV = (PFNGLISCOMMANDLISTNVPROC)load("glIsCommandListNV");
	cppgl_glListDrawCommandsStatesClientNV = (PFNGLLISTDRAWCOMMANDSSTATESCLIENTNVPROC)load("glListDrawCommandsStatesClientNV");
	cppgl_glCommandListSegmentsNV = (PFNGLCOMMANDLISTSEGMENTSNVPROC)load("glCommandListSegmentsNV");
	cppgl_glCompileCommandListNV = (PFNGLCOMPILECOMMANDLISTNVPROC)load("glCompileCommandListNV");
	cppgl_glCallCommandListNV = (PFNGLCALLCOMMANDLISTNVPROC)load("glCallCommandListNV");
}
static void load_GL_NV_conditional_render(CPPGLloadproc load) {
	if(!CPPGL_GL_NV_conditional_render) return;
	cppgl_glBeginConditionalRenderNV = (PFNGLBEGINCONDITIONALRENDERNVPROC)load("glBeginConditionalRenderNV");
	cppgl_glEndConditionalRenderNV = (PFNGLENDCONDITIONALRENDERNVPROC)load("glEndConditionalRenderNV");
}
static void load_GL_NV_conservative_raster(CPPGLloadproc load) {
	if(!CPPGL_GL_NV_conservative_raster) return;
	cppgl_glSubpixelPrecisionBiasNV = (PFNGLSUBPIXELPRECISIONBIASNVPROC)load("glSubpixelPrecisionBiasNV");
}
static void load_GL_NV_conservative_raster_dilate(CPPGLloadproc load) {
	if(!CPPGL_GL_NV_conservative_raster_dilate) return;
	cppgl_glConservativeRasterParameterfNV = (PFNGLCONSERVATIVERASTERPARAMETERFNVPROC)load("glConservativeRasterParameterfNV");
}
static void load_GL_NV_conservative_raster_pre_snap_triangles(CPPGLloadproc load) {
	if(!CPPGL_GL_NV_conservative_raster_pre_snap_triangles) return;
	cppgl_glConservativeRasterParameteriNV = (PFNGLCONSERVATIVERASTERPARAMETERINVPROC)load("glConservativeRasterParameteriNV");
}
static void load_GL_NV_copy_image(CPPGLloadproc load) {
	if(!CPPGL_GL_NV_copy_image) return;
	cppgl_glCopyImageSubDataNV = (PFNGLCOPYIMAGESUBDATANVPROC)load("glCopyImageSubDataNV");
}
static void load_GL_NV_depth_buffer_float(CPPGLloadproc load) {
	if(!CPPGL_GL_NV_depth_buffer_float) return;
	cppgl_glDepthRangedNV = (PFNGLDEPTHRANGEDNVPROC)load("glDepthRangedNV");
	cppgl_glClearDepthdNV = (PFNGLCLEARDEPTHDNVPROC)load("glClearDepthdNV");
	cppgl_glDepthBoundsdNV = (PFNGLDEPTHBOUNDSDNVPROC)load("glDepthBoundsdNV");
}
static void load_GL_NV_draw_texture(CPPGLloadproc load) {
	if(!CPPGL_GL_NV_draw_texture) return;
	cppgl_glDrawTextureNV = (PFNGLDRAWTEXTURENVPROC)load("glDrawTextureNV");
}
static void load_GL_NV_evaluators(CPPGLloadproc load) {
	if(!CPPGL_GL_NV_evaluators) return;
	cppgl_glMapControlPointsNV = (PFNGLMAPCONTROLPOINTSNVPROC)load("glMapControlPointsNV");
	cppgl_glMapParameterivNV = (PFNGLMAPPARAMETERIVNVPROC)load("glMapParameterivNV");
	cppgl_glMapParameterfvNV = (PFNGLMAPPARAMETERFVNVPROC)load("glMapParameterfvNV");
	cppgl_glGetMapControlPointsNV = (PFNGLGETMAPCONTROLPOINTSNVPROC)load("glGetMapControlPointsNV");
	cppgl_glGetMapParameterivNV = (PFNGLGETMAPPARAMETERIVNVPROC)load("glGetMapParameterivNV");
	cppgl_glGetMapParameterfvNV = (PFNGLGETMAPPARAMETERFVNVPROC)load("glGetMapParameterfvNV");
	cppgl_glGetMapAttribParameterivNV = (PFNGLGETMAPATTRIBPARAMETERIVNVPROC)load("glGetMapAttribParameterivNV");
	cppgl_glGetMapAttribParameterfvNV = (PFNGLGETMAPATTRIBPARAMETERFVNVPROC)load("glGetMapAttribParameterfvNV");
	cppgl_glEvalMapsNV = (PFNGLEVALMAPSNVPROC)load("glEvalMapsNV");
}
static void load_GL_NV_explicit_multisample(CPPGLloadproc load) {
	if(!CPPGL_GL_NV_explicit_multisample) return;
	cppgl_glGetMultisamplefvNV = (PFNGLGETMULTISAMPLEFVNVPROC)load("glGetMultisamplefvNV");
	cppgl_glSampleMaskIndexedNV = (PFNGLSAMPLEMASKINDEXEDNVPROC)load("glSampleMaskIndexedNV");
	cppgl_glTexRenderbufferNV = (PFNGLTEXRENDERBUFFERNVPROC)load("glTexRenderbufferNV");
}
static void load_GL_NV_fence(CPPGLloadproc load) {
	if(!CPPGL_GL_NV_fence) return;
	cppgl_glDeleteFencesNV = (PFNGLDELETEFENCESNVPROC)load("glDeleteFencesNV");
	cppgl_glGenFencesNV = (PFNGLGENFENCESNVPROC)load("glGenFencesNV");
	cppgl_glIsFenceNV = (PFNGLISFENCENVPROC)load("glIsFenceNV");
	cppgl_glTestFenceNV = (PFNGLTESTFENCENVPROC)load("glTestFenceNV");
	cppgl_glGetFenceivNV = (PFNGLGETFENCEIVNVPROC)load("glGetFenceivNV");
	cppgl_glFinishFenceNV = (PFNGLFINISHFENCENVPROC)load("glFinishFenceNV");
	cppgl_glSetFenceNV = (PFNGLSETFENCENVPROC)load("glSetFenceNV");
}
static void load_GL_NV_fragment_coverage_to_color(CPPGLloadproc load) {
	if(!CPPGL_GL_NV_fragment_coverage_to_color) return;
	cppgl_glFragmentCoverageColorNV = (PFNGLFRAGMENTCOVERAGECOLORNVPROC)load("glFragmentCoverageColorNV");
}
static void load_GL_NV_fragment_program(CPPGLloadproc load) {
	if(!CPPGL_GL_NV_fragment_program) return;
	cppgl_glProgramNamedParameter4fNV = (PFNGLPROGRAMNAMEDPARAMETER4FNVPROC)load("glProgramNamedParameter4fNV");
	cppgl_glProgramNamedParameter4fvNV = (PFNGLPROGRAMNAMEDPARAMETER4FVNVPROC)load("glProgramNamedParameter4fvNV");
	cppgl_glProgramNamedParameter4dNV = (PFNGLPROGRAMNAMEDPARAMETER4DNVPROC)load("glProgramNamedParameter4dNV");
	cppgl_glProgramNamedParameter4dvNV = (PFNGLPROGRAMNAMEDPARAMETER4DVNVPROC)load("glProgramNamedParameter4dvNV");
	cppgl_glGetProgramNamedParameterfvNV = (PFNGLGETPROGRAMNAMEDPARAMETERFVNVPROC)load("glGetProgramNamedParameterfvNV");
	cppgl_glGetProgramNamedParameterdvNV = (PFNGLGETPROGRAMNAMEDPARAMETERDVNVPROC)load("glGetProgramNamedParameterdvNV");
}
static void load_GL_NV_framebuffer_mixed_samples(CPPGLloadproc load) {
	if(!CPPGL_GL_NV_framebuffer_mixed_samples) return;
	cppgl_glRasterSamplesEXT = (PFNGLRASTERSAMPLESEXTPROC)load("glRasterSamplesEXT");
	cppgl_glCoverageModulationTableNV = (PFNGLCOVERAGEMODULATIONTABLENVPROC)load("glCoverageModulationTableNV");
	cppgl_glGetCoverageModulationTableNV = (PFNGLGETCOVERAGEMODULATIONTABLENVPROC)load("glGetCoverageModulationTableNV");
	cppgl_glCoverageModulationNV = (PFNGLCOVERAGEMODULATIONNVPROC)load("glCoverageModulationNV");
}
static void load_GL_NV_framebuffer_multisample_coverage(CPPGLloadproc load) {
	if(!CPPGL_GL_NV_framebuffer_multisample_coverage) return;
	cppgl_glRenderbufferStorageMultisampleCoverageNV = (PFNGLRENDERBUFFERSTORAGEMULTISAMPLECOVERAGENVPROC)load("glRenderbufferStorageMultisampleCoverageNV");
}
static void load_GL_NV_geometry_program4(CPPGLloadproc load) {
	if(!CPPGL_GL_NV_geometry_program4) return;
	cppgl_glProgramVertexLimitNV = (PFNGLPROGRAMVERTEXLIMITNVPROC)load("glProgramVertexLimitNV");
	cppgl_glFramebufferTextureEXT = (PFNGLFRAMEBUFFERTEXTUREEXTPROC)load("glFramebufferTextureEXT");
	cppgl_glFramebufferTextureLayerEXT = (PFNGLFRAMEBUFFERTEXTURELAYEREXTPROC)load("glFramebufferTextureLayerEXT");
	cppgl_glFramebufferTextureFaceEXT = (PFNGLFRAMEBUFFERTEXTUREFACEEXTPROC)load("glFramebufferTextureFaceEXT");
}
static void load_GL_NV_gpu_program4(CPPGLloadproc load) {
	if(!CPPGL_GL_NV_gpu_program4) return;
	cppgl_glProgramLocalParameterI4iNV = (PFNGLPROGRAMLOCALPARAMETERI4INVPROC)load("glProgramLocalParameterI4iNV");
	cppgl_glProgramLocalParameterI4ivNV = (PFNGLPROGRAMLOCALPARAMETERI4IVNVPROC)load("glProgramLocalParameterI4ivNV");
	cppgl_glProgramLocalParametersI4ivNV = (PFNGLPROGRAMLOCALPARAMETERSI4IVNVPROC)load("glProgramLocalParametersI4ivNV");
	cppgl_glProgramLocalParameterI4uiNV = (PFNGLPROGRAMLOCALPARAMETERI4UINVPROC)load("glProgramLocalParameterI4uiNV");
	cppgl_glProgramLocalParameterI4uivNV = (PFNGLPROGRAMLOCALPARAMETERI4UIVNVPROC)load("glProgramLocalParameterI4uivNV");
	cppgl_glProgramLocalParametersI4uivNV = (PFNGLPROGRAMLOCALPARAMETERSI4UIVNVPROC)load("glProgramLocalParametersI4uivNV");
	cppgl_glProgramEnvParameterI4iNV = (PFNGLPROGRAMENVPARAMETERI4INVPROC)load("glProgramEnvParameterI4iNV");
	cppgl_glProgramEnvParameterI4ivNV = (PFNGLPROGRAMENVPARAMETERI4IVNVPROC)load("glProgramEnvParameterI4ivNV");
	cppgl_glProgramEnvParametersI4ivNV = (PFNGLPROGRAMENVPARAMETERSI4IVNVPROC)load("glProgramEnvParametersI4ivNV");
	cppgl_glProgramEnvParameterI4uiNV = (PFNGLPROGRAMENVPARAMETERI4UINVPROC)load("glProgramEnvParameterI4uiNV");
	cppgl_glProgramEnvParameterI4uivNV = (PFNGLPROGRAMENVPARAMETERI4UIVNVPROC)load("glProgramEnvParameterI4uivNV");
	cppgl_glProgramEnvParametersI4uivNV = (PFNGLPROGRAMENVPARAMETERSI4UIVNVPROC)load("glProgramEnvParametersI4uivNV");
	cppgl_glGetProgramLocalParameterIivNV = (PFNGLGETPROGRAMLOCALPARAMETERIIVNVPROC)load("glGetProgramLocalParameterIivNV");
	cppgl_glGetProgramLocalParameterIuivNV = (PFNGLGETPROGRAMLOCALPARAMETERIUIVNVPROC)load("glGetProgramLocalParameterIuivNV");
	cppgl_glGetProgramEnvParameterIivNV = (PFNGLGETPROGRAMENVPARAMETERIIVNVPROC)load("glGetProgramEnvParameterIivNV");
	cppgl_glGetProgramEnvParameterIuivNV = (PFNGLGETPROGRAMENVPARAMETERIUIVNVPROC)load("glGetProgramEnvParameterIuivNV");
}
static void load_GL_NV_gpu_program5(CPPGLloadproc load) {
	if(!CPPGL_GL_NV_gpu_program5) return;
	cppgl_glProgramSubroutineParametersuivNV = (PFNGLPROGRAMSUBROUTINEPARAMETERSUIVNVPROC)load("glProgramSubroutineParametersuivNV");
	cppgl_glGetProgramSubroutineParameteruivNV = (PFNGLGETPROGRAMSUBROUTINEPARAMETERUIVNVPROC)load("glGetProgramSubroutineParameteruivNV");
}
static void load_GL_NV_gpu_shader5(CPPGLloadproc load) {
	if(!CPPGL_GL_NV_gpu_shader5) return;
	cppgl_glUniform1i64NV = (PFNGLUNIFORM1I64NVPROC)load("glUniform1i64NV");
	cppgl_glUniform2i64NV = (PFNGLUNIFORM2I64NVPROC)load("glUniform2i64NV");
	cppgl_glUniform3i64NV = (PFNGLUNIFORM3I64NVPROC)load("glUniform3i64NV");
	cppgl_glUniform4i64NV = (PFNGLUNIFORM4I64NVPROC)load("glUniform4i64NV");
	cppgl_glUniform1i64vNV = (PFNGLUNIFORM1I64VNVPROC)load("glUniform1i64vNV");
	cppgl_glUniform2i64vNV = (PFNGLUNIFORM2I64VNVPROC)load("glUniform2i64vNV");
	cppgl_glUniform3i64vNV = (PFNGLUNIFORM3I64VNVPROC)load("glUniform3i64vNV");
	cppgl_glUniform4i64vNV = (PFNGLUNIFORM4I64VNVPROC)load("glUniform4i64vNV");
	cppgl_glUniform1ui64NV = (PFNGLUNIFORM1UI64NVPROC)load("glUniform1ui64NV");
	cppgl_glUniform2ui64NV = (PFNGLUNIFORM2UI64NVPROC)load("glUniform2ui64NV");
	cppgl_glUniform3ui64NV = (PFNGLUNIFORM3UI64NVPROC)load("glUniform3ui64NV");
	cppgl_glUniform4ui64NV = (PFNGLUNIFORM4UI64NVPROC)load("glUniform4ui64NV");
	cppgl_glUniform1ui64vNV = (PFNGLUNIFORM1UI64VNVPROC)load("glUniform1ui64vNV");
	cppgl_glUniform2ui64vNV = (PFNGLUNIFORM2UI64VNVPROC)load("glUniform2ui64vNV");
	cppgl_glUniform3ui64vNV = (PFNGLUNIFORM3UI64VNVPROC)load("glUniform3ui64vNV");
	cppgl_glUniform4ui64vNV = (PFNGLUNIFORM4UI64VNVPROC)load("glUniform4ui64vNV");
	cppgl_glGetUniformi64vNV = (PFNGLGETUNIFORMI64VNVPROC)load("glGetUniformi64vNV");
	cppgl_glProgramUniform1i64NV = (PFNGLPROGRAMUNIFORM1I64NVPROC)load("glProgramUniform1i64NV");
	cppgl_glProgramUniform2i64NV = (PFNGLPROGRAMUNIFORM2I64NVPROC)load("glProgramUniform2i64NV");
	cppgl_glProgramUniform3i64NV = (PFNGLPROGRAMUNIFORM3I64NVPROC)load("glProgramUniform3i64NV");
	cppgl_glProgramUniform4i64NV = (PFNGLPROGRAMUNIFORM4I64NVPROC)load("glProgramUniform4i64NV");
	cppgl_glProgramUniform1i64vNV = (PFNGLPROGRAMUNIFORM1I64VNVPROC)load("glProgramUniform1i64vNV");
	cppgl_glProgramUniform2i64vNV = (PFNGLPROGRAMUNIFORM2I64VNVPROC)load("glProgramUniform2i64vNV");
	cppgl_glProgramUniform3i64vNV = (PFNGLPROGRAMUNIFORM3I64VNVPROC)load("glProgramUniform3i64vNV");
	cppgl_glProgramUniform4i64vNV = (PFNGLPROGRAMUNIFORM4I64VNVPROC)load("glProgramUniform4i64vNV");
	cppgl_glProgramUniform1ui64NV = (PFNGLPROGRAMUNIFORM1UI64NVPROC)load("glProgramUniform1ui64NV");
	cppgl_glProgramUniform2ui64NV = (PFNGLPROGRAMUNIFORM2UI64NVPROC)load("glProgramUniform2ui64NV");
	cppgl_glProgramUniform3ui64NV = (PFNGLPROGRAMUNIFORM3UI64NVPROC)load("glProgramUniform3ui64NV");
	cppgl_glProgramUniform4ui64NV = (PFNGLPROGRAMUNIFORM4UI64NVPROC)load("glProgramUniform4ui64NV");
	cppgl_glProgramUniform1ui64vNV = (PFNGLPROGRAMUNIFORM1UI64VNVPROC)load("glProgramUniform1ui64vNV");
	cppgl_glProgramUniform2ui64vNV = (PFNGLPROGRAMUNIFORM2UI64VNVPROC)load("glProgramUniform2ui64vNV");
	cppgl_glProgramUniform3ui64vNV = (PFNGLPROGRAMUNIFORM3UI64VNVPROC)load("glProgramUniform3ui64vNV");
	cppgl_glProgramUniform4ui64vNV = (PFNGLPROGRAMUNIFORM4UI64VNVPROC)load("glProgramUniform4ui64vNV");
}
static void load_GL_NV_half_float(CPPGLloadproc load) {
	if(!CPPGL_GL_NV_half_float) return;
	cppgl_glVertex2hNV = (PFNGLVERTEX2HNVPROC)load("glVertex2hNV");
	cppgl_glVertex2hvNV = (PFNGLVERTEX2HVNVPROC)load("glVertex2hvNV");
	cppgl_glVertex3hNV = (PFNGLVERTEX3HNVPROC)load("glVertex3hNV");
	cppgl_glVertex3hvNV = (PFNGLVERTEX3HVNVPROC)load("glVertex3hvNV");
	cppgl_glVertex4hNV = (PFNGLVERTEX4HNVPROC)load("glVertex4hNV");
	cppgl_glVertex4hvNV = (PFNGLVERTEX4HVNVPROC)load("glVertex4hvNV");
	cppgl_glNormal3hNV = (PFNGLNORMAL3HNVPROC)load("glNormal3hNV");
	cppgl_glNormal3hvNV = (PFNGLNORMAL3HVNVPROC)load("glNormal3hvNV");
	cppgl_glColor3hNV = (PFNGLCOLOR3HNVPROC)load("glColor3hNV");
	cppgl_glColor3hvNV = (PFNGLCOLOR3HVNVPROC)load("glColor3hvNV");
	cppgl_glColor4hNV = (PFNGLCOLOR4HNVPROC)load("glColor4hNV");
	cppgl_glColor4hvNV = (PFNGLCOLOR4HVNVPROC)load("glColor4hvNV");
	cppgl_glTexCoord1hNV = (PFNGLTEXCOORD1HNVPROC)load("glTexCoord1hNV");
	cppgl_glTexCoord1hvNV = (PFNGLTEXCOORD1HVNVPROC)load("glTexCoord1hvNV");
	cppgl_glTexCoord2hNV = (PFNGLTEXCOORD2HNVPROC)load("glTexCoord2hNV");
	cppgl_glTexCoord2hvNV = (PFNGLTEXCOORD2HVNVPROC)load("glTexCoord2hvNV");
	cppgl_glTexCoord3hNV = (PFNGLTEXCOORD3HNVPROC)load("glTexCoord3hNV");
	cppgl_glTexCoord3hvNV = (PFNGLTEXCOORD3HVNVPROC)load("glTexCoord3hvNV");
	cppgl_glTexCoord4hNV = (PFNGLTEXCOORD4HNVPROC)load("glTexCoord4hNV");
	cppgl_glTexCoord4hvNV = (PFNGLTEXCOORD4HVNVPROC)load("glTexCoord4hvNV");
	cppgl_glMultiTexCoord1hNV = (PFNGLMULTITEXCOORD1HNVPROC)load("glMultiTexCoord1hNV");
	cppgl_glMultiTexCoord1hvNV = (PFNGLMULTITEXCOORD1HVNVPROC)load("glMultiTexCoord1hvNV");
	cppgl_glMultiTexCoord2hNV = (PFNGLMULTITEXCOORD2HNVPROC)load("glMultiTexCoord2hNV");
	cppgl_glMultiTexCoord2hvNV = (PFNGLMULTITEXCOORD2HVNVPROC)load("glMultiTexCoord2hvNV");
	cppgl_glMultiTexCoord3hNV = (PFNGLMULTITEXCOORD3HNVPROC)load("glMultiTexCoord3hNV");
	cppgl_glMultiTexCoord3hvNV = (PFNGLMULTITEXCOORD3HVNVPROC)load("glMultiTexCoord3hvNV");
	cppgl_glMultiTexCoord4hNV = (PFNGLMULTITEXCOORD4HNVPROC)load("glMultiTexCoord4hNV");
	cppgl_glMultiTexCoord4hvNV = (PFNGLMULTITEXCOORD4HVNVPROC)load("glMultiTexCoord4hvNV");
	cppgl_glFogCoordhNV = (PFNGLFOGCOORDHNVPROC)load("glFogCoordhNV");
	cppgl_glFogCoordhvNV = (PFNGLFOGCOORDHVNVPROC)load("glFogCoordhvNV");
	cppgl_glSecondaryColor3hNV = (PFNGLSECONDARYCOLOR3HNVPROC)load("glSecondaryColor3hNV");
	cppgl_glSecondaryColor3hvNV = (PFNGLSECONDARYCOLOR3HVNVPROC)load("glSecondaryColor3hvNV");
	cppgl_glVertexWeighthNV = (PFNGLVERTEXWEIGHTHNVPROC)load("glVertexWeighthNV");
	cppgl_glVertexWeighthvNV = (PFNGLVERTEXWEIGHTHVNVPROC)load("glVertexWeighthvNV");
	cppgl_glVertexAttrib1hNV = (PFNGLVERTEXATTRIB1HNVPROC)load("glVertexAttrib1hNV");
	cppgl_glVertexAttrib1hvNV = (PFNGLVERTEXATTRIB1HVNVPROC)load("glVertexAttrib1hvNV");
	cppgl_glVertexAttrib2hNV = (PFNGLVERTEXATTRIB2HNVPROC)load("glVertexAttrib2hNV");
	cppgl_glVertexAttrib2hvNV = (PFNGLVERTEXATTRIB2HVNVPROC)load("glVertexAttrib2hvNV");
	cppgl_glVertexAttrib3hNV = (PFNGLVERTEXATTRIB3HNVPROC)load("glVertexAttrib3hNV");
	cppgl_glVertexAttrib3hvNV = (PFNGLVERTEXATTRIB3HVNVPROC)load("glVertexAttrib3hvNV");
	cppgl_glVertexAttrib4hNV = (PFNGLVERTEXATTRIB4HNVPROC)load("glVertexAttrib4hNV");
	cppgl_glVertexAttrib4hvNV = (PFNGLVERTEXATTRIB4HVNVPROC)load("glVertexAttrib4hvNV");
	cppgl_glVertexAttribs1hvNV = (PFNGLVERTEXATTRIBS1HVNVPROC)load("glVertexAttribs1hvNV");
	cppgl_glVertexAttribs2hvNV = (PFNGLVERTEXATTRIBS2HVNVPROC)load("glVertexAttribs2hvNV");
	cppgl_glVertexAttribs3hvNV = (PFNGLVERTEXATTRIBS3HVNVPROC)load("glVertexAttribs3hvNV");
	cppgl_glVertexAttribs4hvNV = (PFNGLVERTEXATTRIBS4HVNVPROC)load("glVertexAttribs4hvNV");
}
static void load_GL_NV_internalformat_sample_query(CPPGLloadproc load) {
	if(!CPPGL_GL_NV_internalformat_sample_query) return;
	cppgl_glGetInternalformatSampleivNV = (PFNGLGETINTERNALFORMATSAMPLEIVNVPROC)load("glGetInternalformatSampleivNV");
}
static void load_GL_NV_occlusion_query(CPPGLloadproc load) {
	if(!CPPGL_GL_NV_occlusion_query) return;
	cppgl_glGenOcclusionQueriesNV = (PFNGLGENOCCLUSIONQUERIESNVPROC)load("glGenOcclusionQueriesNV");
	cppgl_glDeleteOcclusionQueriesNV = (PFNGLDELETEOCCLUSIONQUERIESNVPROC)load("glDeleteOcclusionQueriesNV");
	cppgl_glIsOcclusionQueryNV = (PFNGLISOCCLUSIONQUERYNVPROC)load("glIsOcclusionQueryNV");
	cppgl_glBeginOcclusionQueryNV = (PFNGLBEGINOCCLUSIONQUERYNVPROC)load("glBeginOcclusionQueryNV");
	cppgl_glEndOcclusionQueryNV = (PFNGLENDOCCLUSIONQUERYNVPROC)load("glEndOcclusionQueryNV");
	cppgl_glGetOcclusionQueryivNV = (PFNGLGETOCCLUSIONQUERYIVNVPROC)load("glGetOcclusionQueryivNV");
	cppgl_glGetOcclusionQueryuivNV = (PFNGLGETOCCLUSIONQUERYUIVNVPROC)load("glGetOcclusionQueryuivNV");
}
static void load_GL_NV_parameter_buffer_object(CPPGLloadproc load) {
	if(!CPPGL_GL_NV_parameter_buffer_object) return;
	cppgl_glProgramBufferParametersfvNV = (PFNGLPROGRAMBUFFERPARAMETERSFVNVPROC)load("glProgramBufferParametersfvNV");
	cppgl_glProgramBufferParametersIivNV = (PFNGLPROGRAMBUFFERPARAMETERSIIVNVPROC)load("glProgramBufferParametersIivNV");
	cppgl_glProgramBufferParametersIuivNV = (PFNGLPROGRAMBUFFERPARAMETERSIUIVNVPROC)load("glProgramBufferParametersIuivNV");
}
static void load_GL_NV_path_rendering(CPPGLloadproc load) {
	if(!CPPGL_GL_NV_path_rendering) return;
	cppgl_glGenPathsNV = (PFNGLGENPATHSNVPROC)load("glGenPathsNV");
	cppgl_glDeletePathsNV = (PFNGLDELETEPATHSNVPROC)load("glDeletePathsNV");
	cppgl_glIsPathNV = (PFNGLISPATHNVPROC)load("glIsPathNV");
	cppgl_glPathCommandsNV = (PFNGLPATHCOMMANDSNVPROC)load("glPathCommandsNV");
	cppgl_glPathCoordsNV = (PFNGLPATHCOORDSNVPROC)load("glPathCoordsNV");
	cppgl_glPathSubCommandsNV = (PFNGLPATHSUBCOMMANDSNVPROC)load("glPathSubCommandsNV");
	cppgl_glPathSubCoordsNV = (PFNGLPATHSUBCOORDSNVPROC)load("glPathSubCoordsNV");
	cppgl_glPathStringNV = (PFNGLPATHSTRINGNVPROC)load("glPathStringNV");
	cppgl_glPathGlyphsNV = (PFNGLPATHGLYPHSNVPROC)load("glPathGlyphsNV");
	cppgl_glPathGlyphRangeNV = (PFNGLPATHGLYPHRANGENVPROC)load("glPathGlyphRangeNV");
	cppgl_glWeightPathsNV = (PFNGLWEIGHTPATHSNVPROC)load("glWeightPathsNV");
	cppgl_glCopyPathNV = (PFNGLCOPYPATHNVPROC)load("glCopyPathNV");
	cppgl_glInterpolatePathsNV = (PFNGLINTERPOLATEPATHSNVPROC)load("glInterpolatePathsNV");
	cppgl_glTransformPathNV = (PFNGLTRANSFORMPATHNVPROC)load("glTransformPathNV");
	cppgl_glPathParameterivNV = (PFNGLPATHPARAMETERIVNVPROC)load("glPathParameterivNV");
	cppgl_glPathParameteriNV = (PFNGLPATHPARAMETERINVPROC)load("glPathParameteriNV");
	cppgl_glPathParameterfvNV = (PFNGLPATHPARAMETERFVNVPROC)load("glPathParameterfvNV");
	cppgl_glPathParameterfNV = (PFNGLPATHPARAMETERFNVPROC)load("glPathParameterfNV");
	cppgl_glPathDashArrayNV = (PFNGLPATHDASHARRAYNVPROC)load("glPathDashArrayNV");
	cppgl_glPathStencilFuncNV = (PFNGLPATHSTENCILFUNCNVPROC)load("glPathStencilFuncNV");
	cppgl_glPathStencilDepthOffsetNV = (PFNGLPATHSTENCILDEPTHOFFSETNVPROC)load("glPathStencilDepthOffsetNV");
	cppgl_glStencilFillPathNV = (PFNGLSTENCILFILLPATHNVPROC)load("glStencilFillPathNV");
	cppgl_glStencilStrokePathNV = (PFNGLSTENCILSTROKEPATHNVPROC)load("glStencilStrokePathNV");
	cppgl_glStencilFillPathInstancedNV = (PFNGLSTENCILFILLPATHINSTANCEDNVPROC)load("glStencilFillPathInstancedNV");
	cppgl_glStencilStrokePathInstancedNV = (PFNGLSTENCILSTROKEPATHINSTANCEDNVPROC)load("glStencilStrokePathInstancedNV");
	cppgl_glPathCoverDepthFuncNV = (PFNGLPATHCOVERDEPTHFUNCNVPROC)load("glPathCoverDepthFuncNV");
	cppgl_glCoverFillPathNV = (PFNGLCOVERFILLPATHNVPROC)load("glCoverFillPathNV");
	cppgl_glCoverStrokePathNV = (PFNGLCOVERSTROKEPATHNVPROC)load("glCoverStrokePathNV");
	cppgl_glCoverFillPathInstancedNV = (PFNGLCOVERFILLPATHINSTANCEDNVPROC)load("glCoverFillPathInstancedNV");
	cppgl_glCoverStrokePathInstancedNV = (PFNGLCOVERSTROKEPATHINSTANCEDNVPROC)load("glCoverStrokePathInstancedNV");
	cppgl_glGetPathParameterivNV = (PFNGLGETPATHPARAMETERIVNVPROC)load("glGetPathParameterivNV");
	cppgl_glGetPathParameterfvNV = (PFNGLGETPATHPARAMETERFVNVPROC)load("glGetPathParameterfvNV");
	cppgl_glGetPathCommandsNV = (PFNGLGETPATHCOMMANDSNVPROC)load("glGetPathCommandsNV");
	cppgl_glGetPathCoordsNV = (PFNGLGETPATHCOORDSNVPROC)load("glGetPathCoordsNV");
	cppgl_glGetPathDashArrayNV = (PFNGLGETPATHDASHARRAYNVPROC)load("glGetPathDashArrayNV");
	cppgl_glGetPathMetricsNV = (PFNGLGETPATHMETRICSNVPROC)load("glGetPathMetricsNV");
	cppgl_glGetPathMetricRangeNV = (PFNGLGETPATHMETRICRANGENVPROC)load("glGetPathMetricRangeNV");
	cppgl_glGetPathSpacingNV = (PFNGLGETPATHSPACINGNVPROC)load("glGetPathSpacingNV");
	cppgl_glIsPointInFillPathNV = (PFNGLISPOINTINFILLPATHNVPROC)load("glIsPointInFillPathNV");
	cppgl_glIsPointInStrokePathNV = (PFNGLISPOINTINSTROKEPATHNVPROC)load("glIsPointInStrokePathNV");
	cppgl_glGetPathLengthNV = (PFNGLGETPATHLENGTHNVPROC)load("glGetPathLengthNV");
	cppgl_glPointAlongPathNV = (PFNGLPOINTALONGPATHNVPROC)load("glPointAlongPathNV");
	cppgl_glMatrixLoad3x2fNV = (PFNGLMATRIXLOAD3X2FNVPROC)load("glMatrixLoad3x2fNV");
	cppgl_glMatrixLoad3x3fNV = (PFNGLMATRIXLOAD3X3FNVPROC)load("glMatrixLoad3x3fNV");
	cppgl_glMatrixLoadTranspose3x3fNV = (PFNGLMATRIXLOADTRANSPOSE3X3FNVPROC)load("glMatrixLoadTranspose3x3fNV");
	cppgl_glMatrixMult3x2fNV = (PFNGLMATRIXMULT3X2FNVPROC)load("glMatrixMult3x2fNV");
	cppgl_glMatrixMult3x3fNV = (PFNGLMATRIXMULT3X3FNVPROC)load("glMatrixMult3x3fNV");
	cppgl_glMatrixMultTranspose3x3fNV = (PFNGLMATRIXMULTTRANSPOSE3X3FNVPROC)load("glMatrixMultTranspose3x3fNV");
	cppgl_glStencilThenCoverFillPathNV = (PFNGLSTENCILTHENCOVERFILLPATHNVPROC)load("glStencilThenCoverFillPathNV");
	cppgl_glStencilThenCoverStrokePathNV = (PFNGLSTENCILTHENCOVERSTROKEPATHNVPROC)load("glStencilThenCoverStrokePathNV");
	cppgl_glStencilThenCoverFillPathInstancedNV = (PFNGLSTENCILTHENCOVERFILLPATHINSTANCEDNVPROC)load("glStencilThenCoverFillPathInstancedNV");
	cppgl_glStencilThenCoverStrokePathInstancedNV = (PFNGLSTENCILTHENCOVERSTROKEPATHINSTANCEDNVPROC)load("glStencilThenCoverStrokePathInstancedNV");
	cppgl_glPathGlyphIndexRangeNV = (PFNGLPATHGLYPHINDEXRANGENVPROC)load("glPathGlyphIndexRangeNV");
	cppgl_glPathGlyphIndexArrayNV = (PFNGLPATHGLYPHINDEXARRAYNVPROC)load("glPathGlyphIndexArrayNV");
	cppgl_glPathMemoryGlyphIndexArrayNV = (PFNGLPATHMEMORYGLYPHINDEXARRAYNVPROC)load("glPathMemoryGlyphIndexArrayNV");
	cppgl_glProgramPathFragmentInputGenNV = (PFNGLPROGRAMPATHFRAGMENTINPUTGENNVPROC)load("glProgramPathFragmentInputGenNV");
	cppgl_glGetProgramResourcefvNV = (PFNGLGETPROGRAMRESOURCEFVNVPROC)load("glGetProgramResourcefvNV");
	cppgl_glPathColorGenNV = (PFNGLPATHCOLORGENNVPROC)load("glPathColorGenNV");
	cppgl_glPathTexGenNV = (PFNGLPATHTEXGENNVPROC)load("glPathTexGenNV");
	cppgl_glPathFogGenNV = (PFNGLPATHFOGGENNVPROC)load("glPathFogGenNV");
	cppgl_glGetPathColorGenivNV = (PFNGLGETPATHCOLORGENIVNVPROC)load("glGetPathColorGenivNV");
	cppgl_glGetPathColorGenfvNV = (PFNGLGETPATHCOLORGENFVNVPROC)load("glGetPathColorGenfvNV");
	cppgl_glGetPathTexGenivNV = (PFNGLGETPATHTEXGENIVNVPROC)load("glGetPathTexGenivNV");
	cppgl_glGetPathTexGenfvNV = (PFNGLGETPATHTEXGENFVNVPROC)load("glGetPathTexGenfvNV");
}
static void load_GL_NV_pixel_data_range(CPPGLloadproc load) {
	if(!CPPGL_GL_NV_pixel_data_range) return;
	cppgl_glPixelDataRangeNV = (PFNGLPIXELDATARANGENVPROC)load("glPixelDataRangeNV");
	cppgl_glFlushPixelDataRangeNV = (PFNGLFLUSHPIXELDATARANGENVPROC)load("glFlushPixelDataRangeNV");
}
static void load_GL_NV_point_sprite(CPPGLloadproc load) {
	if(!CPPGL_GL_NV_point_sprite) return;
	cppgl_glPointParameteriNV = (PFNGLPOINTPARAMETERINVPROC)load("glPointParameteriNV");
	cppgl_glPointParameterivNV = (PFNGLPOINTPARAMETERIVNVPROC)load("glPointParameterivNV");
}
static void load_GL_NV_present_video(CPPGLloadproc load) {
	if(!CPPGL_GL_NV_present_video) return;
	cppgl_glPresentFrameKeyedNV = (PFNGLPRESENTFRAMEKEYEDNVPROC)load("glPresentFrameKeyedNV");
	cppgl_glPresentFrameDualFillNV = (PFNGLPRESENTFRAMEDUALFILLNVPROC)load("glPresentFrameDualFillNV");
	cppgl_glGetVideoivNV = (PFNGLGETVIDEOIVNVPROC)load("glGetVideoivNV");
	cppgl_glGetVideouivNV = (PFNGLGETVIDEOUIVNVPROC)load("glGetVideouivNV");
	cppgl_glGetVideoi64vNV = (PFNGLGETVIDEOI64VNVPROC)load("glGetVideoi64vNV");
	cppgl_glGetVideoui64vNV = (PFNGLGETVIDEOUI64VNVPROC)load("glGetVideoui64vNV");
}
static void load_GL_NV_primitive_restart(CPPGLloadproc load) {
	if(!CPPGL_GL_NV_primitive_restart) return;
	cppgl_glPrimitiveRestartNV = (PFNGLPRIMITIVERESTARTNVPROC)load("glPrimitiveRestartNV");
	cppgl_glPrimitiveRestartIndexNV = (PFNGLPRIMITIVERESTARTINDEXNVPROC)load("glPrimitiveRestartIndexNV");
}
static void load_GL_NV_register_combiners(CPPGLloadproc load) {
	if(!CPPGL_GL_NV_register_combiners) return;
	cppgl_glCombinerParameterfvNV = (PFNGLCOMBINERPARAMETERFVNVPROC)load("glCombinerParameterfvNV");
	cppgl_glCombinerParameterfNV = (PFNGLCOMBINERPARAMETERFNVPROC)load("glCombinerParameterfNV");
	cppgl_glCombinerParameterivNV = (PFNGLCOMBINERPARAMETERIVNVPROC)load("glCombinerParameterivNV");
	cppgl_glCombinerParameteriNV = (PFNGLCOMBINERPARAMETERINVPROC)load("glCombinerParameteriNV");
	cppgl_glCombinerInputNV = (PFNGLCOMBINERINPUTNVPROC)load("glCombinerInputNV");
	cppgl_glCombinerOutputNV = (PFNGLCOMBINEROUTPUTNVPROC)load("glCombinerOutputNV");
	cppgl_glFinalCombinerInputNV = (PFNGLFINALCOMBINERINPUTNVPROC)load("glFinalCombinerInputNV");
	cppgl_glGetCombinerInputParameterfvNV = (PFNGLGETCOMBINERINPUTPARAMETERFVNVPROC)load("glGetCombinerInputParameterfvNV");
	cppgl_glGetCombinerInputParameterivNV = (PFNGLGETCOMBINERINPUTPARAMETERIVNVPROC)load("glGetCombinerInputParameterivNV");
	cppgl_glGetCombinerOutputParameterfvNV = (PFNGLGETCOMBINEROUTPUTPARAMETERFVNVPROC)load("glGetCombinerOutputParameterfvNV");
	cppgl_glGetCombinerOutputParameterivNV = (PFNGLGETCOMBINEROUTPUTPARAMETERIVNVPROC)load("glGetCombinerOutputParameterivNV");
	cppgl_glGetFinalCombinerInputParameterfvNV = (PFNGLGETFINALCOMBINERINPUTPARAMETERFVNVPROC)load("glGetFinalCombinerInputParameterfvNV");
	cppgl_glGetFinalCombinerInputParameterivNV = (PFNGLGETFINALCOMBINERINPUTPARAMETERIVNVPROC)load("glGetFinalCombinerInputParameterivNV");
}
static void load_GL_NV_register_combiners2(CPPGLloadproc load) {
	if(!CPPGL_GL_NV_register_combiners2) return;
	cppgl_glCombinerStageParameterfvNV = (PFNGLCOMBINERSTAGEPARAMETERFVNVPROC)load("glCombinerStageParameterfvNV");
	cppgl_glGetCombinerStageParameterfvNV = (PFNGLGETCOMBINERSTAGEPARAMETERFVNVPROC)load("glGetCombinerStageParameterfvNV");
}
static void load_GL_NV_sample_locations(CPPGLloadproc load) {
	if(!CPPGL_GL_NV_sample_locations) return;
	cppgl_glFramebufferSampleLocationsfvNV = (PFNGLFRAMEBUFFERSAMPLELOCATIONSFVNVPROC)load("glFramebufferSampleLocationsfvNV");
	cppgl_glNamedFramebufferSampleLocationsfvNV = (PFNGLNAMEDFRAMEBUFFERSAMPLELOCATIONSFVNVPROC)load("glNamedFramebufferSampleLocationsfvNV");
	cppgl_glResolveDepthValuesNV = (PFNGLRESOLVEDEPTHVALUESNVPROC)load("glResolveDepthValuesNV");
}
static void load_GL_NV_shader_buffer_load(CPPGLloadproc load) {
	if(!CPPGL_GL_NV_shader_buffer_load) return;
	cppgl_glMakeBufferResidentNV = (PFNGLMAKEBUFFERRESIDENTNVPROC)load("glMakeBufferResidentNV");
	cppgl_glMakeBufferNonResidentNV = (PFNGLMAKEBUFFERNONRESIDENTNVPROC)load("glMakeBufferNonResidentNV");
	cppgl_glIsBufferResidentNV = (PFNGLISBUFFERRESIDENTNVPROC)load("glIsBufferResidentNV");
	cppgl_glMakeNamedBufferResidentNV = (PFNGLMAKENAMEDBUFFERRESIDENTNVPROC)load("glMakeNamedBufferResidentNV");
	cppgl_glMakeNamedBufferNonResidentNV = (PFNGLMAKENAMEDBUFFERNONRESIDENTNVPROC)load("glMakeNamedBufferNonResidentNV");
	cppgl_glIsNamedBufferResidentNV = (PFNGLISNAMEDBUFFERRESIDENTNVPROC)load("glIsNamedBufferResidentNV");
	cppgl_glGetBufferParameterui64vNV = (PFNGLGETBUFFERPARAMETERUI64VNVPROC)load("glGetBufferParameterui64vNV");
	cppgl_glGetNamedBufferParameterui64vNV = (PFNGLGETNAMEDBUFFERPARAMETERUI64VNVPROC)load("glGetNamedBufferParameterui64vNV");
	cppgl_glGetIntegerui64vNV = (PFNGLGETINTEGERUI64VNVPROC)load("glGetIntegerui64vNV");
	cppgl_glUniformui64NV = (PFNGLUNIFORMUI64NVPROC)load("glUniformui64NV");
	cppgl_glUniformui64vNV = (PFNGLUNIFORMUI64VNVPROC)load("glUniformui64vNV");
	cppgl_glGetUniformui64vNV = (PFNGLGETUNIFORMUI64VNVPROC)load("glGetUniformui64vNV");
	cppgl_glProgramUniformui64NV = (PFNGLPROGRAMUNIFORMUI64NVPROC)load("glProgramUniformui64NV");
	cppgl_glProgramUniformui64vNV = (PFNGLPROGRAMUNIFORMUI64VNVPROC)load("glProgramUniformui64vNV");
}
static void load_GL_NV_texture_barrier(CPPGLloadproc load) {
	if(!CPPGL_GL_NV_texture_barrier) return;
	cppgl_glTextureBarrierNV = (PFNGLTEXTUREBARRIERNVPROC)load("glTextureBarrierNV");
}
static void load_GL_NV_texture_multisample(CPPGLloadproc load) {
	if(!CPPGL_GL_NV_texture_multisample) return;
	cppgl_glTexImage2DMultisampleCoverageNV = (PFNGLTEXIMAGE2DMULTISAMPLECOVERAGENVPROC)load("glTexImage2DMultisampleCoverageNV");
	cppgl_glTexImage3DMultisampleCoverageNV = (PFNGLTEXIMAGE3DMULTISAMPLECOVERAGENVPROC)load("glTexImage3DMultisampleCoverageNV");
	cppgl_glTextureImage2DMultisampleNV = (PFNGLTEXTUREIMAGE2DMULTISAMPLENVPROC)load("glTextureImage2DMultisampleNV");
	cppgl_glTextureImage3DMultisampleNV = (PFNGLTEXTUREIMAGE3DMULTISAMPLENVPROC)load("glTextureImage3DMultisampleNV");
	cppgl_glTextureImage2DMultisampleCoverageNV = (PFNGLTEXTUREIMAGE2DMULTISAMPLECOVERAGENVPROC)load("glTextureImage2DMultisampleCoverageNV");
	cppgl_glTextureImage3DMultisampleCoverageNV = (PFNGLTEXTUREIMAGE3DMULTISAMPLECOVERAGENVPROC)load("glTextureImage3DMultisampleCoverageNV");
}
static void load_GL_NV_transform_feedback(CPPGLloadproc load) {
	if(!CPPGL_GL_NV_transform_feedback) return;
	cppgl_glBeginTransformFeedbackNV = (PFNGLBEGINTRANSFORMFEEDBACKNVPROC)load("glBeginTransformFeedbackNV");
	cppgl_glEndTransformFeedbackNV = (PFNGLENDTRANSFORMFEEDBACKNVPROC)load("glEndTransformFeedbackNV");
	cppgl_glTransformFeedbackAttribsNV = (PFNGLTRANSFORMFEEDBACKATTRIBSNVPROC)load("glTransformFeedbackAttribsNV");
	cppgl_glBindBufferRangeNV = (PFNGLBINDBUFFERRANGENVPROC)load("glBindBufferRangeNV");
	cppgl_glBindBufferOffsetNV = (PFNGLBINDBUFFEROFFSETNVPROC)load("glBindBufferOffsetNV");
	cppgl_glBindBufferBaseNV = (PFNGLBINDBUFFERBASENVPROC)load("glBindBufferBaseNV");
	cppgl_glTransformFeedbackVaryingsNV = (PFNGLTRANSFORMFEEDBACKVARYINGSNVPROC)load("glTransformFeedbackVaryingsNV");
	cppgl_glActiveVaryingNV = (PFNGLACTIVEVARYINGNVPROC)load("glActiveVaryingNV");
	cppgl_glGetVaryingLocationNV = (PFNGLGETVARYINGLOCATIONNVPROC)load("glGetVaryingLocationNV");
	cppgl_glGetActiveVaryingNV = (PFNGLGETACTIVEVARYINGNVPROC)load("glGetActiveVaryingNV");
	cppgl_glGetTransformFeedbackVaryingNV = (PFNGLGETTRANSFORMFEEDBACKVARYINGNVPROC)load("glGetTransformFeedbackVaryingNV");
	cppgl_glTransformFeedbackStreamAttribsNV = (PFNGLTRANSFORMFEEDBACKSTREAMATTRIBSNVPROC)load("glTransformFeedbackStreamAttribsNV");
}
static void load_GL_NV_transform_feedback2(CPPGLloadproc load) {
	if(!CPPGL_GL_NV_transform_feedback2) return;
	cppgl_glBindTransformFeedbackNV = (PFNGLBINDTRANSFORMFEEDBACKNVPROC)load("glBindTransformFeedbackNV");
	cppgl_glDeleteTransformFeedbacksNV = (PFNGLDELETETRANSFORMFEEDBACKSNVPROC)load("glDeleteTransformFeedbacksNV");
	cppgl_glGenTransformFeedbacksNV = (PFNGLGENTRANSFORMFEEDBACKSNVPROC)load("glGenTransformFeedbacksNV");
	cppgl_glIsTransformFeedbackNV = (PFNGLISTRANSFORMFEEDBACKNVPROC)load("glIsTransformFeedbackNV");
	cppgl_glPauseTransformFeedbackNV = (PFNGLPAUSETRANSFORMFEEDBACKNVPROC)load("glPauseTransformFeedbackNV");
	cppgl_glResumeTransformFeedbackNV = (PFNGLRESUMETRANSFORMFEEDBACKNVPROC)load("glResumeTransformFeedbackNV");
	cppgl_glDrawTransformFeedbackNV = (PFNGLDRAWTRANSFORMFEEDBACKNVPROC)load("glDrawTransformFeedbackNV");
}
static void load_GL_NV_vdpau_interop(CPPGLloadproc load) {
	if(!CPPGL_GL_NV_vdpau_interop) return;
	cppgl_glVDPAUInitNV = (PFNGLVDPAUINITNVPROC)load("glVDPAUInitNV");
	cppgl_glVDPAUFiniNV = (PFNGLVDPAUFININVPROC)load("glVDPAUFiniNV");
	cppgl_glVDPAURegisterVideoSurfaceNV = (PFNGLVDPAUREGISTERVIDEOSURFACENVPROC)load("glVDPAURegisterVideoSurfaceNV");
	cppgl_glVDPAURegisterOutputSurfaceNV = (PFNGLVDPAUREGISTEROUTPUTSURFACENVPROC)load("glVDPAURegisterOutputSurfaceNV");
	cppgl_glVDPAUIsSurfaceNV = (PFNGLVDPAUISSURFACENVPROC)load("glVDPAUIsSurfaceNV");
	cppgl_glVDPAUUnregisterSurfaceNV = (PFNGLVDPAUUNREGISTERSURFACENVPROC)load("glVDPAUUnregisterSurfaceNV");
	cppgl_glVDPAUGetSurfaceivNV = (PFNGLVDPAUGETSURFACEIVNVPROC)load("glVDPAUGetSurfaceivNV");
	cppgl_glVDPAUSurfaceAccessNV = (PFNGLVDPAUSURFACEACCESSNVPROC)load("glVDPAUSurfaceAccessNV");
	cppgl_glVDPAUMapSurfacesNV = (PFNGLVDPAUMAPSURFACESNVPROC)load("glVDPAUMapSurfacesNV");
	cppgl_glVDPAUUnmapSurfacesNV = (PFNGLVDPAUUNMAPSURFACESNVPROC)load("glVDPAUUnmapSurfacesNV");
}
static void load_GL_NV_vertex_array_range(CPPGLloadproc load) {
	if(!CPPGL_GL_NV_vertex_array_range) return;
	cppgl_glFlushVertexArrayRangeNV = (PFNGLFLUSHVERTEXARRAYRANGENVPROC)load("glFlushVertexArrayRangeNV");
	cppgl_glVertexArrayRangeNV = (PFNGLVERTEXARRAYRANGENVPROC)load("glVertexArrayRangeNV");
}
static void load_GL_NV_vertex_attrib_integer_64bit(CPPGLloadproc load) {
	if(!CPPGL_GL_NV_vertex_attrib_integer_64bit) return;
	cppgl_glVertexAttribL1i64NV = (PFNGLVERTEXATTRIBL1I64NVPROC)load("glVertexAttribL1i64NV");
	cppgl_glVertexAttribL2i64NV = (PFNGLVERTEXATTRIBL2I64NVPROC)load("glVertexAttribL2i64NV");
	cppgl_glVertexAttribL3i64NV = (PFNGLVERTEXATTRIBL3I64NVPROC)load("glVertexAttribL3i64NV");
	cppgl_glVertexAttribL4i64NV = (PFNGLVERTEXATTRIBL4I64NVPROC)load("glVertexAttribL4i64NV");
	cppgl_glVertexAttribL1i64vNV = (PFNGLVERTEXATTRIBL1I64VNVPROC)load("glVertexAttribL1i64vNV");
	cppgl_glVertexAttribL2i64vNV = (PFNGLVERTEXATTRIBL2I64VNVPROC)load("glVertexAttribL2i64vNV");
	cppgl_glVertexAttribL3i64vNV = (PFNGLVERTEXATTRIBL3I64VNVPROC)load("glVertexAttribL3i64vNV");
	cppgl_glVertexAttribL4i64vNV = (PFNGLVERTEXATTRIBL4I64VNVPROC)load("glVertexAttribL4i64vNV");
	cppgl_glVertexAttribL1ui64NV = (PFNGLVERTEXATTRIBL1UI64NVPROC)load("glVertexAttribL1ui64NV");
	cppgl_glVertexAttribL2ui64NV = (PFNGLVERTEXATTRIBL2UI64NVPROC)load("glVertexAttribL2ui64NV");
	cppgl_glVertexAttribL3ui64NV = (PFNGLVERTEXATTRIBL3UI64NVPROC)load("glVertexAttribL3ui64NV");
	cppgl_glVertexAttribL4ui64NV = (PFNGLVERTEXATTRIBL4UI64NVPROC)load("glVertexAttribL4ui64NV");
	cppgl_glVertexAttribL1ui64vNV = (PFNGLVERTEXATTRIBL1UI64VNVPROC)load("glVertexAttribL1ui64vNV");
	cppgl_glVertexAttribL2ui64vNV = (PFNGLVERTEXATTRIBL2UI64VNVPROC)load("glVertexAttribL2ui64vNV");
	cppgl_glVertexAttribL3ui64vNV = (PFNGLVERTEXATTRIBL3UI64VNVPROC)load("glVertexAttribL3ui64vNV");
	cppgl_glVertexAttribL4ui64vNV = (PFNGLVERTEXATTRIBL4UI64VNVPROC)load("glVertexAttribL4ui64vNV");
	cppgl_glGetVertexAttribLi64vNV = (PFNGLGETVERTEXATTRIBLI64VNVPROC)load("glGetVertexAttribLi64vNV");
	cppgl_glGetVertexAttribLui64vNV = (PFNGLGETVERTEXATTRIBLUI64VNVPROC)load("glGetVertexAttribLui64vNV");
	cppgl_glVertexAttribLFormatNV = (PFNGLVERTEXATTRIBLFORMATNVPROC)load("glVertexAttribLFormatNV");
}
static void load_GL_NV_vertex_buffer_unified_memory(CPPGLloadproc load) {
	if(!CPPGL_GL_NV_vertex_buffer_unified_memory) return;
	cppgl_glBufferAddressRangeNV = (PFNGLBUFFERADDRESSRANGENVPROC)load("glBufferAddressRangeNV");
	cppgl_glVertexFormatNV = (PFNGLVERTEXFORMATNVPROC)load("glVertexFormatNV");
	cppgl_glNormalFormatNV = (PFNGLNORMALFORMATNVPROC)load("glNormalFormatNV");
	cppgl_glColorFormatNV = (PFNGLCOLORFORMATNVPROC)load("glColorFormatNV");
	cppgl_glIndexFormatNV = (PFNGLINDEXFORMATNVPROC)load("glIndexFormatNV");
	cppgl_glTexCoordFormatNV = (PFNGLTEXCOORDFORMATNVPROC)load("glTexCoordFormatNV");
	cppgl_glEdgeFlagFormatNV = (PFNGLEDGEFLAGFORMATNVPROC)load("glEdgeFlagFormatNV");
	cppgl_glSecondaryColorFormatNV = (PFNGLSECONDARYCOLORFORMATNVPROC)load("glSecondaryColorFormatNV");
	cppgl_glFogCoordFormatNV = (PFNGLFOGCOORDFORMATNVPROC)load("glFogCoordFormatNV");
	cppgl_glVertexAttribFormatNV = (PFNGLVERTEXATTRIBFORMATNVPROC)load("glVertexAttribFormatNV");
	cppgl_glVertexAttribIFormatNV = (PFNGLVERTEXATTRIBIFORMATNVPROC)load("glVertexAttribIFormatNV");
	cppgl_glGetIntegerui64i_vNV = (PFNGLGETINTEGERUI64I_VNVPROC)load("glGetIntegerui64i_vNV");
}
static void load_GL_NV_vertex_program(CPPGLloadproc load) {
	if(!CPPGL_GL_NV_vertex_program) return;
	cppgl_glAreProgramsResidentNV = (PFNGLAREPROGRAMSRESIDENTNVPROC)load("glAreProgramsResidentNV");
	cppgl_glBindProgramNV = (PFNGLBINDPROGRAMNVPROC)load("glBindProgramNV");
	cppgl_glDeleteProgramsNV = (PFNGLDELETEPROGRAMSNVPROC)load("glDeleteProgramsNV");
	cppgl_glExecuteProgramNV = (PFNGLEXECUTEPROGRAMNVPROC)load("glExecuteProgramNV");
	cppgl_glGenProgramsNV = (PFNGLGENPROGRAMSNVPROC)load("glGenProgramsNV");
	cppgl_glGetProgramParameterdvNV = (PFNGLGETPROGRAMPARAMETERDVNVPROC)load("glGetProgramParameterdvNV");
	cppgl_glGetProgramParameterfvNV = (PFNGLGETPROGRAMPARAMETERFVNVPROC)load("glGetProgramParameterfvNV");
	cppgl_glGetProgramivNV = (PFNGLGETPROGRAMIVNVPROC)load("glGetProgramivNV");
	cppgl_glGetProgramStringNV = (PFNGLGETPROGRAMSTRINGNVPROC)load("glGetProgramStringNV");
	cppgl_glGetTrackMatrixivNV = (PFNGLGETTRACKMATRIXIVNVPROC)load("glGetTrackMatrixivNV");
	cppgl_glGetVertexAttribdvNV = (PFNGLGETVERTEXATTRIBDVNVPROC)load("glGetVertexAttribdvNV");
	cppgl_glGetVertexAttribfvNV = (PFNGLGETVERTEXATTRIBFVNVPROC)load("glGetVertexAttribfvNV");
	cppgl_glGetVertexAttribivNV = (PFNGLGETVERTEXATTRIBIVNVPROC)load("glGetVertexAttribivNV");
	cppgl_glGetVertexAttribPointervNV = (PFNGLGETVERTEXATTRIBPOINTERVNVPROC)load("glGetVertexAttribPointervNV");
	cppgl_glIsProgramNV = (PFNGLISPROGRAMNVPROC)load("glIsProgramNV");
	cppgl_glLoadProgramNV = (PFNGLLOADPROGRAMNVPROC)load("glLoadProgramNV");
	cppgl_glProgramParameter4dNV = (PFNGLPROGRAMPARAMETER4DNVPROC)load("glProgramParameter4dNV");
	cppgl_glProgramParameter4dvNV = (PFNGLPROGRAMPARAMETER4DVNVPROC)load("glProgramParameter4dvNV");
	cppgl_glProgramParameter4fNV = (PFNGLPROGRAMPARAMETER4FNVPROC)load("glProgramParameter4fNV");
	cppgl_glProgramParameter4fvNV = (PFNGLPROGRAMPARAMETER4FVNVPROC)load("glProgramParameter4fvNV");
	cppgl_glProgramParameters4dvNV = (PFNGLPROGRAMPARAMETERS4DVNVPROC)load("glProgramParameters4dvNV");
	cppgl_glProgramParameters4fvNV = (PFNGLPROGRAMPARAMETERS4FVNVPROC)load("glProgramParameters4fvNV");
	cppgl_glRequestResidentProgramsNV = (PFNGLREQUESTRESIDENTPROGRAMSNVPROC)load("glRequestResidentProgramsNV");
	cppgl_glTrackMatrixNV = (PFNGLTRACKMATRIXNVPROC)load("glTrackMatrixNV");
	cppgl_glVertexAttribPointerNV = (PFNGLVERTEXATTRIBPOINTERNVPROC)load("glVertexAttribPointerNV");
	cppgl_glVertexAttrib1dNV = (PFNGLVERTEXATTRIB1DNVPROC)load("glVertexAttrib1dNV");
	cppgl_glVertexAttrib1dvNV = (PFNGLVERTEXATTRIB1DVNVPROC)load("glVertexAttrib1dvNV");
	cppgl_glVertexAttrib1fNV = (PFNGLVERTEXATTRIB1FNVPROC)load("glVertexAttrib1fNV");
	cppgl_glVertexAttrib1fvNV = (PFNGLVERTEXATTRIB1FVNVPROC)load("glVertexAttrib1fvNV");
	cppgl_glVertexAttrib1sNV = (PFNGLVERTEXATTRIB1SNVPROC)load("glVertexAttrib1sNV");
	cppgl_glVertexAttrib1svNV = (PFNGLVERTEXATTRIB1SVNVPROC)load("glVertexAttrib1svNV");
	cppgl_glVertexAttrib2dNV = (PFNGLVERTEXATTRIB2DNVPROC)load("glVertexAttrib2dNV");
	cppgl_glVertexAttrib2dvNV = (PFNGLVERTEXATTRIB2DVNVPROC)load("glVertexAttrib2dvNV");
	cppgl_glVertexAttrib2fNV = (PFNGLVERTEXATTRIB2FNVPROC)load("glVertexAttrib2fNV");
	cppgl_glVertexAttrib2fvNV = (PFNGLVERTEXATTRIB2FVNVPROC)load("glVertexAttrib2fvNV");
	cppgl_glVertexAttrib2sNV = (PFNGLVERTEXATTRIB2SNVPROC)load("glVertexAttrib2sNV");
	cppgl_glVertexAttrib2svNV = (PFNGLVERTEXATTRIB2SVNVPROC)load("glVertexAttrib2svNV");
	cppgl_glVertexAttrib3dNV = (PFNGLVERTEXATTRIB3DNVPROC)load("glVertexAttrib3dNV");
	cppgl_glVertexAttrib3dvNV = (PFNGLVERTEXATTRIB3DVNVPROC)load("glVertexAttrib3dvNV");
	cppgl_glVertexAttrib3fNV = (PFNGLVERTEXATTRIB3FNVPROC)load("glVertexAttrib3fNV");
	cppgl_glVertexAttrib3fvNV = (PFNGLVERTEXATTRIB3FVNVPROC)load("glVertexAttrib3fvNV");
	cppgl_glVertexAttrib3sNV = (PFNGLVERTEXATTRIB3SNVPROC)load("glVertexAttrib3sNV");
	cppgl_glVertexAttrib3svNV = (PFNGLVERTEXATTRIB3SVNVPROC)load("glVertexAttrib3svNV");
	cppgl_glVertexAttrib4dNV = (PFNGLVERTEXATTRIB4DNVPROC)load("glVertexAttrib4dNV");
	cppgl_glVertexAttrib4dvNV = (PFNGLVERTEXATTRIB4DVNVPROC)load("glVertexAttrib4dvNV");
	cppgl_glVertexAttrib4fNV = (PFNGLVERTEXATTRIB4FNVPROC)load("glVertexAttrib4fNV");
	cppgl_glVertexAttrib4fvNV = (PFNGLVERTEXATTRIB4FVNVPROC)load("glVertexAttrib4fvNV");
	cppgl_glVertexAttrib4sNV = (PFNGLVERTEXATTRIB4SNVPROC)load("glVertexAttrib4sNV");
	cppgl_glVertexAttrib4svNV = (PFNGLVERTEXATTRIB4SVNVPROC)load("glVertexAttrib4svNV");
	cppgl_glVertexAttrib4ubNV = (PFNGLVERTEXATTRIB4UBNVPROC)load("glVertexAttrib4ubNV");
	cppgl_glVertexAttrib4ubvNV = (PFNGLVERTEXATTRIB4UBVNVPROC)load("glVertexAttrib4ubvNV");
	cppgl_glVertexAttribs1dvNV = (PFNGLVERTEXATTRIBS1DVNVPROC)load("glVertexAttribs1dvNV");
	cppgl_glVertexAttribs1fvNV = (PFNGLVERTEXATTRIBS1FVNVPROC)load("glVertexAttribs1fvNV");
	cppgl_glVertexAttribs1svNV = (PFNGLVERTEXATTRIBS1SVNVPROC)load("glVertexAttribs1svNV");
	cppgl_glVertexAttribs2dvNV = (PFNGLVERTEXATTRIBS2DVNVPROC)load("glVertexAttribs2dvNV");
	cppgl_glVertexAttribs2fvNV = (PFNGLVERTEXATTRIBS2FVNVPROC)load("glVertexAttribs2fvNV");
	cppgl_glVertexAttribs2svNV = (PFNGLVERTEXATTRIBS2SVNVPROC)load("glVertexAttribs2svNV");
	cppgl_glVertexAttribs3dvNV = (PFNGLVERTEXATTRIBS3DVNVPROC)load("glVertexAttribs3dvNV");
	cppgl_glVertexAttribs3fvNV = (PFNGLVERTEXATTRIBS3FVNVPROC)load("glVertexAttribs3fvNV");
	cppgl_glVertexAttribs3svNV = (PFNGLVERTEXATTRIBS3SVNVPROC)load("glVertexAttribs3svNV");
	cppgl_glVertexAttribs4dvNV = (PFNGLVERTEXATTRIBS4DVNVPROC)load("glVertexAttribs4dvNV");
	cppgl_glVertexAttribs4fvNV = (PFNGLVERTEXATTRIBS4FVNVPROC)load("glVertexAttribs4fvNV");
	cppgl_glVertexAttribs4svNV = (PFNGLVERTEXATTRIBS4SVNVPROC)load("glVertexAttribs4svNV");
	cppgl_glVertexAttribs4ubvNV = (PFNGLVERTEXATTRIBS4UBVNVPROC)load("glVertexAttribs4ubvNV");
}
static void load_GL_NV_vertex_program4(CPPGLloadproc load) {
	if(!CPPGL_GL_NV_vertex_program4) return;
	cppgl_glVertexAttribI1iEXT = (PFNGLVERTEXATTRIBI1IEXTPROC)load("glVertexAttribI1iEXT");
	cppgl_glVertexAttribI2iEXT = (PFNGLVERTEXATTRIBI2IEXTPROC)load("glVertexAttribI2iEXT");
	cppgl_glVertexAttribI3iEXT = (PFNGLVERTEXATTRIBI3IEXTPROC)load("glVertexAttribI3iEXT");
	cppgl_glVertexAttribI4iEXT = (PFNGLVERTEXATTRIBI4IEXTPROC)load("glVertexAttribI4iEXT");
	cppgl_glVertexAttribI1uiEXT = (PFNGLVERTEXATTRIBI1UIEXTPROC)load("glVertexAttribI1uiEXT");
	cppgl_glVertexAttribI2uiEXT = (PFNGLVERTEXATTRIBI2UIEXTPROC)load("glVertexAttribI2uiEXT");
	cppgl_glVertexAttribI3uiEXT = (PFNGLVERTEXATTRIBI3UIEXTPROC)load("glVertexAttribI3uiEXT");
	cppgl_glVertexAttribI4uiEXT = (PFNGLVERTEXATTRIBI4UIEXTPROC)load("glVertexAttribI4uiEXT");
	cppgl_glVertexAttribI1ivEXT = (PFNGLVERTEXATTRIBI1IVEXTPROC)load("glVertexAttribI1ivEXT");
	cppgl_glVertexAttribI2ivEXT = (PFNGLVERTEXATTRIBI2IVEXTPROC)load("glVertexAttribI2ivEXT");
	cppgl_glVertexAttribI3ivEXT = (PFNGLVERTEXATTRIBI3IVEXTPROC)load("glVertexAttribI3ivEXT");
	cppgl_glVertexAttribI4ivEXT = (PFNGLVERTEXATTRIBI4IVEXTPROC)load("glVertexAttribI4ivEXT");
	cppgl_glVertexAttribI1uivEXT = (PFNGLVERTEXATTRIBI1UIVEXTPROC)load("glVertexAttribI1uivEXT");
	cppgl_glVertexAttribI2uivEXT = (PFNGLVERTEXATTRIBI2UIVEXTPROC)load("glVertexAttribI2uivEXT");
	cppgl_glVertexAttribI3uivEXT = (PFNGLVERTEXATTRIBI3UIVEXTPROC)load("glVertexAttribI3uivEXT");
	cppgl_glVertexAttribI4uivEXT = (PFNGLVERTEXATTRIBI4UIVEXTPROC)load("glVertexAttribI4uivEXT");
	cppgl_glVertexAttribI4bvEXT = (PFNGLVERTEXATTRIBI4BVEXTPROC)load("glVertexAttribI4bvEXT");
	cppgl_glVertexAttribI4svEXT = (PFNGLVERTEXATTRIBI4SVEXTPROC)load("glVertexAttribI4svEXT");
	cppgl_glVertexAttribI4ubvEXT = (PFNGLVERTEXATTRIBI4UBVEXTPROC)load("glVertexAttribI4ubvEXT");
	cppgl_glVertexAttribI4usvEXT = (PFNGLVERTEXATTRIBI4USVEXTPROC)load("glVertexAttribI4usvEXT");
	cppgl_glVertexAttribIPointerEXT = (PFNGLVERTEXATTRIBIPOINTEREXTPROC)load("glVertexAttribIPointerEXT");
	cppgl_glGetVertexAttribIivEXT = (PFNGLGETVERTEXATTRIBIIVEXTPROC)load("glGetVertexAttribIivEXT");
	cppgl_glGetVertexAttribIuivEXT = (PFNGLGETVERTEXATTRIBIUIVEXTPROC)load("glGetVertexAttribIuivEXT");
}
static void load_GL_NV_video_capture(CPPGLloadproc load) {
	if(!CPPGL_GL_NV_video_capture) return;
	cppgl_glBeginVideoCaptureNV = (PFNGLBEGINVIDEOCAPTURENVPROC)load("glBeginVideoCaptureNV");
	cppgl_glBindVideoCaptureStreamBufferNV = (PFNGLBINDVIDEOCAPTURESTREAMBUFFERNVPROC)load("glBindVideoCaptureStreamBufferNV");
	cppgl_glBindVideoCaptureStreamTextureNV = (PFNGLBINDVIDEOCAPTURESTREAMTEXTURENVPROC)load("glBindVideoCaptureStreamTextureNV");
	cppgl_glEndVideoCaptureNV = (PFNGLENDVIDEOCAPTURENVPROC)load("glEndVideoCaptureNV");
	cppgl_glGetVideoCaptureivNV = (PFNGLGETVIDEOCAPTUREIVNVPROC)load("glGetVideoCaptureivNV");
	cppgl_glGetVideoCaptureStreamivNV = (PFNGLGETVIDEOCAPTURESTREAMIVNVPROC)load("glGetVideoCaptureStreamivNV");
	cppgl_glGetVideoCaptureStreamfvNV = (PFNGLGETVIDEOCAPTURESTREAMFVNVPROC)load("glGetVideoCaptureStreamfvNV");
	cppgl_glGetVideoCaptureStreamdvNV = (PFNGLGETVIDEOCAPTURESTREAMDVNVPROC)load("glGetVideoCaptureStreamdvNV");
	cppgl_glVideoCaptureNV = (PFNGLVIDEOCAPTURENVPROC)load("glVideoCaptureNV");
	cppgl_glVideoCaptureStreamParameterivNV = (PFNGLVIDEOCAPTURESTREAMPARAMETERIVNVPROC)load("glVideoCaptureStreamParameterivNV");
	cppgl_glVideoCaptureStreamParameterfvNV = (PFNGLVIDEOCAPTURESTREAMPARAMETERFVNVPROC)load("glVideoCaptureStreamParameterfvNV");
	cppgl_glVideoCaptureStreamParameterdvNV = (PFNGLVIDEOCAPTURESTREAMPARAMETERDVNVPROC)load("glVideoCaptureStreamParameterdvNV");
}
static void load_GL_NV_viewport_swizzle(CPPGLloadproc load) {
	if(!CPPGL_GL_NV_viewport_swizzle) return;
	cppgl_glViewportSwizzleNV = (PFNGLVIEWPORTSWIZZLENVPROC)load("glViewportSwizzleNV");
}
static void load_GL_OES_byte_coordinates(CPPGLloadproc load) {
	if(!CPPGL_GL_OES_byte_coordinates) return;
	cppgl_glMultiTexCoord1bOES = (PFNGLMULTITEXCOORD1BOESPROC)load("glMultiTexCoord1bOES");
	cppgl_glMultiTexCoord1bvOES = (PFNGLMULTITEXCOORD1BVOESPROC)load("glMultiTexCoord1bvOES");
	cppgl_glMultiTexCoord2bOES = (PFNGLMULTITEXCOORD2BOESPROC)load("glMultiTexCoord2bOES");
	cppgl_glMultiTexCoord2bvOES = (PFNGLMULTITEXCOORD2BVOESPROC)load("glMultiTexCoord2bvOES");
	cppgl_glMultiTexCoord3bOES = (PFNGLMULTITEXCOORD3BOESPROC)load("glMultiTexCoord3bOES");
	cppgl_glMultiTexCoord3bvOES = (PFNGLMULTITEXCOORD3BVOESPROC)load("glMultiTexCoord3bvOES");
	cppgl_glMultiTexCoord4bOES = (PFNGLMULTITEXCOORD4BOESPROC)load("glMultiTexCoord4bOES");
	cppgl_glMultiTexCoord4bvOES = (PFNGLMULTITEXCOORD4BVOESPROC)load("glMultiTexCoord4bvOES");
	cppgl_glTexCoord1bOES = (PFNGLTEXCOORD1BOESPROC)load("glTexCoord1bOES");
	cppgl_glTexCoord1bvOES = (PFNGLTEXCOORD1BVOESPROC)load("glTexCoord1bvOES");
	cppgl_glTexCoord2bOES = (PFNGLTEXCOORD2BOESPROC)load("glTexCoord2bOES");
	cppgl_glTexCoord2bvOES = (PFNGLTEXCOORD2BVOESPROC)load("glTexCoord2bvOES");
	cppgl_glTexCoord3bOES = (PFNGLTEXCOORD3BOESPROC)load("glTexCoord3bOES");
	cppgl_glTexCoord3bvOES = (PFNGLTEXCOORD3BVOESPROC)load("glTexCoord3bvOES");
	cppgl_glTexCoord4bOES = (PFNGLTEXCOORD4BOESPROC)load("glTexCoord4bOES");
	cppgl_glTexCoord4bvOES = (PFNGLTEXCOORD4BVOESPROC)load("glTexCoord4bvOES");
	cppgl_glVertex2bOES = (PFNGLVERTEX2BOESPROC)load("glVertex2bOES");
	cppgl_glVertex2bvOES = (PFNGLVERTEX2BVOESPROC)load("glVertex2bvOES");
	cppgl_glVertex3bOES = (PFNGLVERTEX3BOESPROC)load("glVertex3bOES");
	cppgl_glVertex3bvOES = (PFNGLVERTEX3BVOESPROC)load("glVertex3bvOES");
	cppgl_glVertex4bOES = (PFNGLVERTEX4BOESPROC)load("glVertex4bOES");
	cppgl_glVertex4bvOES = (PFNGLVERTEX4BVOESPROC)load("glVertex4bvOES");
}
static void load_GL_OES_fixed_point(CPPGLloadproc load) {
	if(!CPPGL_GL_OES_fixed_point) return;
	cppgl_glAlphaFuncxOES = (PFNGLALPHAFUNCXOESPROC)load("glAlphaFuncxOES");
	cppgl_glClearColorxOES = (PFNGLCLEARCOLORXOESPROC)load("glClearColorxOES");
	cppgl_glClearDepthxOES = (PFNGLCLEARDEPTHXOESPROC)load("glClearDepthxOES");
	cppgl_glClipPlanexOES = (PFNGLCLIPPLANEXOESPROC)load("glClipPlanexOES");
	cppgl_glColor4xOES = (PFNGLCOLOR4XOESPROC)load("glColor4xOES");
	cppgl_glDepthRangexOES = (PFNGLDEPTHRANGEXOESPROC)load("glDepthRangexOES");
	cppgl_glFogxOES = (PFNGLFOGXOESPROC)load("glFogxOES");
	cppgl_glFogxvOES = (PFNGLFOGXVOESPROC)load("glFogxvOES");
	cppgl_glFrustumxOES = (PFNGLFRUSTUMXOESPROC)load("glFrustumxOES");
	cppgl_glGetClipPlanexOES = (PFNGLGETCLIPPLANEXOESPROC)load("glGetClipPlanexOES");
	cppgl_glGetFixedvOES = (PFNGLGETFIXEDVOESPROC)load("glGetFixedvOES");
	cppgl_glGetTexEnvxvOES = (PFNGLGETTEXENVXVOESPROC)load("glGetTexEnvxvOES");
	cppgl_glGetTexParameterxvOES = (PFNGLGETTEXPARAMETERXVOESPROC)load("glGetTexParameterxvOES");
	cppgl_glLightModelxOES = (PFNGLLIGHTMODELXOESPROC)load("glLightModelxOES");
	cppgl_glLightModelxvOES = (PFNGLLIGHTMODELXVOESPROC)load("glLightModelxvOES");
	cppgl_glLightxOES = (PFNGLLIGHTXOESPROC)load("glLightxOES");
	cppgl_glLightxvOES = (PFNGLLIGHTXVOESPROC)load("glLightxvOES");
	cppgl_glLineWidthxOES = (PFNGLLINEWIDTHXOESPROC)load("glLineWidthxOES");
	cppgl_glLoadMatrixxOES = (PFNGLLOADMATRIXXOESPROC)load("glLoadMatrixxOES");
	cppgl_glMaterialxOES = (PFNGLMATERIALXOESPROC)load("glMaterialxOES");
	cppgl_glMaterialxvOES = (PFNGLMATERIALXVOESPROC)load("glMaterialxvOES");
	cppgl_glMultMatrixxOES = (PFNGLMULTMATRIXXOESPROC)load("glMultMatrixxOES");
	cppgl_glMultiTexCoord4xOES = (PFNGLMULTITEXCOORD4XOESPROC)load("glMultiTexCoord4xOES");
	cppgl_glNormal3xOES = (PFNGLNORMAL3XOESPROC)load("glNormal3xOES");
	cppgl_glOrthoxOES = (PFNGLORTHOXOESPROC)load("glOrthoxOES");
	cppgl_glPointParameterxvOES = (PFNGLPOINTPARAMETERXVOESPROC)load("glPointParameterxvOES");
	cppgl_glPointSizexOES = (PFNGLPOINTSIZEXOESPROC)load("glPointSizexOES");
	cppgl_glPolygonOffsetxOES = (PFNGLPOLYGONOFFSETXOESPROC)load("glPolygonOffsetxOES");
	cppgl_glRotatexOES = (PFNGLROTATEXOESPROC)load("glRotatexOES");
	cppgl_glScalexOES = (PFNGLSCALEXOESPROC)load("glScalexOES");
	cppgl_glTexEnvxOES = (PFNGLTEXENVXOESPROC)load("glTexEnvxOES");
	cppgl_glTexEnvxvOES = (PFNGLTEXENVXVOESPROC)load("glTexEnvxvOES");
	cppgl_glTexParameterxOES = (PFNGLTEXPARAMETERXOESPROC)load("glTexParameterxOES");
	cppgl_glTexParameterxvOES = (PFNGLTEXPARAMETERXVOESPROC)load("glTexParameterxvOES");
	cppgl_glTranslatexOES = (PFNGLTRANSLATEXOESPROC)load("glTranslatexOES");
	cppgl_glGetLightxvOES = (PFNGLGETLIGHTXVOESPROC)load("glGetLightxvOES");
	cppgl_glGetMaterialxvOES = (PFNGLGETMATERIALXVOESPROC)load("glGetMaterialxvOES");
	cppgl_glPointParameterxOES = (PFNGLPOINTPARAMETERXOESPROC)load("glPointParameterxOES");
	cppgl_glSampleCoveragexOES = (PFNGLSAMPLECOVERAGEXOESPROC)load("glSampleCoveragexOES");
	cppgl_glAccumxOES = (PFNGLACCUMXOESPROC)load("glAccumxOES");
	cppgl_glBitmapxOES = (PFNGLBITMAPXOESPROC)load("glBitmapxOES");
	cppgl_glBlendColorxOES = (PFNGLBLENDCOLORXOESPROC)load("glBlendColorxOES");
	cppgl_glClearAccumxOES = (PFNGLCLEARACCUMXOESPROC)load("glClearAccumxOES");
	cppgl_glColor3xOES = (PFNGLCOLOR3XOESPROC)load("glColor3xOES");
	cppgl_glColor3xvOES = (PFNGLCOLOR3XVOESPROC)load("glColor3xvOES");
	cppgl_glColor4xvOES = (PFNGLCOLOR4XVOESPROC)load("glColor4xvOES");
	cppgl_glConvolutionParameterxOES = (PFNGLCONVOLUTIONPARAMETERXOESPROC)load("glConvolutionParameterxOES");
	cppgl_glConvolutionParameterxvOES = (PFNGLCONVOLUTIONPARAMETERXVOESPROC)load("glConvolutionParameterxvOES");
	cppgl_glEvalCoord1xOES = (PFNGLEVALCOORD1XOESPROC)load("glEvalCoord1xOES");
	cppgl_glEvalCoord1xvOES = (PFNGLEVALCOORD1XVOESPROC)load("glEvalCoord1xvOES");
	cppgl_glEvalCoord2xOES = (PFNGLEVALCOORD2XOESPROC)load("glEvalCoord2xOES");
	cppgl_glEvalCoord2xvOES = (PFNGLEVALCOORD2XVOESPROC)load("glEvalCoord2xvOES");
	cppgl_glFeedbackBufferxOES = (PFNGLFEEDBACKBUFFERXOESPROC)load("glFeedbackBufferxOES");
	cppgl_glGetConvolutionParameterxvOES = (PFNGLGETCONVOLUTIONPARAMETERXVOESPROC)load("glGetConvolutionParameterxvOES");
	cppgl_glGetHistogramParameterxvOES = (PFNGLGETHISTOGRAMPARAMETERXVOESPROC)load("glGetHistogramParameterxvOES");
	cppgl_glGetLightxOES = (PFNGLGETLIGHTXOESPROC)load("glGetLightxOES");
	cppgl_glGetMapxvOES = (PFNGLGETMAPXVOESPROC)load("glGetMapxvOES");
	cppgl_glGetMaterialxOES = (PFNGLGETMATERIALXOESPROC)load("glGetMaterialxOES");
	cppgl_glGetPixelMapxv = (PFNGLGETPIXELMAPXVPROC)load("glGetPixelMapxv");
	cppgl_glGetTexGenxvOES = (PFNGLGETTEXGENXVOESPROC)load("glGetTexGenxvOES");
	cppgl_glGetTexLevelParameterxvOES = (PFNGLGETTEXLEVELPARAMETERXVOESPROC)load("glGetTexLevelParameterxvOES");
	cppgl_glIndexxOES = (PFNGLINDEXXOESPROC)load("glIndexxOES");
	cppgl_glIndexxvOES = (PFNGLINDEXXVOESPROC)load("glIndexxvOES");
	cppgl_glLoadTransposeMatrixxOES = (PFNGLLOADTRANSPOSEMATRIXXOESPROC)load("glLoadTransposeMatrixxOES");
	cppgl_glMap1xOES = (PFNGLMAP1XOESPROC)load("glMap1xOES");
	cppgl_glMap2xOES = (PFNGLMAP2XOESPROC)load("glMap2xOES");
	cppgl_glMapGrid1xOES = (PFNGLMAPGRID1XOESPROC)load("glMapGrid1xOES");
	cppgl_glMapGrid2xOES = (PFNGLMAPGRID2XOESPROC)load("glMapGrid2xOES");
	cppgl_glMultTransposeMatrixxOES = (PFNGLMULTTRANSPOSEMATRIXXOESPROC)load("glMultTransposeMatrixxOES");
	cppgl_glMultiTexCoord1xOES = (PFNGLMULTITEXCOORD1XOESPROC)load("glMultiTexCoord1xOES");
	cppgl_glMultiTexCoord1xvOES = (PFNGLMULTITEXCOORD1XVOESPROC)load("glMultiTexCoord1xvOES");
	cppgl_glMultiTexCoord2xOES = (PFNGLMULTITEXCOORD2XOESPROC)load("glMultiTexCoord2xOES");
	cppgl_glMultiTexCoord2xvOES = (PFNGLMULTITEXCOORD2XVOESPROC)load("glMultiTexCoord2xvOES");
	cppgl_glMultiTexCoord3xOES = (PFNGLMULTITEXCOORD3XOESPROC)load("glMultiTexCoord3xOES");
	cppgl_glMultiTexCoord3xvOES = (PFNGLMULTITEXCOORD3XVOESPROC)load("glMultiTexCoord3xvOES");
	cppgl_glMultiTexCoord4xvOES = (PFNGLMULTITEXCOORD4XVOESPROC)load("glMultiTexCoord4xvOES");
	cppgl_glNormal3xvOES = (PFNGLNORMAL3XVOESPROC)load("glNormal3xvOES");
	cppgl_glPassThroughxOES = (PFNGLPASSTHROUGHXOESPROC)load("glPassThroughxOES");
	cppgl_glPixelMapx = (PFNGLPIXELMAPXPROC)load("glPixelMapx");
	cppgl_glPixelStorex = (PFNGLPIXELSTOREXPROC)load("glPixelStorex");
	cppgl_glPixelTransferxOES = (PFNGLPIXELTRANSFERXOESPROC)load("glPixelTransferxOES");
	cppgl_glPixelZoomxOES = (PFNGLPIXELZOOMXOESPROC)load("glPixelZoomxOES");
	cppgl_glPrioritizeTexturesxOES = (PFNGLPRIORITIZETEXTURESXOESPROC)load("glPrioritizeTexturesxOES");
	cppgl_glRasterPos2xOES = (PFNGLRASTERPOS2XOESPROC)load("glRasterPos2xOES");
	cppgl_glRasterPos2xvOES = (PFNGLRASTERPOS2XVOESPROC)load("glRasterPos2xvOES");
	cppgl_glRasterPos3xOES = (PFNGLRASTERPOS3XOESPROC)load("glRasterPos3xOES");
	cppgl_glRasterPos3xvOES = (PFNGLRASTERPOS3XVOESPROC)load("glRasterPos3xvOES");
	cppgl_glRasterPos4xOES = (PFNGLRASTERPOS4XOESPROC)load("glRasterPos4xOES");
	cppgl_glRasterPos4xvOES = (PFNGLRASTERPOS4XVOESPROC)load("glRasterPos4xvOES");
	cppgl_glRectxOES = (PFNGLRECTXOESPROC)load("glRectxOES");
	cppgl_glRectxvOES = (PFNGLRECTXVOESPROC)load("glRectxvOES");
	cppgl_glTexCoord1xOES = (PFNGLTEXCOORD1XOESPROC)load("glTexCoord1xOES");
	cppgl_glTexCoord1xvOES = (PFNGLTEXCOORD1XVOESPROC)load("glTexCoord1xvOES");
	cppgl_glTexCoord2xOES = (PFNGLTEXCOORD2XOESPROC)load("glTexCoord2xOES");
	cppgl_glTexCoord2xvOES = (PFNGLTEXCOORD2XVOESPROC)load("glTexCoord2xvOES");
	cppgl_glTexCoord3xOES = (PFNGLTEXCOORD3XOESPROC)load("glTexCoord3xOES");
	cppgl_glTexCoord3xvOES = (PFNGLTEXCOORD3XVOESPROC)load("glTexCoord3xvOES");
	cppgl_glTexCoord4xOES = (PFNGLTEXCOORD4XOESPROC)load("glTexCoord4xOES");
	cppgl_glTexCoord4xvOES = (PFNGLTEXCOORD4XVOESPROC)load("glTexCoord4xvOES");
	cppgl_glTexGenxOES = (PFNGLTEXGENXOESPROC)load("glTexGenxOES");
	cppgl_glTexGenxvOES = (PFNGLTEXGENXVOESPROC)load("glTexGenxvOES");
	cppgl_glVertex2xOES = (PFNGLVERTEX2XOESPROC)load("glVertex2xOES");
	cppgl_glVertex2xvOES = (PFNGLVERTEX2XVOESPROC)load("glVertex2xvOES");
	cppgl_glVertex3xOES = (PFNGLVERTEX3XOESPROC)load("glVertex3xOES");
	cppgl_glVertex3xvOES = (PFNGLVERTEX3XVOESPROC)load("glVertex3xvOES");
	cppgl_glVertex4xOES = (PFNGLVERTEX4XOESPROC)load("glVertex4xOES");
	cppgl_glVertex4xvOES = (PFNGLVERTEX4XVOESPROC)load("glVertex4xvOES");
}
static void load_GL_OES_query_matrix(CPPGLloadproc load) {
	if(!CPPGL_GL_OES_query_matrix) return;
	cppgl_glQueryMatrixxOES = (PFNGLQUERYMATRIXXOESPROC)load("glQueryMatrixxOES");
}
static void load_GL_OES_single_precision(CPPGLloadproc load) {
	if(!CPPGL_GL_OES_single_precision) return;
	cppgl_glClearDepthfOES = (PFNGLCLEARDEPTHFOESPROC)load("glClearDepthfOES");
	cppgl_glClipPlanefOES = (PFNGLCLIPPLANEFOESPROC)load("glClipPlanefOES");
	cppgl_glDepthRangefOES = (PFNGLDEPTHRANGEFOESPROC)load("glDepthRangefOES");
	cppgl_glFrustumfOES = (PFNGLFRUSTUMFOESPROC)load("glFrustumfOES");
	cppgl_glGetClipPlanefOES = (PFNGLGETCLIPPLANEFOESPROC)load("glGetClipPlanefOES");
	cppgl_glOrthofOES = (PFNGLORTHOFOESPROC)load("glOrthofOES");
}
static void load_GL_OVR_multiview(CPPGLloadproc load) {
	if(!CPPGL_GL_OVR_multiview) return;
	cppgl_glFramebufferTextureMultiviewOVR = (PFNGLFRAMEBUFFERTEXTUREMULTIVIEWOVRPROC)load("glFramebufferTextureMultiviewOVR");
}
static void load_GL_PGI_misc_hints(CPPGLloadproc load) {
	if(!CPPGL_GL_PGI_misc_hints) return;
	cppgl_glHintPGI = (PFNGLHINTPGIPROC)load("glHintPGI");
}
static void load_GL_SGIS_detail_texture(CPPGLloadproc load) {
	if(!CPPGL_GL_SGIS_detail_texture) return;
	cppgl_glDetailTexFuncSGIS = (PFNGLDETAILTEXFUNCSGISPROC)load("glDetailTexFuncSGIS");
	cppgl_glGetDetailTexFuncSGIS = (PFNGLGETDETAILTEXFUNCSGISPROC)load("glGetDetailTexFuncSGIS");
}
static void load_GL_SGIS_fog_function(CPPGLloadproc load) {
	if(!CPPGL_GL_SGIS_fog_function) return;
	cppgl_glFogFuncSGIS = (PFNGLFOGFUNCSGISPROC)load("glFogFuncSGIS");
	cppgl_glGetFogFuncSGIS = (PFNGLGETFOGFUNCSGISPROC)load("glGetFogFuncSGIS");
}
static void load_GL_SGIS_multisample(CPPGLloadproc load) {
	if(!CPPGL_GL_SGIS_multisample) return;
	cppgl_glSampleMaskSGIS = (PFNGLSAMPLEMASKSGISPROC)load("glSampleMaskSGIS");
	cppgl_glSamplePatternSGIS = (PFNGLSAMPLEPATTERNSGISPROC)load("glSamplePatternSGIS");
}
static void load_GL_SGIS_pixel_texture(CPPGLloadproc load) {
	if(!CPPGL_GL_SGIS_pixel_texture) return;
	cppgl_glPixelTexGenParameteriSGIS = (PFNGLPIXELTEXGENPARAMETERISGISPROC)load("glPixelTexGenParameteriSGIS");
	cppgl_glPixelTexGenParameterivSGIS = (PFNGLPIXELTEXGENPARAMETERIVSGISPROC)load("glPixelTexGenParameterivSGIS");
	cppgl_glPixelTexGenParameterfSGIS = (PFNGLPIXELTEXGENPARAMETERFSGISPROC)load("glPixelTexGenParameterfSGIS");
	cppgl_glPixelTexGenParameterfvSGIS = (PFNGLPIXELTEXGENPARAMETERFVSGISPROC)load("glPixelTexGenParameterfvSGIS");
	cppgl_glGetPixelTexGenParameterivSGIS = (PFNGLGETPIXELTEXGENPARAMETERIVSGISPROC)load("glGetPixelTexGenParameterivSGIS");
	cppgl_glGetPixelTexGenParameterfvSGIS = (PFNGLGETPIXELTEXGENPARAMETERFVSGISPROC)load("glGetPixelTexGenParameterfvSGIS");
}
static void load_GL_SGIS_point_parameters(CPPGLloadproc load) {
	if(!CPPGL_GL_SGIS_point_parameters) return;
	cppgl_glPointParameterfSGIS = (PFNGLPOINTPARAMETERFSGISPROC)load("glPointParameterfSGIS");
	cppgl_glPointParameterfvSGIS = (PFNGLPOINTPARAMETERFVSGISPROC)load("glPointParameterfvSGIS");
}
static void load_GL_SGIS_sharpen_texture(CPPGLloadproc load) {
	if(!CPPGL_GL_SGIS_sharpen_texture) return;
	cppgl_glSharpenTexFuncSGIS = (PFNGLSHARPENTEXFUNCSGISPROC)load("glSharpenTexFuncSGIS");
	cppgl_glGetSharpenTexFuncSGIS = (PFNGLGETSHARPENTEXFUNCSGISPROC)load("glGetSharpenTexFuncSGIS");
}
static void load_GL_SGIS_texture4D(CPPGLloadproc load) {
	if(!CPPGL_GL_SGIS_texture4D) return;
	cppgl_glTexImage4DSGIS = (PFNGLTEXIMAGE4DSGISPROC)load("glTexImage4DSGIS");
	cppgl_glTexSubImage4DSGIS = (PFNGLTEXSUBIMAGE4DSGISPROC)load("glTexSubImage4DSGIS");
}
static void load_GL_SGIS_texture_color_mask(CPPGLloadproc load) {
	if(!CPPGL_GL_SGIS_texture_color_mask) return;
	cppgl_glTextureColorMaskSGIS = (PFNGLTEXTURECOLORMASKSGISPROC)load("glTextureColorMaskSGIS");
}
static void load_GL_SGIS_texture_filter4(CPPGLloadproc load) {
	if(!CPPGL_GL_SGIS_texture_filter4) return;
	cppgl_glGetTexFilterFuncSGIS = (PFNGLGETTEXFILTERFUNCSGISPROC)load("glGetTexFilterFuncSGIS");
	cppgl_glTexFilterFuncSGIS = (PFNGLTEXFILTERFUNCSGISPROC)load("glTexFilterFuncSGIS");
}
static void load_GL_SGIX_async(CPPGLloadproc load) {
	if(!CPPGL_GL_SGIX_async) return;
	cppgl_glAsyncMarkerSGIX = (PFNGLASYNCMARKERSGIXPROC)load("glAsyncMarkerSGIX");
	cppgl_glFinishAsyncSGIX = (PFNGLFINISHASYNCSGIXPROC)load("glFinishAsyncSGIX");
	cppgl_glPollAsyncSGIX = (PFNGLPOLLASYNCSGIXPROC)load("glPollAsyncSGIX");
	cppgl_glGenAsyncMarkersSGIX = (PFNGLGENASYNCMARKERSSGIXPROC)load("glGenAsyncMarkersSGIX");
	cppgl_glDeleteAsyncMarkersSGIX = (PFNGLDELETEASYNCMARKERSSGIXPROC)load("glDeleteAsyncMarkersSGIX");
	cppgl_glIsAsyncMarkerSGIX = (PFNGLISASYNCMARKERSGIXPROC)load("glIsAsyncMarkerSGIX");
}
static void load_GL_SGIX_flush_raster(CPPGLloadproc load) {
	if(!CPPGL_GL_SGIX_flush_raster) return;
	cppgl_glFlushRasterSGIX = (PFNGLFLUSHRASTERSGIXPROC)load("glFlushRasterSGIX");
}
static void load_GL_SGIX_fragment_lighting(CPPGLloadproc load) {
	if(!CPPGL_GL_SGIX_fragment_lighting) return;
	cppgl_glFragmentColorMaterialSGIX = (PFNGLFRAGMENTCOLORMATERIALSGIXPROC)load("glFragmentColorMaterialSGIX");
	cppgl_glFragmentLightfSGIX = (PFNGLFRAGMENTLIGHTFSGIXPROC)load("glFragmentLightfSGIX");
	cppgl_glFragmentLightfvSGIX = (PFNGLFRAGMENTLIGHTFVSGIXPROC)load("glFragmentLightfvSGIX");
	cppgl_glFragmentLightiSGIX = (PFNGLFRAGMENTLIGHTISGIXPROC)load("glFragmentLightiSGIX");
	cppgl_glFragmentLightivSGIX = (PFNGLFRAGMENTLIGHTIVSGIXPROC)load("glFragmentLightivSGIX");
	cppgl_glFragmentLightModelfSGIX = (PFNGLFRAGMENTLIGHTMODELFSGIXPROC)load("glFragmentLightModelfSGIX");
	cppgl_glFragmentLightModelfvSGIX = (PFNGLFRAGMENTLIGHTMODELFVSGIXPROC)load("glFragmentLightModelfvSGIX");
	cppgl_glFragmentLightModeliSGIX = (PFNGLFRAGMENTLIGHTMODELISGIXPROC)load("glFragmentLightModeliSGIX");
	cppgl_glFragmentLightModelivSGIX = (PFNGLFRAGMENTLIGHTMODELIVSGIXPROC)load("glFragmentLightModelivSGIX");
	cppgl_glFragmentMaterialfSGIX = (PFNGLFRAGMENTMATERIALFSGIXPROC)load("glFragmentMaterialfSGIX");
	cppgl_glFragmentMaterialfvSGIX = (PFNGLFRAGMENTMATERIALFVSGIXPROC)load("glFragmentMaterialfvSGIX");
	cppgl_glFragmentMaterialiSGIX = (PFNGLFRAGMENTMATERIALISGIXPROC)load("glFragmentMaterialiSGIX");
	cppgl_glFragmentMaterialivSGIX = (PFNGLFRAGMENTMATERIALIVSGIXPROC)load("glFragmentMaterialivSGIX");
	cppgl_glGetFragmentLightfvSGIX = (PFNGLGETFRAGMENTLIGHTFVSGIXPROC)load("glGetFragmentLightfvSGIX");
	cppgl_glGetFragmentLightivSGIX = (PFNGLGETFRAGMENTLIGHTIVSGIXPROC)load("glGetFragmentLightivSGIX");
	cppgl_glGetFragmentMaterialfvSGIX = (PFNGLGETFRAGMENTMATERIALFVSGIXPROC)load("glGetFragmentMaterialfvSGIX");
	cppgl_glGetFragmentMaterialivSGIX = (PFNGLGETFRAGMENTMATERIALIVSGIXPROC)load("glGetFragmentMaterialivSGIX");
	cppgl_glLightEnviSGIX = (PFNGLLIGHTENVISGIXPROC)load("glLightEnviSGIX");
}
static void load_GL_SGIX_framezoom(CPPGLloadproc load) {
	if(!CPPGL_GL_SGIX_framezoom) return;
	cppgl_glFrameZoomSGIX = (PFNGLFRAMEZOOMSGIXPROC)load("glFrameZoomSGIX");
}
static void load_GL_SGIX_igloo_interface(CPPGLloadproc load) {
	if(!CPPGL_GL_SGIX_igloo_interface) return;
	cppgl_glIglooInterfaceSGIX = (PFNGLIGLOOINTERFACESGIXPROC)load("glIglooInterfaceSGIX");
}
static void load_GL_SGIX_instruments(CPPGLloadproc load) {
	if(!CPPGL_GL_SGIX_instruments) return;
	cppgl_glGetInstrumentsSGIX = (PFNGLGETINSTRUMENTSSGIXPROC)load("glGetInstrumentsSGIX");
	cppgl_glInstrumentsBufferSGIX = (PFNGLINSTRUMENTSBUFFERSGIXPROC)load("glInstrumentsBufferSGIX");
	cppgl_glPollInstrumentsSGIX = (PFNGLPOLLINSTRUMENTSSGIXPROC)load("glPollInstrumentsSGIX");
	cppgl_glReadInstrumentsSGIX = (PFNGLREADINSTRUMENTSSGIXPROC)load("glReadInstrumentsSGIX");
	cppgl_glStartInstrumentsSGIX = (PFNGLSTARTINSTRUMENTSSGIXPROC)load("glStartInstrumentsSGIX");
	cppgl_glStopInstrumentsSGIX = (PFNGLSTOPINSTRUMENTSSGIXPROC)load("glStopInstrumentsSGIX");
}
static void load_GL_SGIX_list_priority(CPPGLloadproc load) {
	if(!CPPGL_GL_SGIX_list_priority) return;
	cppgl_glGetListParameterfvSGIX = (PFNGLGETLISTPARAMETERFVSGIXPROC)load("glGetListParameterfvSGIX");
	cppgl_glGetListParameterivSGIX = (PFNGLGETLISTPARAMETERIVSGIXPROC)load("glGetListParameterivSGIX");
	cppgl_glListParameterfSGIX = (PFNGLLISTPARAMETERFSGIXPROC)load("glListParameterfSGIX");
	cppgl_glListParameterfvSGIX = (PFNGLLISTPARAMETERFVSGIXPROC)load("glListParameterfvSGIX");
	cppgl_glListParameteriSGIX = (PFNGLLISTPARAMETERISGIXPROC)load("glListParameteriSGIX");
	cppgl_glListParameterivSGIX = (PFNGLLISTPARAMETERIVSGIXPROC)load("glListParameterivSGIX");
}
static void load_GL_SGIX_pixel_texture(CPPGLloadproc load) {
	if(!CPPGL_GL_SGIX_pixel_texture) return;
	cppgl_glPixelTexGenSGIX = (PFNGLPIXELTEXGENSGIXPROC)load("glPixelTexGenSGIX");
}
static void load_GL_SGIX_polynomial_ffd(CPPGLloadproc load) {
	if(!CPPGL_GL_SGIX_polynomial_ffd) return;
	cppgl_glDeformationMap3dSGIX = (PFNGLDEFORMATIONMAP3DSGIXPROC)load("glDeformationMap3dSGIX");
	cppgl_glDeformationMap3fSGIX = (PFNGLDEFORMATIONMAP3FSGIXPROC)load("glDeformationMap3fSGIX");
	cppgl_glDeformSGIX = (PFNGLDEFORMSGIXPROC)load("glDeformSGIX");
	cppgl_glLoadIdentityDeformationMapSGIX = (PFNGLLOADIDENTITYDEFORMATIONMAPSGIXPROC)load("glLoadIdentityDeformationMapSGIX");
}
static void load_GL_SGIX_reference_plane(CPPGLloadproc load) {
	if(!CPPGL_GL_SGIX_reference_plane) return;
	cppgl_glReferencePlaneSGIX = (PFNGLREFERENCEPLANESGIXPROC)load("glReferencePlaneSGIX");
}
static void load_GL_SGIX_sprite(CPPGLloadproc load) {
	if(!CPPGL_GL_SGIX_sprite) return;
	cppgl_glSpriteParameterfSGIX = (PFNGLSPRITEPARAMETERFSGIXPROC)load("glSpriteParameterfSGIX");
	cppgl_glSpriteParameterfvSGIX = (PFNGLSPRITEPARAMETERFVSGIXPROC)load("glSpriteParameterfvSGIX");
	cppgl_glSpriteParameteriSGIX = (PFNGLSPRITEPARAMETERISGIXPROC)load("glSpriteParameteriSGIX");
	cppgl_glSpriteParameterivSGIX = (PFNGLSPRITEPARAMETERIVSGIXPROC)load("glSpriteParameterivSGIX");
}
static void load_GL_SGIX_tag_sample_buffer(CPPGLloadproc load) {
	if(!CPPGL_GL_SGIX_tag_sample_buffer) return;
	cppgl_glTagSampleBufferSGIX = (PFNGLTAGSAMPLEBUFFERSGIXPROC)load("glTagSampleBufferSGIX");
}
static void load_GL_SGI_color_table(CPPGLloadproc load) {
	if(!CPPGL_GL_SGI_color_table) return;
	cppgl_glColorTableSGI = (PFNGLCOLORTABLESGIPROC)load("glColorTableSGI");
	cppgl_glColorTableParameterfvSGI = (PFNGLCOLORTABLEPARAMETERFVSGIPROC)load("glColorTableParameterfvSGI");
	cppgl_glColorTableParameterivSGI = (PFNGLCOLORTABLEPARAMETERIVSGIPROC)load("glColorTableParameterivSGI");
	cppgl_glCopyColorTableSGI = (PFNGLCOPYCOLORTABLESGIPROC)load("glCopyColorTableSGI");
	cppgl_glGetColorTableSGI = (PFNGLGETCOLORTABLESGIPROC)load("glGetColorTableSGI");
	cppgl_glGetColorTableParameterfvSGI = (PFNGLGETCOLORTABLEPARAMETERFVSGIPROC)load("glGetColorTableParameterfvSGI");
	cppgl_glGetColorTableParameterivSGI = (PFNGLGETCOLORTABLEPARAMETERIVSGIPROC)load("glGetColorTableParameterivSGI");
}
static void load_GL_SUNX_constant_data(CPPGLloadproc load) {
	if(!CPPGL_GL_SUNX_constant_data) return;
	cppgl_glFinishTextureSUNX = (PFNGLFINISHTEXTURESUNXPROC)load("glFinishTextureSUNX");
}
static void load_GL_SUN_global_alpha(CPPGLloadproc load) {
	if(!CPPGL_GL_SUN_global_alpha) return;
	cppgl_glGlobalAlphaFactorbSUN = (PFNGLGLOBALALPHAFACTORBSUNPROC)load("glGlobalAlphaFactorbSUN");
	cppgl_glGlobalAlphaFactorsSUN = (PFNGLGLOBALALPHAFACTORSSUNPROC)load("glGlobalAlphaFactorsSUN");
	cppgl_glGlobalAlphaFactoriSUN = (PFNGLGLOBALALPHAFACTORISUNPROC)load("glGlobalAlphaFactoriSUN");
	cppgl_glGlobalAlphaFactorfSUN = (PFNGLGLOBALALPHAFACTORFSUNPROC)load("glGlobalAlphaFactorfSUN");
	cppgl_glGlobalAlphaFactordSUN = (PFNGLGLOBALALPHAFACTORDSUNPROC)load("glGlobalAlphaFactordSUN");
	cppgl_glGlobalAlphaFactorubSUN = (PFNGLGLOBALALPHAFACTORUBSUNPROC)load("glGlobalAlphaFactorubSUN");
	cppgl_glGlobalAlphaFactorusSUN = (PFNGLGLOBALALPHAFACTORUSSUNPROC)load("glGlobalAlphaFactorusSUN");
	cppgl_glGlobalAlphaFactoruiSUN = (PFNGLGLOBALALPHAFACTORUISUNPROC)load("glGlobalAlphaFactoruiSUN");
}
static void load_GL_SUN_mesh_array(CPPGLloadproc load) {
	if(!CPPGL_GL_SUN_mesh_array) return;
	cppgl_glDrawMeshArraysSUN = (PFNGLDRAWMESHARRAYSSUNPROC)load("glDrawMeshArraysSUN");
}
static void load_GL_SUN_triangle_list(CPPGLloadproc load) {
	if(!CPPGL_GL_SUN_triangle_list) return;
	cppgl_glReplacementCodeuiSUN = (PFNGLREPLACEMENTCODEUISUNPROC)load("glReplacementCodeuiSUN");
	cppgl_glReplacementCodeusSUN = (PFNGLREPLACEMENTCODEUSSUNPROC)load("glReplacementCodeusSUN");
	cppgl_glReplacementCodeubSUN = (PFNGLREPLACEMENTCODEUBSUNPROC)load("glReplacementCodeubSUN");
	cppgl_glReplacementCodeuivSUN = (PFNGLREPLACEMENTCODEUIVSUNPROC)load("glReplacementCodeuivSUN");
	cppgl_glReplacementCodeusvSUN = (PFNGLREPLACEMENTCODEUSVSUNPROC)load("glReplacementCodeusvSUN");
	cppgl_glReplacementCodeubvSUN = (PFNGLREPLACEMENTCODEUBVSUNPROC)load("glReplacementCodeubvSUN");
	cppgl_glReplacementCodePointerSUN = (PFNGLREPLACEMENTCODEPOINTERSUNPROC)load("glReplacementCodePointerSUN");
}
static void load_GL_SUN_vertex(CPPGLloadproc load) {
	if(!CPPGL_GL_SUN_vertex) return;
	cppgl_glColor4ubVertex2fSUN = (PFNGLCOLOR4UBVERTEX2FSUNPROC)load("glColor4ubVertex2fSUN");
	cppgl_glColor4ubVertex2fvSUN = (PFNGLCOLOR4UBVERTEX2FVSUNPROC)load("glColor4ubVertex2fvSUN");
	cppgl_glColor4ubVertex3fSUN = (PFNGLCOLOR4UBVERTEX3FSUNPROC)load("glColor4ubVertex3fSUN");
	cppgl_glColor4ubVertex3fvSUN = (PFNGLCOLOR4UBVERTEX3FVSUNPROC)load("glColor4ubVertex3fvSUN");
	cppgl_glColor3fVertex3fSUN = (PFNGLCOLOR3FVERTEX3FSUNPROC)load("glColor3fVertex3fSUN");
	cppgl_glColor3fVertex3fvSUN = (PFNGLCOLOR3FVERTEX3FVSUNPROC)load("glColor3fVertex3fvSUN");
	cppgl_glNormal3fVertex3fSUN = (PFNGLNORMAL3FVERTEX3FSUNPROC)load("glNormal3fVertex3fSUN");
	cppgl_glNormal3fVertex3fvSUN = (PFNGLNORMAL3FVERTEX3FVSUNPROC)load("glNormal3fVertex3fvSUN");
	cppgl_glColor4fNormal3fVertex3fSUN = (PFNGLCOLOR4FNORMAL3FVERTEX3FSUNPROC)load("glColor4fNormal3fVertex3fSUN");
	cppgl_glColor4fNormal3fVertex3fvSUN = (PFNGLCOLOR4FNORMAL3FVERTEX3FVSUNPROC)load("glColor4fNormal3fVertex3fvSUN");
	cppgl_glTexCoord2fVertex3fSUN = (PFNGLTEXCOORD2FVERTEX3FSUNPROC)load("glTexCoord2fVertex3fSUN");
	cppgl_glTexCoord2fVertex3fvSUN = (PFNGLTEXCOORD2FVERTEX3FVSUNPROC)load("glTexCoord2fVertex3fvSUN");
	cppgl_glTexCoord4fVertex4fSUN = (PFNGLTEXCOORD4FVERTEX4FSUNPROC)load("glTexCoord4fVertex4fSUN");
	cppgl_glTexCoord4fVertex4fvSUN = (PFNGLTEXCOORD4FVERTEX4FVSUNPROC)load("glTexCoord4fVertex4fvSUN");
	cppgl_glTexCoord2fColor4ubVertex3fSUN = (PFNGLTEXCOORD2FCOLOR4UBVERTEX3FSUNPROC)load("glTexCoord2fColor4ubVertex3fSUN");
	cppgl_glTexCoord2fColor4ubVertex3fvSUN = (PFNGLTEXCOORD2FCOLOR4UBVERTEX3FVSUNPROC)load("glTexCoord2fColor4ubVertex3fvSUN");
	cppgl_glTexCoord2fColor3fVertex3fSUN = (PFNGLTEXCOORD2FCOLOR3FVERTEX3FSUNPROC)load("glTexCoord2fColor3fVertex3fSUN");
	cppgl_glTexCoord2fColor3fVertex3fvSUN = (PFNGLTEXCOORD2FCOLOR3FVERTEX3FVSUNPROC)load("glTexCoord2fColor3fVertex3fvSUN");
	cppgl_glTexCoord2fNormal3fVertex3fSUN = (PFNGLTEXCOORD2FNORMAL3FVERTEX3FSUNPROC)load("glTexCoord2fNormal3fVertex3fSUN");
	cppgl_glTexCoord2fNormal3fVertex3fvSUN = (PFNGLTEXCOORD2FNORMAL3FVERTEX3FVSUNPROC)load("glTexCoord2fNormal3fVertex3fvSUN");
	cppgl_glTexCoord2fColor4fNormal3fVertex3fSUN = (PFNGLTEXCOORD2FCOLOR4FNORMAL3FVERTEX3FSUNPROC)load("glTexCoord2fColor4fNormal3fVertex3fSUN");
	cppgl_glTexCoord2fColor4fNormal3fVertex3fvSUN = (PFNGLTEXCOORD2FCOLOR4FNORMAL3FVERTEX3FVSUNPROC)load("glTexCoord2fColor4fNormal3fVertex3fvSUN");
	cppgl_glTexCoord4fColor4fNormal3fVertex4fSUN = (PFNGLTEXCOORD4FCOLOR4FNORMAL3FVERTEX4FSUNPROC)load("glTexCoord4fColor4fNormal3fVertex4fSUN");
	cppgl_glTexCoord4fColor4fNormal3fVertex4fvSUN = (PFNGLTEXCOORD4FCOLOR4FNORMAL3FVERTEX4FVSUNPROC)load("glTexCoord4fColor4fNormal3fVertex4fvSUN");
	cppgl_glReplacementCodeuiVertex3fSUN = (PFNGLREPLACEMENTCODEUIVERTEX3FSUNPROC)load("glReplacementCodeuiVertex3fSUN");
	cppgl_glReplacementCodeuiVertex3fvSUN = (PFNGLREPLACEMENTCODEUIVERTEX3FVSUNPROC)load("glReplacementCodeuiVertex3fvSUN");
	cppgl_glReplacementCodeuiColor4ubVertex3fSUN = (PFNGLREPLACEMENTCODEUICOLOR4UBVERTEX3FSUNPROC)load("glReplacementCodeuiColor4ubVertex3fSUN");
	cppgl_glReplacementCodeuiColor4ubVertex3fvSUN = (PFNGLREPLACEMENTCODEUICOLOR4UBVERTEX3FVSUNPROC)load("glReplacementCodeuiColor4ubVertex3fvSUN");
	cppgl_glReplacementCodeuiColor3fVertex3fSUN = (PFNGLREPLACEMENTCODEUICOLOR3FVERTEX3FSUNPROC)load("glReplacementCodeuiColor3fVertex3fSUN");
	cppgl_glReplacementCodeuiColor3fVertex3fvSUN = (PFNGLREPLACEMENTCODEUICOLOR3FVERTEX3FVSUNPROC)load("glReplacementCodeuiColor3fVertex3fvSUN");
	cppgl_glReplacementCodeuiNormal3fVertex3fSUN = (PFNGLREPLACEMENTCODEUINORMAL3FVERTEX3FSUNPROC)load("glReplacementCodeuiNormal3fVertex3fSUN");
	cppgl_glReplacementCodeuiNormal3fVertex3fvSUN = (PFNGLREPLACEMENTCODEUINORMAL3FVERTEX3FVSUNPROC)load("glReplacementCodeuiNormal3fVertex3fvSUN");
	cppgl_glReplacementCodeuiColor4fNormal3fVertex3fSUN = (PFNGLREPLACEMENTCODEUICOLOR4FNORMAL3FVERTEX3FSUNPROC)load("glReplacementCodeuiColor4fNormal3fVertex3fSUN");
	cppgl_glReplacementCodeuiColor4fNormal3fVertex3fvSUN = (PFNGLREPLACEMENTCODEUICOLOR4FNORMAL3FVERTEX3FVSUNPROC)load("glReplacementCodeuiColor4fNormal3fVertex3fvSUN");
	cppgl_glReplacementCodeuiTexCoord2fVertex3fSUN = (PFNGLREPLACEMENTCODEUITEXCOORD2FVERTEX3FSUNPROC)load("glReplacementCodeuiTexCoord2fVertex3fSUN");
	cppgl_glReplacementCodeuiTexCoord2fVertex3fvSUN = (PFNGLREPLACEMENTCODEUITEXCOORD2FVERTEX3FVSUNPROC)load("glReplacementCodeuiTexCoord2fVertex3fvSUN");
	cppgl_glReplacementCodeuiTexCoord2fNormal3fVertex3fSUN = (PFNGLREPLACEMENTCODEUITEXCOORD2FNORMAL3FVERTEX3FSUNPROC)load("glReplacementCodeuiTexCoord2fNormal3fVertex3fSUN");
	cppgl_glReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN = (PFNGLREPLACEMENTCODEUITEXCOORD2FNORMAL3FVERTEX3FVSUNPROC)load("glReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN");
	cppgl_glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN = (PFNGLREPLACEMENTCODEUITEXCOORD2FCOLOR4FNORMAL3FVERTEX3FSUNPROC)load("glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN");
	cppgl_glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN = (PFNGLREPLACEMENTCODEUITEXCOORD2FCOLOR4FNORMAL3FVERTEX3FVSUNPROC)load("glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN");
}
static int find_extensionsGL(void) {
	if (!get_exts()) return 0;
	CPPGL_GL_3DFX_multisample = has_ext("GL_3DFX_multisample");
	CPPGL_GL_3DFX_tbuffer = has_ext("GL_3DFX_tbuffer");
	CPPGL_GL_3DFX_texture_compression_FXT1 = has_ext("GL_3DFX_texture_compression_FXT1");
	CPPGL_GL_AMD_blend_minmax_factor = has_ext("GL_AMD_blend_minmax_factor");
	CPPGL_GL_AMD_conservative_depth = has_ext("GL_AMD_conservative_depth");
	CPPGL_GL_AMD_debug_output = has_ext("GL_AMD_debug_output");
	CPPGL_GL_AMD_depth_clamp_separate = has_ext("GL_AMD_depth_clamp_separate");
	CPPGL_GL_AMD_draw_buffers_blend = has_ext("GL_AMD_draw_buffers_blend");
	CPPGL_GL_AMD_gcn_shader = has_ext("GL_AMD_gcn_shader");
	CPPGL_GL_AMD_gpu_shader_half_float = has_ext("GL_AMD_gpu_shader_half_float");
	CPPGL_GL_AMD_gpu_shader_int64 = has_ext("GL_AMD_gpu_shader_int64");
	CPPGL_GL_AMD_interleaved_elements = has_ext("GL_AMD_interleaved_elements");
	CPPGL_GL_AMD_multi_draw_indirect = has_ext("GL_AMD_multi_draw_indirect");
	CPPGL_GL_AMD_name_gen_delete = has_ext("GL_AMD_name_gen_delete");
	CPPGL_GL_AMD_occlusion_query_event = has_ext("GL_AMD_occlusion_query_event");
	CPPGL_GL_AMD_performance_monitor = has_ext("GL_AMD_performance_monitor");
	CPPGL_GL_AMD_pinned_memory = has_ext("GL_AMD_pinned_memory");
	CPPGL_GL_AMD_query_buffer_object = has_ext("GL_AMD_query_buffer_object");
	CPPGL_GL_AMD_sample_positions = has_ext("GL_AMD_sample_positions");
	CPPGL_GL_AMD_seamless_cubemap_per_texture = has_ext("GL_AMD_seamless_cubemap_per_texture");
	CPPGL_GL_AMD_shader_atomic_counter_ops = has_ext("GL_AMD_shader_atomic_counter_ops");
	CPPGL_GL_AMD_shader_ballot = has_ext("GL_AMD_shader_ballot");
	CPPGL_GL_AMD_shader_explicit_vertex_parameter = has_ext("GL_AMD_shader_explicit_vertex_parameter");
	CPPGL_GL_AMD_shader_stencil_export = has_ext("GL_AMD_shader_stencil_export");
	CPPGL_GL_AMD_shader_trinary_minmax = has_ext("GL_AMD_shader_trinary_minmax");
	CPPGL_GL_AMD_sparse_texture = has_ext("GL_AMD_sparse_texture");
	CPPGL_GL_AMD_stencil_operation_extended = has_ext("GL_AMD_stencil_operation_extended");
	CPPGL_GL_AMD_texture_texture4 = has_ext("GL_AMD_texture_texture4");
	CPPGL_GL_AMD_transform_feedback3_lines_triangles = has_ext("GL_AMD_transform_feedback3_lines_triangles");
	CPPGL_GL_AMD_transform_feedback4 = has_ext("GL_AMD_transform_feedback4");
	CPPGL_GL_AMD_vertex_shader_layer = has_ext("GL_AMD_vertex_shader_layer");
	CPPGL_GL_AMD_vertex_shader_tessellator = has_ext("GL_AMD_vertex_shader_tessellator");
	CPPGL_GL_AMD_vertex_shader_viewport_index = has_ext("GL_AMD_vertex_shader_viewport_index");
	CPPGL_GL_APPLE_aux_depth_stencil = has_ext("GL_APPLE_aux_depth_stencil");
	CPPGL_GL_APPLE_client_storage = has_ext("GL_APPLE_client_storage");
	CPPGL_GL_APPLE_element_array = has_ext("GL_APPLE_element_array");
	CPPGL_GL_APPLE_fence = has_ext("GL_APPLE_fence");
	CPPGL_GL_APPLE_float_pixels = has_ext("GL_APPLE_float_pixels");
	CPPGL_GL_APPLE_flush_buffer_range = has_ext("GL_APPLE_flush_buffer_range");
	CPPGL_GL_APPLE_object_purgeable = has_ext("GL_APPLE_object_purgeable");
	CPPGL_GL_APPLE_rgb_422 = has_ext("GL_APPLE_rgb_422");
	CPPGL_GL_APPLE_row_bytes = has_ext("GL_APPLE_row_bytes");
	CPPGL_GL_APPLE_specular_vector = has_ext("GL_APPLE_specular_vector");
	CPPGL_GL_APPLE_texture_range = has_ext("GL_APPLE_texture_range");
	CPPGL_GL_APPLE_transform_hint = has_ext("GL_APPLE_transform_hint");
	CPPGL_GL_APPLE_vertex_array_object = has_ext("GL_APPLE_vertex_array_object");
	CPPGL_GL_APPLE_vertex_array_range = has_ext("GL_APPLE_vertex_array_range");
	CPPGL_GL_APPLE_vertex_program_evaluators = has_ext("GL_APPLE_vertex_program_evaluators");
	CPPGL_GL_APPLE_ycbcr_422 = has_ext("GL_APPLE_ycbcr_422");
	CPPGL_GL_ARB_ES2_compatibility = has_ext("GL_ARB_ES2_compatibility");
	CPPGL_GL_ARB_ES3_1_compatibility = has_ext("GL_ARB_ES3_1_compatibility");
	CPPGL_GL_ARB_ES3_2_compatibility = has_ext("GL_ARB_ES3_2_compatibility");
	CPPGL_GL_ARB_ES3_compatibility = has_ext("GL_ARB_ES3_compatibility");
	CPPGL_GL_ARB_arrays_of_arrays = has_ext("GL_ARB_arrays_of_arrays");
	CPPGL_GL_ARB_base_instance = has_ext("GL_ARB_base_instance");
	CPPGL_GL_ARB_bindless_texture = has_ext("GL_ARB_bindless_texture");
	CPPGL_GL_ARB_blend_func_extended = has_ext("GL_ARB_blend_func_extended");
	CPPGL_GL_ARB_buffer_storage = has_ext("GL_ARB_buffer_storage");
	CPPGL_GL_ARB_cl_event = has_ext("GL_ARB_cl_event");
	CPPGL_GL_ARB_clear_buffer_object = has_ext("GL_ARB_clear_buffer_object");
	CPPGL_GL_ARB_clear_texture = has_ext("GL_ARB_clear_texture");
	CPPGL_GL_ARB_clip_control = has_ext("GL_ARB_clip_control");
	CPPGL_GL_ARB_color_buffer_float = has_ext("GL_ARB_color_buffer_float");
	CPPGL_GL_ARB_compatibility = has_ext("GL_ARB_compatibility");
	CPPGL_GL_ARB_compressed_texture_pixel_storage = has_ext("GL_ARB_compressed_texture_pixel_storage");
	CPPGL_GL_ARB_compute_shader = has_ext("GL_ARB_compute_shader");
	CPPGL_GL_ARB_compute_variable_group_size = has_ext("GL_ARB_compute_variable_group_size");
	CPPGL_GL_ARB_conditional_render_inverted = has_ext("GL_ARB_conditional_render_inverted");
	CPPGL_GL_ARB_conservative_depth = has_ext("GL_ARB_conservative_depth");
	CPPGL_GL_ARB_copy_buffer = has_ext("GL_ARB_copy_buffer");
	CPPGL_GL_ARB_copy_image = has_ext("GL_ARB_copy_image");
	CPPGL_GL_ARB_cull_distance = has_ext("GL_ARB_cull_distance");
	CPPGL_GL_ARB_debug_output = has_ext("GL_ARB_debug_output");
	CPPGL_GL_ARB_depth_buffer_float = has_ext("GL_ARB_depth_buffer_float");
	CPPGL_GL_ARB_depth_clamp = has_ext("GL_ARB_depth_clamp");
	CPPGL_GL_ARB_depth_texture = has_ext("GL_ARB_depth_texture");
	CPPGL_GL_ARB_derivative_control = has_ext("GL_ARB_derivative_control");
	CPPGL_GL_ARB_direct_state_access = has_ext("GL_ARB_direct_state_access");
	CPPGL_GL_ARB_draw_buffers = has_ext("GL_ARB_draw_buffers");
	CPPGL_GL_ARB_draw_buffers_blend = has_ext("GL_ARB_draw_buffers_blend");
	CPPGL_GL_ARB_draw_elements_base_vertex = has_ext("GL_ARB_draw_elements_base_vertex");
	CPPGL_GL_ARB_draw_indirect = has_ext("GL_ARB_draw_indirect");
	CPPGL_GL_ARB_draw_instanced = has_ext("GL_ARB_draw_instanced");
	CPPGL_GL_ARB_enhanced_layouts = has_ext("GL_ARB_enhanced_layouts");
	CPPGL_GL_ARB_explicit_attrib_location = has_ext("GL_ARB_explicit_attrib_location");
	CPPGL_GL_ARB_explicit_uniform_location = has_ext("GL_ARB_explicit_uniform_location");
	CPPGL_GL_ARB_fragment_coord_conventions = has_ext("GL_ARB_fragment_coord_conventions");
	CPPGL_GL_ARB_fragment_layer_viewport = has_ext("GL_ARB_fragment_layer_viewport");
	CPPGL_GL_ARB_fragment_program = has_ext("GL_ARB_fragment_program");
	CPPGL_GL_ARB_fragment_program_shadow = has_ext("GL_ARB_fragment_program_shadow");
	CPPGL_GL_ARB_fragment_shader = has_ext("GL_ARB_fragment_shader");
	CPPGL_GL_ARB_fragment_shader_interlock = has_ext("GL_ARB_fragment_shader_interlock");
	CPPGL_GL_ARB_framebuffer_no_attachments = has_ext("GL_ARB_framebuffer_no_attachments");
	CPPGL_GL_ARB_framebuffer_object = has_ext("GL_ARB_framebuffer_object");
	CPPGL_GL_ARB_framebuffer_sRGB = has_ext("GL_ARB_framebuffer_sRGB");
	CPPGL_GL_ARB_geometry_shader4 = has_ext("GL_ARB_geometry_shader4");
	CPPGL_GL_ARB_get_program_binary = has_ext("GL_ARB_get_program_binary");
	CPPGL_GL_ARB_get_texture_sub_image = has_ext("GL_ARB_get_texture_sub_image");
	CPPGL_GL_ARB_gpu_shader5 = has_ext("GL_ARB_gpu_shader5");
	CPPGL_GL_ARB_gpu_shader_fp64 = has_ext("GL_ARB_gpu_shader_fp64");
	CPPGL_GL_ARB_gpu_shader_int64 = has_ext("GL_ARB_gpu_shader_int64");
	CPPGL_GL_ARB_half_float_pixel = has_ext("GL_ARB_half_float_pixel");
	CPPGL_GL_ARB_half_float_vertex = has_ext("GL_ARB_half_float_vertex");
	CPPGL_GL_ARB_imaging = has_ext("GL_ARB_imaging");
	CPPGL_GL_ARB_indirect_parameters = has_ext("GL_ARB_indirect_parameters");
	CPPGL_GL_ARB_instanced_arrays = has_ext("GL_ARB_instanced_arrays");
	CPPGL_GL_ARB_internalformat_query = has_ext("GL_ARB_internalformat_query");
	CPPGL_GL_ARB_internalformat_query2 = has_ext("GL_ARB_internalformat_query2");
	CPPGL_GL_ARB_invalidate_subdata = has_ext("GL_ARB_invalidate_subdata");
	CPPGL_GL_ARB_map_buffer_alignment = has_ext("GL_ARB_map_buffer_alignment");
	CPPGL_GL_ARB_map_buffer_range = has_ext("GL_ARB_map_buffer_range");
	CPPGL_GL_ARB_matrix_palette = has_ext("GL_ARB_matrix_palette");
	CPPGL_GL_ARB_multi_bind = has_ext("GL_ARB_multi_bind");
	CPPGL_GL_ARB_multi_draw_indirect = has_ext("GL_ARB_multi_draw_indirect");
	CPPGL_GL_ARB_multisample = has_ext("GL_ARB_multisample");
	CPPGL_GL_ARB_multitexture = has_ext("GL_ARB_multitexture");
	CPPGL_GL_ARB_occlusion_query = has_ext("GL_ARB_occlusion_query");
	CPPGL_GL_ARB_occlusion_query2 = has_ext("GL_ARB_occlusion_query2");
	CPPGL_GL_ARB_parallel_shader_compile = has_ext("GL_ARB_parallel_shader_compile");
	CPPGL_GL_ARB_pipeline_statistics_query = has_ext("GL_ARB_pipeline_statistics_query");
	CPPGL_GL_ARB_pixel_buffer_object = has_ext("GL_ARB_pixel_buffer_object");
	CPPGL_GL_ARB_point_parameters = has_ext("GL_ARB_point_parameters");
	CPPGL_GL_ARB_point_sprite = has_ext("GL_ARB_point_sprite");
	CPPGL_GL_ARB_post_depth_coverage = has_ext("GL_ARB_post_depth_coverage");
	CPPGL_GL_ARB_program_interface_query = has_ext("GL_ARB_program_interface_query");
	CPPGL_GL_ARB_provoking_vertex = has_ext("GL_ARB_provoking_vertex");
	CPPGL_GL_ARB_query_buffer_object = has_ext("GL_ARB_query_buffer_object");
	CPPGL_GL_ARB_robust_buffer_access_behavior = has_ext("GL_ARB_robust_buffer_access_behavior");
	CPPGL_GL_ARB_robustness = has_ext("GL_ARB_robustness");
	CPPGL_GL_ARB_robustness_isolation = has_ext("GL_ARB_robustness_isolation");
	CPPGL_GL_ARB_sample_locations = has_ext("GL_ARB_sample_locations");
	CPPGL_GL_ARB_sample_shading = has_ext("GL_ARB_sample_shading");
	CPPGL_GL_ARB_sampler_objects = has_ext("GL_ARB_sampler_objects");
	CPPGL_GL_ARB_seamless_cube_map = has_ext("GL_ARB_seamless_cube_map");
	CPPGL_GL_ARB_seamless_cubemap_per_texture = has_ext("GL_ARB_seamless_cubemap_per_texture");
	CPPGL_GL_ARB_separate_shader_objects = has_ext("GL_ARB_separate_shader_objects");
	CPPGL_GL_ARB_shader_atomic_counter_ops = has_ext("GL_ARB_shader_atomic_counter_ops");
	CPPGL_GL_ARB_shader_atomic_counters = has_ext("GL_ARB_shader_atomic_counters");
	CPPGL_GL_ARB_shader_ballot = has_ext("GL_ARB_shader_ballot");
	CPPGL_GL_ARB_shader_bit_encoding = has_ext("GL_ARB_shader_bit_encoding");
	CPPGL_GL_ARB_shader_clock = has_ext("GL_ARB_shader_clock");
	CPPGL_GL_ARB_shader_draw_parameters = has_ext("GL_ARB_shader_draw_parameters");
	CPPGL_GL_ARB_shader_group_vote = has_ext("GL_ARB_shader_group_vote");
	CPPGL_GL_ARB_shader_image_load_store = has_ext("GL_ARB_shader_image_load_store");
	CPPGL_GL_ARB_shader_image_size = has_ext("GL_ARB_shader_image_size");
	CPPGL_GL_ARB_shader_objects = has_ext("GL_ARB_shader_objects");
	CPPGL_GL_ARB_shader_precision = has_ext("GL_ARB_shader_precision");
	CPPGL_GL_ARB_shader_stencil_export = has_ext("GL_ARB_shader_stencil_export");
	CPPGL_GL_ARB_shader_storage_buffer_object = has_ext("GL_ARB_shader_storage_buffer_object");
	CPPGL_GL_ARB_shader_subroutine = has_ext("GL_ARB_shader_subroutine");
	CPPGL_GL_ARB_shader_texture_image_samples = has_ext("GL_ARB_shader_texture_image_samples");
	CPPGL_GL_ARB_shader_texture_lod = has_ext("GL_ARB_shader_texture_lod");
	CPPGL_GL_ARB_shader_viewport_layer_array = has_ext("GL_ARB_shader_viewport_layer_array");
	CPPGL_GL_ARB_shading_language_100 = has_ext("GL_ARB_shading_language_100");
	CPPGL_GL_ARB_shading_language_420pack = has_ext("GL_ARB_shading_language_420pack");
	CPPGL_GL_ARB_shading_language_include = has_ext("GL_ARB_shading_language_include");
	CPPGL_GL_ARB_shading_language_packing = has_ext("GL_ARB_shading_language_packing");
	CPPGL_GL_ARB_shadow = has_ext("GL_ARB_shadow");
	CPPGL_GL_ARB_shadow_ambient = has_ext("GL_ARB_shadow_ambient");
	CPPGL_GL_ARB_sparse_buffer = has_ext("GL_ARB_sparse_buffer");
	CPPGL_GL_ARB_sparse_texture = has_ext("GL_ARB_sparse_texture");
	CPPGL_GL_ARB_sparse_texture2 = has_ext("GL_ARB_sparse_texture2");
	CPPGL_GL_ARB_sparse_texture_clamp = has_ext("GL_ARB_sparse_texture_clamp");
	CPPGL_GL_ARB_stencil_texturing = has_ext("GL_ARB_stencil_texturing");
	CPPGL_GL_ARB_sync = has_ext("GL_ARB_sync");
	CPPGL_GL_ARB_tessellation_shader = has_ext("GL_ARB_tessellation_shader");
	CPPGL_GL_ARB_texture_barrier = has_ext("GL_ARB_texture_barrier");
	CPPGL_GL_ARB_texture_border_clamp = has_ext("GL_ARB_texture_border_clamp");
	CPPGL_GL_ARB_texture_buffer_object = has_ext("GL_ARB_texture_buffer_object");
	CPPGL_GL_ARB_texture_buffer_object_rgb32 = has_ext("GL_ARB_texture_buffer_object_rgb32");
	CPPGL_GL_ARB_texture_buffer_range = has_ext("GL_ARB_texture_buffer_range");
	CPPGL_GL_ARB_texture_compression = has_ext("GL_ARB_texture_compression");
	CPPGL_GL_ARB_texture_compression_bptc = has_ext("GL_ARB_texture_compression_bptc");
	CPPGL_GL_ARB_texture_compression_rgtc = has_ext("GL_ARB_texture_compression_rgtc");
	CPPGL_GL_ARB_texture_cube_map = has_ext("GL_ARB_texture_cube_map");
	CPPGL_GL_ARB_texture_cube_map_array = has_ext("GL_ARB_texture_cube_map_array");
	CPPGL_GL_ARB_texture_env_add = has_ext("GL_ARB_texture_env_add");
	CPPGL_GL_ARB_texture_env_combine = has_ext("GL_ARB_texture_env_combine");
	CPPGL_GL_ARB_texture_env_crossbar = has_ext("GL_ARB_texture_env_crossbar");
	CPPGL_GL_ARB_texture_env_dot3 = has_ext("GL_ARB_texture_env_dot3");
	CPPGL_GL_ARB_texture_filter_minmax = has_ext("GL_ARB_texture_filter_minmax");
	CPPGL_GL_ARB_texture_float = has_ext("GL_ARB_texture_float");
	CPPGL_GL_ARB_texture_gather = has_ext("GL_ARB_texture_gather");
	CPPGL_GL_ARB_texture_mirror_clamp_to_edge = has_ext("GL_ARB_texture_mirror_clamp_to_edge");
	CPPGL_GL_ARB_texture_mirrored_repeat = has_ext("GL_ARB_texture_mirrored_repeat");
	CPPGL_GL_ARB_texture_multisample = has_ext("GL_ARB_texture_multisample");
	CPPGL_GL_ARB_texture_non_power_of_two = has_ext("GL_ARB_texture_non_power_of_two");
	CPPGL_GL_ARB_texture_query_levels = has_ext("GL_ARB_texture_query_levels");
	CPPGL_GL_ARB_texture_query_lod = has_ext("GL_ARB_texture_query_lod");
	CPPGL_GL_ARB_texture_rectangle = has_ext("GL_ARB_texture_rectangle");
	CPPGL_GL_ARB_texture_rg = has_ext("GL_ARB_texture_rg");
	CPPGL_GL_ARB_texture_rgb10_a2ui = has_ext("GL_ARB_texture_rgb10_a2ui");
	CPPGL_GL_ARB_texture_stencil8 = has_ext("GL_ARB_texture_stencil8");
	CPPGL_GL_ARB_texture_storage = has_ext("GL_ARB_texture_storage");
	CPPGL_GL_ARB_texture_storage_multisample = has_ext("GL_ARB_texture_storage_multisample");
	CPPGL_GL_ARB_texture_swizzle = has_ext("GL_ARB_texture_swizzle");
	CPPGL_GL_ARB_texture_view = has_ext("GL_ARB_texture_view");
	CPPGL_GL_ARB_timer_query = has_ext("GL_ARB_timer_query");
	CPPGL_GL_ARB_transform_feedback2 = has_ext("GL_ARB_transform_feedback2");
	CPPGL_GL_ARB_transform_feedback3 = has_ext("GL_ARB_transform_feedback3");
	CPPGL_GL_ARB_transform_feedback_instanced = has_ext("GL_ARB_transform_feedback_instanced");
	CPPGL_GL_ARB_transform_feedback_overflow_query = has_ext("GL_ARB_transform_feedback_overflow_query");
	CPPGL_GL_ARB_transpose_matrix = has_ext("GL_ARB_transpose_matrix");
	CPPGL_GL_ARB_uniform_buffer_object = has_ext("GL_ARB_uniform_buffer_object");
	CPPGL_GL_ARB_vertex_array_bgra = has_ext("GL_ARB_vertex_array_bgra");
	CPPGL_GL_ARB_vertex_array_object = has_ext("GL_ARB_vertex_array_object");
	CPPGL_GL_ARB_vertex_attrib_64bit = has_ext("GL_ARB_vertex_attrib_64bit");
	CPPGL_GL_ARB_vertex_attrib_binding = has_ext("GL_ARB_vertex_attrib_binding");
	CPPGL_GL_ARB_vertex_blend = has_ext("GL_ARB_vertex_blend");
	CPPGL_GL_ARB_vertex_buffer_object = has_ext("GL_ARB_vertex_buffer_object");
	CPPGL_GL_ARB_vertex_program = has_ext("GL_ARB_vertex_program");
	CPPGL_GL_ARB_vertex_shader = has_ext("GL_ARB_vertex_shader");
	CPPGL_GL_ARB_vertex_type_10f_11f_11f_rev = has_ext("GL_ARB_vertex_type_10f_11f_11f_rev");
	CPPGL_GL_ARB_vertex_type_2_10_10_10_rev = has_ext("GL_ARB_vertex_type_2_10_10_10_rev");
	CPPGL_GL_ARB_viewport_array = has_ext("GL_ARB_viewport_array");
	CPPGL_GL_ARB_window_pos = has_ext("GL_ARB_window_pos");
	CPPGL_GL_ATI_draw_buffers = has_ext("GL_ATI_draw_buffers");
	CPPGL_GL_ATI_element_array = has_ext("GL_ATI_element_array");
	CPPGL_GL_ATI_envmap_bumpmap = has_ext("GL_ATI_envmap_bumpmap");
	CPPGL_GL_ATI_fragment_shader = has_ext("GL_ATI_fragment_shader");
	CPPGL_GL_ATI_map_object_buffer = has_ext("GL_ATI_map_object_buffer");
	CPPGL_GL_ATI_meminfo = has_ext("GL_ATI_meminfo");
	CPPGL_GL_ATI_pixel_format_float = has_ext("GL_ATI_pixel_format_float");
	CPPGL_GL_ATI_pn_triangles = has_ext("GL_ATI_pn_triangles");
	CPPGL_GL_ATI_separate_stencil = has_ext("GL_ATI_separate_stencil");
	CPPGL_GL_ATI_text_fragment_shader = has_ext("GL_ATI_text_fragment_shader");
	CPPGL_GL_ATI_texture_env_combine3 = has_ext("GL_ATI_texture_env_combine3");
	CPPGL_GL_ATI_texture_float = has_ext("GL_ATI_texture_float");
	CPPGL_GL_ATI_texture_mirror_once = has_ext("GL_ATI_texture_mirror_once");
	CPPGL_GL_ATI_vertex_array_object = has_ext("GL_ATI_vertex_array_object");
	CPPGL_GL_ATI_vertex_attrib_array_object = has_ext("GL_ATI_vertex_attrib_array_object");
	CPPGL_GL_ATI_vertex_streams = has_ext("GL_ATI_vertex_streams");
	CPPGL_GL_EXT_422_pixels = has_ext("GL_EXT_422_pixels");
	CPPGL_GL_EXT_abgr = has_ext("GL_EXT_abgr");
	CPPGL_GL_EXT_bgra = has_ext("GL_EXT_bgra");
	CPPGL_GL_EXT_bindable_uniform = has_ext("GL_EXT_bindable_uniform");
	CPPGL_GL_EXT_blend_color = has_ext("GL_EXT_blend_color");
	CPPGL_GL_EXT_blend_equation_separate = has_ext("GL_EXT_blend_equation_separate");
	CPPGL_GL_EXT_blend_func_separate = has_ext("GL_EXT_blend_func_separate");
	CPPGL_GL_EXT_blend_logic_op = has_ext("GL_EXT_blend_logic_op");
	CPPGL_GL_EXT_blend_minmax = has_ext("GL_EXT_blend_minmax");
	CPPGL_GL_EXT_blend_subtract = has_ext("GL_EXT_blend_subtract");
	CPPGL_GL_EXT_clip_volume_hint = has_ext("GL_EXT_clip_volume_hint");
	CPPGL_GL_EXT_cmyka = has_ext("GL_EXT_cmyka");
	CPPGL_GL_EXT_color_subtable = has_ext("GL_EXT_color_subtable");
	CPPGL_GL_EXT_compiled_vertex_array = has_ext("GL_EXT_compiled_vertex_array");
	CPPGL_GL_EXT_convolution = has_ext("GL_EXT_convolution");
	CPPGL_GL_EXT_coordinate_frame = has_ext("GL_EXT_coordinate_frame");
	CPPGL_GL_EXT_copy_texture = has_ext("GL_EXT_copy_texture");
	CPPGL_GL_EXT_cull_vertex = has_ext("GL_EXT_cull_vertex");
	CPPGL_GL_EXT_debug_label = has_ext("GL_EXT_debug_label");
	CPPGL_GL_EXT_debug_marker = has_ext("GL_EXT_debug_marker");
	CPPGL_GL_EXT_depth_bounds_test = has_ext("GL_EXT_depth_bounds_test");
	CPPGL_GL_EXT_direct_state_access = has_ext("GL_EXT_direct_state_access");
	CPPGL_GL_EXT_draw_buffers2 = has_ext("GL_EXT_draw_buffers2");
	CPPGL_GL_EXT_draw_instanced = has_ext("GL_EXT_draw_instanced");
	CPPGL_GL_EXT_draw_range_elements = has_ext("GL_EXT_draw_range_elements");
	CPPGL_GL_EXT_fog_coord = has_ext("GL_EXT_fog_coord");
	CPPGL_GL_EXT_framebuffer_blit = has_ext("GL_EXT_framebuffer_blit");
	CPPGL_GL_EXT_framebuffer_multisample = has_ext("GL_EXT_framebuffer_multisample");
	CPPGL_GL_EXT_framebuffer_multisample_blit_scaled = has_ext("GL_EXT_framebuffer_multisample_blit_scaled");
	CPPGL_GL_EXT_framebuffer_object = has_ext("GL_EXT_framebuffer_object");
	CPPGL_GL_EXT_framebuffer_sRGB = has_ext("GL_EXT_framebuffer_sRGB");
	CPPGL_GL_EXT_geometry_shader4 = has_ext("GL_EXT_geometry_shader4");
	CPPGL_GL_EXT_gpu_program_parameters = has_ext("GL_EXT_gpu_program_parameters");
	CPPGL_GL_EXT_gpu_shader4 = has_ext("GL_EXT_gpu_shader4");
	CPPGL_GL_EXT_histogram = has_ext("GL_EXT_histogram");
	CPPGL_GL_EXT_index_array_formats = has_ext("GL_EXT_index_array_formats");
	CPPGL_GL_EXT_index_func = has_ext("GL_EXT_index_func");
	CPPGL_GL_EXT_index_material = has_ext("GL_EXT_index_material");
	CPPGL_GL_EXT_index_texture = has_ext("GL_EXT_index_texture");
	CPPGL_GL_EXT_light_texture = has_ext("GL_EXT_light_texture");
	CPPGL_GL_EXT_misc_attribute = has_ext("GL_EXT_misc_attribute");
	CPPGL_GL_EXT_multi_draw_arrays = has_ext("GL_EXT_multi_draw_arrays");
	CPPGL_GL_EXT_multisample = has_ext("GL_EXT_multisample");
	CPPGL_GL_EXT_packed_depth_stencil = has_ext("GL_EXT_packed_depth_stencil");
	CPPGL_GL_EXT_packed_float = has_ext("GL_EXT_packed_float");
	CPPGL_GL_EXT_packed_pixels = has_ext("GL_EXT_packed_pixels");
	CPPGL_GL_EXT_paletted_texture = has_ext("GL_EXT_paletted_texture");
	CPPGL_GL_EXT_pixel_buffer_object = has_ext("GL_EXT_pixel_buffer_object");
	CPPGL_GL_EXT_pixel_transform = has_ext("GL_EXT_pixel_transform");
	CPPGL_GL_EXT_pixel_transform_color_table = has_ext("GL_EXT_pixel_transform_color_table");
	CPPGL_GL_EXT_point_parameters = has_ext("GL_EXT_point_parameters");
	CPPGL_GL_EXT_polygon_offset = has_ext("GL_EXT_polygon_offset");
	CPPGL_GL_EXT_polygon_offset_clamp = has_ext("GL_EXT_polygon_offset_clamp");
	CPPGL_GL_EXT_post_depth_coverage = has_ext("GL_EXT_post_depth_coverage");
	CPPGL_GL_EXT_provoking_vertex = has_ext("GL_EXT_provoking_vertex");
	CPPGL_GL_EXT_raster_multisample = has_ext("GL_EXT_raster_multisample");
	CPPGL_GL_EXT_rescale_normal = has_ext("GL_EXT_rescale_normal");
	CPPGL_GL_EXT_secondary_color = has_ext("GL_EXT_secondary_color");
	CPPGL_GL_EXT_separate_shader_objects = has_ext("GL_EXT_separate_shader_objects");
	CPPGL_GL_EXT_separate_specular_color = has_ext("GL_EXT_separate_specular_color");
	CPPGL_GL_EXT_shader_image_load_formatted = has_ext("GL_EXT_shader_image_load_formatted");
	CPPGL_GL_EXT_shader_image_load_store = has_ext("GL_EXT_shader_image_load_store");
	CPPGL_GL_EXT_shader_integer_mix = has_ext("GL_EXT_shader_integer_mix");
	CPPGL_GL_EXT_shadow_funcs = has_ext("GL_EXT_shadow_funcs");
	CPPGL_GL_EXT_shared_texture_palette = has_ext("GL_EXT_shared_texture_palette");
	CPPGL_GL_EXT_sparse_texture2 = has_ext("GL_EXT_sparse_texture2");
	CPPGL_GL_EXT_stencil_clear_tag = has_ext("GL_EXT_stencil_clear_tag");
	CPPGL_GL_EXT_stencil_two_side = has_ext("GL_EXT_stencil_two_side");
	CPPGL_GL_EXT_stencil_wrap = has_ext("GL_EXT_stencil_wrap");
	CPPGL_GL_EXT_subtexture = has_ext("GL_EXT_subtexture");
	CPPGL_GL_EXT_texture = has_ext("GL_EXT_texture");
	CPPGL_GL_EXT_texture3D = has_ext("GL_EXT_texture3D");
	CPPGL_GL_EXT_texture_array = has_ext("GL_EXT_texture_array");
	CPPGL_GL_EXT_texture_buffer_object = has_ext("GL_EXT_texture_buffer_object");
	CPPGL_GL_EXT_texture_compression_latc = has_ext("GL_EXT_texture_compression_latc");
	CPPGL_GL_EXT_texture_compression_rgtc = has_ext("GL_EXT_texture_compression_rgtc");
	CPPGL_GL_EXT_texture_compression_s3tc = has_ext("GL_EXT_texture_compression_s3tc");
	CPPGL_GL_EXT_texture_cube_map = has_ext("GL_EXT_texture_cube_map");
	CPPGL_GL_EXT_texture_env_add = has_ext("GL_EXT_texture_env_add");
	CPPGL_GL_EXT_texture_env_combine = has_ext("GL_EXT_texture_env_combine");
	CPPGL_GL_EXT_texture_env_dot3 = has_ext("GL_EXT_texture_env_dot3");
	CPPGL_GL_EXT_texture_filter_anisotropic = has_ext("GL_EXT_texture_filter_anisotropic");
	CPPGL_GL_EXT_texture_filter_minmax = has_ext("GL_EXT_texture_filter_minmax");
	CPPGL_GL_EXT_texture_integer = has_ext("GL_EXT_texture_integer");
	CPPGL_GL_EXT_texture_lod_bias = has_ext("GL_EXT_texture_lod_bias");
	CPPGL_GL_EXT_texture_mirror_clamp = has_ext("GL_EXT_texture_mirror_clamp");
	CPPGL_GL_EXT_texture_object = has_ext("GL_EXT_texture_object");
	CPPGL_GL_EXT_texture_perturb_normal = has_ext("GL_EXT_texture_perturb_normal");
	CPPGL_GL_EXT_texture_sRGB = has_ext("GL_EXT_texture_sRGB");
	CPPGL_GL_EXT_texture_sRGB_decode = has_ext("GL_EXT_texture_sRGB_decode");
	CPPGL_GL_EXT_texture_shared_exponent = has_ext("GL_EXT_texture_shared_exponent");
	CPPGL_GL_EXT_texture_snorm = has_ext("GL_EXT_texture_snorm");
	CPPGL_GL_EXT_texture_swizzle = has_ext("GL_EXT_texture_swizzle");
	CPPGL_GL_EXT_timer_query = has_ext("GL_EXT_timer_query");
	CPPGL_GL_EXT_transform_feedback = has_ext("GL_EXT_transform_feedback");
	CPPGL_GL_EXT_vertex_array = has_ext("GL_EXT_vertex_array");
	CPPGL_GL_EXT_vertex_array_bgra = has_ext("GL_EXT_vertex_array_bgra");
	CPPGL_GL_EXT_vertex_attrib_64bit = has_ext("GL_EXT_vertex_attrib_64bit");
	CPPGL_GL_EXT_vertex_shader = has_ext("GL_EXT_vertex_shader");
	CPPGL_GL_EXT_vertex_weighting = has_ext("GL_EXT_vertex_weighting");
	CPPGL_GL_EXT_window_rectangles = has_ext("GL_EXT_window_rectangles");
	CPPGL_GL_EXT_x11_sync_object = has_ext("GL_EXT_x11_sync_object");
	CPPGL_GL_GREMEDY_frame_terminator = has_ext("GL_GREMEDY_frame_terminator");
	CPPGL_GL_GREMEDY_string_marker = has_ext("GL_GREMEDY_string_marker");
	CPPGL_GL_HP_convolution_border_modes = has_ext("GL_HP_convolution_border_modes");
	CPPGL_GL_HP_image_transform = has_ext("GL_HP_image_transform");
	CPPGL_GL_HP_occlusion_test = has_ext("GL_HP_occlusion_test");
	CPPGL_GL_HP_texture_lighting = has_ext("GL_HP_texture_lighting");
	CPPGL_GL_IBM_cull_vertex = has_ext("GL_IBM_cull_vertex");
	CPPGL_GL_IBM_multimode_draw_arrays = has_ext("GL_IBM_multimode_draw_arrays");
	CPPGL_GL_IBM_rasterpos_clip = has_ext("GL_IBM_rasterpos_clip");
	CPPGL_GL_IBM_static_data = has_ext("GL_IBM_static_data");
	CPPGL_GL_IBM_texture_mirrored_repeat = has_ext("GL_IBM_texture_mirrored_repeat");
	CPPGL_GL_IBM_vertex_array_lists = has_ext("GL_IBM_vertex_array_lists");
	CPPGL_GL_INGR_blend_func_separate = has_ext("GL_INGR_blend_func_separate");
	CPPGL_GL_INGR_color_clamp = has_ext("GL_INGR_color_clamp");
	CPPGL_GL_INGR_interlace_read = has_ext("GL_INGR_interlace_read");
	CPPGL_GL_INTEL_conservative_rasterization = has_ext("GL_INTEL_conservative_rasterization");
	CPPGL_GL_INTEL_fragment_shader_ordering = has_ext("GL_INTEL_fragment_shader_ordering");
	CPPGL_GL_INTEL_framebuffer_CMAA = has_ext("GL_INTEL_framebuffer_CMAA");
	CPPGL_GL_INTEL_map_texture = has_ext("GL_INTEL_map_texture");
	CPPGL_GL_INTEL_parallel_arrays = has_ext("GL_INTEL_parallel_arrays");
	CPPGL_GL_INTEL_performance_query = has_ext("GL_INTEL_performance_query");
	CPPGL_GL_KHR_blend_equation_advanced = has_ext("GL_KHR_blend_equation_advanced");
	CPPGL_GL_KHR_blend_equation_advanced_coherent = has_ext("GL_KHR_blend_equation_advanced_coherent");
	CPPGL_GL_KHR_context_flush_control = has_ext("GL_KHR_context_flush_control");
	CPPGL_GL_KHR_debug = has_ext("GL_KHR_debug");
	CPPGL_GL_KHR_no_error = has_ext("GL_KHR_no_error");
	CPPGL_GL_KHR_robust_buffer_access_behavior = has_ext("GL_KHR_robust_buffer_access_behavior");
	CPPGL_GL_KHR_robustness = has_ext("GL_KHR_robustness");
	CPPGL_GL_KHR_texture_compression_astc_hdr = has_ext("GL_KHR_texture_compression_astc_hdr");
	CPPGL_GL_KHR_texture_compression_astc_ldr = has_ext("GL_KHR_texture_compression_astc_ldr");
	CPPGL_GL_KHR_texture_compression_astc_sliced_3d = has_ext("GL_KHR_texture_compression_astc_sliced_3d");
	CPPGL_GL_MESAX_texture_stack = has_ext("GL_MESAX_texture_stack");
	CPPGL_GL_MESA_pack_invert = has_ext("GL_MESA_pack_invert");
	CPPGL_GL_MESA_resize_buffers = has_ext("GL_MESA_resize_buffers");
	CPPGL_GL_MESA_window_pos = has_ext("GL_MESA_window_pos");
	CPPGL_GL_MESA_ycbcr_texture = has_ext("GL_MESA_ycbcr_texture");
	CPPGL_GL_NVX_conditional_render = has_ext("GL_NVX_conditional_render");
	CPPGL_GL_NVX_gpu_memory_info = has_ext("GL_NVX_gpu_memory_info");
	CPPGL_GL_NV_bindless_multi_draw_indirect = has_ext("GL_NV_bindless_multi_draw_indirect");
	CPPGL_GL_NV_bindless_multi_draw_indirect_count = has_ext("GL_NV_bindless_multi_draw_indirect_count");
	CPPGL_GL_NV_bindless_texture = has_ext("GL_NV_bindless_texture");
	CPPGL_GL_NV_blend_equation_advanced = has_ext("GL_NV_blend_equation_advanced");
	CPPGL_GL_NV_blend_equation_advanced_coherent = has_ext("GL_NV_blend_equation_advanced_coherent");
	CPPGL_GL_NV_blend_square = has_ext("GL_NV_blend_square");
	CPPGL_GL_NV_clip_space_w_scaling = has_ext("GL_NV_clip_space_w_scaling");
	CPPGL_GL_NV_command_list = has_ext("GL_NV_command_list");
	CPPGL_GL_NV_compute_program5 = has_ext("GL_NV_compute_program5");
	CPPGL_GL_NV_conditional_render = has_ext("GL_NV_conditional_render");
	CPPGL_GL_NV_conservative_raster = has_ext("GL_NV_conservative_raster");
	CPPGL_GL_NV_conservative_raster_dilate = has_ext("GL_NV_conservative_raster_dilate");
	CPPGL_GL_NV_conservative_raster_pre_snap_triangles = has_ext("GL_NV_conservative_raster_pre_snap_triangles");
	CPPGL_GL_NV_copy_depth_to_color = has_ext("GL_NV_copy_depth_to_color");
	CPPGL_GL_NV_copy_image = has_ext("GL_NV_copy_image");
	CPPGL_GL_NV_deep_texture3D = has_ext("GL_NV_deep_texture3D");
	CPPGL_GL_NV_depth_buffer_float = has_ext("GL_NV_depth_buffer_float");
	CPPGL_GL_NV_depth_clamp = has_ext("GL_NV_depth_clamp");
	CPPGL_GL_NV_draw_texture = has_ext("GL_NV_draw_texture");
	CPPGL_GL_NV_evaluators = has_ext("GL_NV_evaluators");
	CPPGL_GL_NV_explicit_multisample = has_ext("GL_NV_explicit_multisample");
	CPPGL_GL_NV_fence = has_ext("GL_NV_fence");
	CPPGL_GL_NV_fill_rectangle = has_ext("GL_NV_fill_rectangle");
	CPPGL_GL_NV_float_buffer = has_ext("GL_NV_float_buffer");
	CPPGL_GL_NV_fog_distance = has_ext("GL_NV_fog_distance");
	CPPGL_GL_NV_fragment_coverage_to_color = has_ext("GL_NV_fragment_coverage_to_color");
	CPPGL_GL_NV_fragment_program = has_ext("GL_NV_fragment_program");
	CPPGL_GL_NV_fragment_program2 = has_ext("GL_NV_fragment_program2");
	CPPGL_GL_NV_fragment_program4 = has_ext("GL_NV_fragment_program4");
	CPPGL_GL_NV_fragment_program_option = has_ext("GL_NV_fragment_program_option");
	CPPGL_GL_NV_fragment_shader_interlock = has_ext("GL_NV_fragment_shader_interlock");
	CPPGL_GL_NV_framebuffer_mixed_samples = has_ext("GL_NV_framebuffer_mixed_samples");
	CPPGL_GL_NV_framebuffer_multisample_coverage = has_ext("GL_NV_framebuffer_multisample_coverage");
	CPPGL_GL_NV_geometry_program4 = has_ext("GL_NV_geometry_program4");
	CPPGL_GL_NV_geometry_shader4 = has_ext("GL_NV_geometry_shader4");
	CPPGL_GL_NV_geometry_shader_passthrough = has_ext("GL_NV_geometry_shader_passthrough");
	CPPGL_GL_NV_gpu_program4 = has_ext("GL_NV_gpu_program4");
	CPPGL_GL_NV_gpu_program5 = has_ext("GL_NV_gpu_program5");
	CPPGL_GL_NV_gpu_program5_mem_extended = has_ext("GL_NV_gpu_program5_mem_extended");
	CPPGL_GL_NV_gpu_shader5 = has_ext("GL_NV_gpu_shader5");
	CPPGL_GL_NV_half_float = has_ext("GL_NV_half_float");
	CPPGL_GL_NV_internalformat_sample_query = has_ext("GL_NV_internalformat_sample_query");
	CPPGL_GL_NV_light_max_exponent = has_ext("GL_NV_light_max_exponent");
	CPPGL_GL_NV_multisample_coverage = has_ext("GL_NV_multisample_coverage");
	CPPGL_GL_NV_multisample_filter_hint = has_ext("GL_NV_multisample_filter_hint");
	CPPGL_GL_NV_occlusion_query = has_ext("GL_NV_occlusion_query");
	CPPGL_GL_NV_packed_depth_stencil = has_ext("GL_NV_packed_depth_stencil");
	CPPGL_GL_NV_parameter_buffer_object = has_ext("GL_NV_parameter_buffer_object");
	CPPGL_GL_NV_parameter_buffer_object2 = has_ext("GL_NV_parameter_buffer_object2");
	CPPGL_GL_NV_path_rendering = has_ext("GL_NV_path_rendering");
	CPPGL_GL_NV_path_rendering_shared_edge = has_ext("GL_NV_path_rendering_shared_edge");
	CPPGL_GL_NV_pixel_data_range = has_ext("GL_NV_pixel_data_range");
	CPPGL_GL_NV_point_sprite = has_ext("GL_NV_point_sprite");
	CPPGL_GL_NV_present_video = has_ext("GL_NV_present_video");
	CPPGL_GL_NV_primitive_restart = has_ext("GL_NV_primitive_restart");
	CPPGL_GL_NV_register_combiners = has_ext("GL_NV_register_combiners");
	CPPGL_GL_NV_register_combiners2 = has_ext("GL_NV_register_combiners2");
	CPPGL_GL_NV_robustness_video_memory_purge = has_ext("GL_NV_robustness_video_memory_purge");
	CPPGL_GL_NV_sample_locations = has_ext("GL_NV_sample_locations");
	CPPGL_GL_NV_sample_mask_override_coverage = has_ext("GL_NV_sample_mask_override_coverage");
	CPPGL_GL_NV_shader_atomic_counters = has_ext("GL_NV_shader_atomic_counters");
	CPPGL_GL_NV_shader_atomic_float = has_ext("GL_NV_shader_atomic_float");
	CPPGL_GL_NV_shader_atomic_float64 = has_ext("GL_NV_shader_atomic_float64");
	CPPGL_GL_NV_shader_atomic_fp16_vector = has_ext("GL_NV_shader_atomic_fp16_vector");
	CPPGL_GL_NV_shader_atomic_int64 = has_ext("GL_NV_shader_atomic_int64");
	CPPGL_GL_NV_shader_buffer_load = has_ext("GL_NV_shader_buffer_load");
	CPPGL_GL_NV_shader_buffer_store = has_ext("GL_NV_shader_buffer_store");
	CPPGL_GL_NV_shader_storage_buffer_object = has_ext("GL_NV_shader_storage_buffer_object");
	CPPGL_GL_NV_shader_thread_group = has_ext("GL_NV_shader_thread_group");
	CPPGL_GL_NV_shader_thread_shuffle = has_ext("GL_NV_shader_thread_shuffle");
	CPPGL_GL_NV_stereo_view_rendering = has_ext("GL_NV_stereo_view_rendering");
	CPPGL_GL_NV_tessellation_program5 = has_ext("GL_NV_tessellation_program5");
	CPPGL_GL_NV_texgen_emboss = has_ext("GL_NV_texgen_emboss");
	CPPGL_GL_NV_texgen_reflection = has_ext("GL_NV_texgen_reflection");
	CPPGL_GL_NV_texture_barrier = has_ext("GL_NV_texture_barrier");
	CPPGL_GL_NV_texture_compression_vtc = has_ext("GL_NV_texture_compression_vtc");
	CPPGL_GL_NV_texture_env_combine4 = has_ext("GL_NV_texture_env_combine4");
	CPPGL_GL_NV_texture_expand_normal = has_ext("GL_NV_texture_expand_normal");
	CPPGL_GL_NV_texture_multisample = has_ext("GL_NV_texture_multisample");
	CPPGL_GL_NV_texture_rectangle = has_ext("GL_NV_texture_rectangle");
	CPPGL_GL_NV_texture_shader = has_ext("GL_NV_texture_shader");
	CPPGL_GL_NV_texture_shader2 = has_ext("GL_NV_texture_shader2");
	CPPGL_GL_NV_texture_shader3 = has_ext("GL_NV_texture_shader3");
	CPPGL_GL_NV_transform_feedback = has_ext("GL_NV_transform_feedback");
	CPPGL_GL_NV_transform_feedback2 = has_ext("GL_NV_transform_feedback2");
	CPPGL_GL_NV_uniform_buffer_unified_memory = has_ext("GL_NV_uniform_buffer_unified_memory");
	CPPGL_GL_NV_vdpau_interop = has_ext("GL_NV_vdpau_interop");
	CPPGL_GL_NV_vertex_array_range = has_ext("GL_NV_vertex_array_range");
	CPPGL_GL_NV_vertex_array_range2 = has_ext("GL_NV_vertex_array_range2");
	CPPGL_GL_NV_vertex_attrib_integer_64bit = has_ext("GL_NV_vertex_attrib_integer_64bit");
	CPPGL_GL_NV_vertex_buffer_unified_memory = has_ext("GL_NV_vertex_buffer_unified_memory");
	CPPGL_GL_NV_vertex_program = has_ext("GL_NV_vertex_program");
	CPPGL_GL_NV_vertex_program1_1 = has_ext("GL_NV_vertex_program1_1");
	CPPGL_GL_NV_vertex_program2 = has_ext("GL_NV_vertex_program2");
	CPPGL_GL_NV_vertex_program2_option = has_ext("GL_NV_vertex_program2_option");
	CPPGL_GL_NV_vertex_program3 = has_ext("GL_NV_vertex_program3");
	CPPGL_GL_NV_vertex_program4 = has_ext("GL_NV_vertex_program4");
	CPPGL_GL_NV_video_capture = has_ext("GL_NV_video_capture");
	CPPGL_GL_NV_viewport_array2 = has_ext("GL_NV_viewport_array2");
	CPPGL_GL_NV_viewport_swizzle = has_ext("GL_NV_viewport_swizzle");
	CPPGL_GL_OES_byte_coordinates = has_ext("GL_OES_byte_coordinates");
	CPPGL_GL_OES_compressed_paletted_texture = has_ext("GL_OES_compressed_paletted_texture");
	CPPGL_GL_OES_fixed_point = has_ext("GL_OES_fixed_point");
	CPPGL_GL_OES_query_matrix = has_ext("GL_OES_query_matrix");
	CPPGL_GL_OES_read_format = has_ext("GL_OES_read_format");
	CPPGL_GL_OES_single_precision = has_ext("GL_OES_single_precision");
	CPPGL_GL_OML_interlace = has_ext("GL_OML_interlace");
	CPPGL_GL_OML_resample = has_ext("GL_OML_resample");
	CPPGL_GL_OML_subsample = has_ext("GL_OML_subsample");
	CPPGL_GL_OVR_multiview = has_ext("GL_OVR_multiview");
	CPPGL_GL_OVR_multiview2 = has_ext("GL_OVR_multiview2");
	CPPGL_GL_PGI_misc_hints = has_ext("GL_PGI_misc_hints");
	CPPGL_GL_PGI_vertex_hints = has_ext("GL_PGI_vertex_hints");
	CPPGL_GL_REND_screen_coordinates = has_ext("GL_REND_screen_coordinates");
	CPPGL_GL_S3_s3tc = has_ext("GL_S3_s3tc");
	CPPGL_GL_SGIS_detail_texture = has_ext("GL_SGIS_detail_texture");
	CPPGL_GL_SGIS_fog_function = has_ext("GL_SGIS_fog_function");
	CPPGL_GL_SGIS_generate_mipmap = has_ext("GL_SGIS_generate_mipmap");
	CPPGL_GL_SGIS_multisample = has_ext("GL_SGIS_multisample");
	CPPGL_GL_SGIS_pixel_texture = has_ext("GL_SGIS_pixel_texture");
	CPPGL_GL_SGIS_point_line_texgen = has_ext("GL_SGIS_point_line_texgen");
	CPPGL_GL_SGIS_point_parameters = has_ext("GL_SGIS_point_parameters");
	CPPGL_GL_SGIS_sharpen_texture = has_ext("GL_SGIS_sharpen_texture");
	CPPGL_GL_SGIS_texture4D = has_ext("GL_SGIS_texture4D");
	CPPGL_GL_SGIS_texture_border_clamp = has_ext("GL_SGIS_texture_border_clamp");
	CPPGL_GL_SGIS_texture_color_mask = has_ext("GL_SGIS_texture_color_mask");
	CPPGL_GL_SGIS_texture_edge_clamp = has_ext("GL_SGIS_texture_edge_clamp");
	CPPGL_GL_SGIS_texture_filter4 = has_ext("GL_SGIS_texture_filter4");
	CPPGL_GL_SGIS_texture_lod = has_ext("GL_SGIS_texture_lod");
	CPPGL_GL_SGIS_texture_select = has_ext("GL_SGIS_texture_select");
	CPPGL_GL_SGIX_async = has_ext("GL_SGIX_async");
	CPPGL_GL_SGIX_async_histogram = has_ext("GL_SGIX_async_histogram");
	CPPGL_GL_SGIX_async_pixel = has_ext("GL_SGIX_async_pixel");
	CPPGL_GL_SGIX_blend_alpha_minmax = has_ext("GL_SGIX_blend_alpha_minmax");
	CPPGL_GL_SGIX_calligraphic_fragment = has_ext("GL_SGIX_calligraphic_fragment");
	CPPGL_GL_SGIX_clipmap = has_ext("GL_SGIX_clipmap");
	CPPGL_GL_SGIX_convolution_accuracy = has_ext("GL_SGIX_convolution_accuracy");
	CPPGL_GL_SGIX_depth_pass_instrument = has_ext("GL_SGIX_depth_pass_instrument");
	CPPGL_GL_SGIX_depth_texture = has_ext("GL_SGIX_depth_texture");
	CPPGL_GL_SGIX_flush_raster = has_ext("GL_SGIX_flush_raster");
	CPPGL_GL_SGIX_fog_offset = has_ext("GL_SGIX_fog_offset");
	CPPGL_GL_SGIX_fragment_lighting = has_ext("GL_SGIX_fragment_lighting");
	CPPGL_GL_SGIX_framezoom = has_ext("GL_SGIX_framezoom");
	CPPGL_GL_SGIX_igloo_interface = has_ext("GL_SGIX_igloo_interface");
	CPPGL_GL_SGIX_instruments = has_ext("GL_SGIX_instruments");
	CPPGL_GL_SGIX_interlace = has_ext("GL_SGIX_interlace");
	CPPGL_GL_SGIX_ir_instrument1 = has_ext("GL_SGIX_ir_instrument1");
	CPPGL_GL_SGIX_list_priority = has_ext("GL_SGIX_list_priority");
	CPPGL_GL_SGIX_pixel_texture = has_ext("GL_SGIX_pixel_texture");
	CPPGL_GL_SGIX_pixel_tiles = has_ext("GL_SGIX_pixel_tiles");
	CPPGL_GL_SGIX_polynomial_ffd = has_ext("GL_SGIX_polynomial_ffd");
	CPPGL_GL_SGIX_reference_plane = has_ext("GL_SGIX_reference_plane");
	CPPGL_GL_SGIX_resample = has_ext("GL_SGIX_resample");
	CPPGL_GL_SGIX_scalebias_hint = has_ext("GL_SGIX_scalebias_hint");
	CPPGL_GL_SGIX_shadow = has_ext("GL_SGIX_shadow");
	CPPGL_GL_SGIX_shadow_ambient = has_ext("GL_SGIX_shadow_ambient");
	CPPGL_GL_SGIX_sprite = has_ext("GL_SGIX_sprite");
	CPPGL_GL_SGIX_subsample = has_ext("GL_SGIX_subsample");
	CPPGL_GL_SGIX_tag_sample_buffer = has_ext("GL_SGIX_tag_sample_buffer");
	CPPGL_GL_SGIX_texture_add_env = has_ext("GL_SGIX_texture_add_env");
	CPPGL_GL_SGIX_texture_coordinate_clamp = has_ext("GL_SGIX_texture_coordinate_clamp");
	CPPGL_GL_SGIX_texture_lod_bias = has_ext("GL_SGIX_texture_lod_bias");
	CPPGL_GL_SGIX_texture_multi_buffer = has_ext("GL_SGIX_texture_multi_buffer");
	CPPGL_GL_SGIX_texture_scale_bias = has_ext("GL_SGIX_texture_scale_bias");
	CPPGL_GL_SGIX_vertex_preclip = has_ext("GL_SGIX_vertex_preclip");
	CPPGL_GL_SGIX_ycrcb = has_ext("GL_SGIX_ycrcb");
	CPPGL_GL_SGIX_ycrcb_subsample = has_ext("GL_SGIX_ycrcb_subsample");
	CPPGL_GL_SGIX_ycrcba = has_ext("GL_SGIX_ycrcba");
	CPPGL_GL_SGI_color_matrix = has_ext("GL_SGI_color_matrix");
	CPPGL_GL_SGI_color_table = has_ext("GL_SGI_color_table");
	CPPGL_GL_SGI_texture_color_table = has_ext("GL_SGI_texture_color_table");
	CPPGL_GL_SUNX_constant_data = has_ext("GL_SUNX_constant_data");
	CPPGL_GL_SUN_convolution_border_modes = has_ext("GL_SUN_convolution_border_modes");
	CPPGL_GL_SUN_global_alpha = has_ext("GL_SUN_global_alpha");
	CPPGL_GL_SUN_mesh_array = has_ext("GL_SUN_mesh_array");
	CPPGL_GL_SUN_slice_accum = has_ext("GL_SUN_slice_accum");
	CPPGL_GL_SUN_triangle_list = has_ext("GL_SUN_triangle_list");
	CPPGL_GL_SUN_vertex = has_ext("GL_SUN_vertex");
	CPPGL_GL_WIN_phong_shading = has_ext("GL_WIN_phong_shading");
	CPPGL_GL_WIN_specular_fog = has_ext("GL_WIN_specular_fog");
	free_exts();
	return 1;
}

static void find_coreGL(void) {

    /* Thank you @elmindreda
     * https://github.com/elmindreda/greg/blob/master/templates/greg.c.in#L176
     * https://github.com/glfw/glfw/blob/master/src/context.c#L36
     */
    int i, major, minor;

    const char* version;
    const char* prefixes[] = {
        "OpenGL ES-CM ",
        "OpenGL ES-CL ",
        "OpenGL ES ",
        NULL
    };

    version = (const char*) glGetString(GL_VERSION);
    if (!version) return;

    for (i = 0;  prefixes[i];  i++) {
        const size_t length = strlen(prefixes[i]);
        if (strncmp(version, prefixes[i], length) == 0) {
            version += length;
            break;
        }
    }

/* PR #18 */
#ifdef _MSC_VER
    sscanf_s(version, "%d.%d", &major, &minor);
#else
    sscanf(version, "%d.%d", &major, &minor);
#endif

    GLVersion.major = major; GLVersion.minor = minor;
    max_loaded_major = major; max_loaded_minor = minor;
	CPPGL_GL_VERSION_1_0 = (major == 1 && minor >= 0) || major > 1;
	CPPGL_GL_VERSION_1_1 = (major == 1 && minor >= 1) || major > 1;
	CPPGL_GL_VERSION_1_2 = (major == 1 && minor >= 2) || major > 1;
	CPPGL_GL_VERSION_1_3 = (major == 1 && minor >= 3) || major > 1;
	CPPGL_GL_VERSION_1_4 = (major == 1 && minor >= 4) || major > 1;
	CPPGL_GL_VERSION_1_5 = (major == 1 && minor >= 5) || major > 1;
	CPPGL_GL_VERSION_2_0 = (major == 2 && minor >= 0) || major > 2;
	CPPGL_GL_VERSION_2_1 = (major == 2 && minor >= 1) || major > 2;
	CPPGL_GL_VERSION_3_0 = (major == 3 && minor >= 0) || major > 3;
	CPPGL_GL_VERSION_3_1 = (major == 3 && minor >= 1) || major > 3;
	CPPGL_GL_VERSION_3_2 = (major == 3 && minor >= 2) || major > 3;
	CPPGL_GL_VERSION_3_3 = (major == 3 && minor >= 3) || major > 3;
	CPPGL_GL_VERSION_4_0 = (major == 4 && minor >= 0) || major > 4;
	CPPGL_GL_VERSION_4_1 = (major == 4 && minor >= 1) || major > 4;
	if (GLVersion.major > 4 || (GLVersion.major >= 4 && GLVersion.minor >= 1)) {
		max_loaded_major = 4;
		max_loaded_minor = 1;
	}
}

int cppglLoadGLLoader(CPPGLloadproc load) {
	GLVersion.major = 0; GLVersion.minor = 0;
	glGetString = (PFNGLGETSTRINGPROC)load("glGetString");
	if(glGetString == NULL) return 0;
	if(glGetString(GL_VERSION) == NULL) return 0;
	find_coreGL();
	load_GL_VERSION_1_0(load);
	load_GL_VERSION_1_1(load);
	load_GL_VERSION_1_2(load);
	load_GL_VERSION_1_3(load);
	load_GL_VERSION_1_4(load);
	load_GL_VERSION_1_5(load);
	load_GL_VERSION_2_0(load);
	load_GL_VERSION_2_1(load);
	load_GL_VERSION_3_0(load);
	load_GL_VERSION_3_1(load);
	load_GL_VERSION_3_2(load);
	load_GL_VERSION_3_3(load);
	load_GL_VERSION_4_0(load);
	load_GL_VERSION_4_1(load);

	if (!find_extensionsGL()) return 0;
	load_GL_3DFX_tbuffer(load);
	load_GL_AMD_debug_output(load);
	load_GL_AMD_draw_buffers_blend(load);
	load_GL_AMD_gpu_shader_int64(load);
	load_GL_AMD_interleaved_elements(load);
	load_GL_AMD_multi_draw_indirect(load);
	load_GL_AMD_name_gen_delete(load);
	load_GL_AMD_occlusion_query_event(load);
	load_GL_AMD_performance_monitor(load);
	load_GL_AMD_sample_positions(load);
	load_GL_AMD_sparse_texture(load);
	load_GL_AMD_stencil_operation_extended(load);
	load_GL_AMD_vertex_shader_tessellator(load);
	load_GL_APPLE_element_array(load);
	load_GL_APPLE_fence(load);
	load_GL_APPLE_flush_buffer_range(load);
	load_GL_APPLE_object_purgeable(load);
	load_GL_APPLE_texture_range(load);
	load_GL_APPLE_vertex_array_object(load);
	load_GL_APPLE_vertex_array_range(load);
	load_GL_APPLE_vertex_program_evaluators(load);
	load_GL_ARB_ES2_compatibility(load);
	load_GL_ARB_ES3_1_compatibility(load);
	load_GL_ARB_ES3_2_compatibility(load);
	load_GL_ARB_base_instance(load);
	load_GL_ARB_bindless_texture(load);
	load_GL_ARB_blend_func_extended(load);
	load_GL_ARB_buffer_storage(load);
	load_GL_ARB_cl_event(load);
	load_GL_ARB_clear_buffer_object(load);
	load_GL_ARB_clear_texture(load);
	load_GL_ARB_clip_control(load);
	load_GL_ARB_color_buffer_float(load);
	load_GL_ARB_compute_shader(load);
	load_GL_ARB_compute_variable_group_size(load);
	load_GL_ARB_copy_buffer(load);
	load_GL_ARB_copy_image(load);
	load_GL_ARB_debug_output(load);
	load_GL_ARB_direct_state_access(load);
	load_GL_ARB_draw_buffers(load);
	load_GL_ARB_draw_buffers_blend(load);
	load_GL_ARB_draw_elements_base_vertex(load);
	load_GL_ARB_draw_indirect(load);
	load_GL_ARB_draw_instanced(load);
	load_GL_ARB_fragment_program(load);
	load_GL_ARB_framebuffer_no_attachments(load);
	load_GL_ARB_framebuffer_object(load);
	load_GL_ARB_geometry_shader4(load);
	load_GL_ARB_get_program_binary(load);
	load_GL_ARB_get_texture_sub_image(load);
	load_GL_ARB_gpu_shader_fp64(load);
	load_GL_ARB_gpu_shader_int64(load);
	load_GL_ARB_imaging(load);
	load_GL_ARB_indirect_parameters(load);
	load_GL_ARB_instanced_arrays(load);
	load_GL_ARB_internalformat_query(load);
	load_GL_ARB_internalformat_query2(load);
	load_GL_ARB_invalidate_subdata(load);
	load_GL_ARB_map_buffer_range(load);
	load_GL_ARB_matrix_palette(load);
	load_GL_ARB_multi_bind(load);
	load_GL_ARB_multi_draw_indirect(load);
	load_GL_ARB_multisample(load);
	load_GL_ARB_multitexture(load);
	load_GL_ARB_occlusion_query(load);
	load_GL_ARB_parallel_shader_compile(load);
	load_GL_ARB_point_parameters(load);
	load_GL_ARB_program_interface_query(load);
	load_GL_ARB_provoking_vertex(load);
	load_GL_ARB_robustness(load);
	load_GL_ARB_sample_locations(load);
	load_GL_ARB_sample_shading(load);
	load_GL_ARB_sampler_objects(load);
	load_GL_ARB_separate_shader_objects(load);
	load_GL_ARB_shader_atomic_counters(load);
	load_GL_ARB_shader_image_load_store(load);
	load_GL_ARB_shader_objects(load);
	load_GL_ARB_shader_storage_buffer_object(load);
	load_GL_ARB_shader_subroutine(load);
	load_GL_ARB_shading_language_include(load);
	load_GL_ARB_sparse_buffer(load);
	load_GL_ARB_sparse_texture(load);
	load_GL_ARB_sync(load);
	load_GL_ARB_tessellation_shader(load);
	load_GL_ARB_texture_barrier(load);
	load_GL_ARB_texture_buffer_object(load);
	load_GL_ARB_texture_buffer_range(load);
	load_GL_ARB_texture_compression(load);
	load_GL_ARB_texture_multisample(load);
	load_GL_ARB_texture_storage(load);
	load_GL_ARB_texture_storage_multisample(load);
	load_GL_ARB_texture_view(load);
	load_GL_ARB_timer_query(load);
	load_GL_ARB_transform_feedback2(load);
	load_GL_ARB_transform_feedback3(load);
	load_GL_ARB_transform_feedback_instanced(load);
	load_GL_ARB_transpose_matrix(load);
	load_GL_ARB_uniform_buffer_object(load);
	load_GL_ARB_vertex_array_object(load);
	load_GL_ARB_vertex_attrib_64bit(load);
	load_GL_ARB_vertex_attrib_binding(load);
	load_GL_ARB_vertex_blend(load);
	load_GL_ARB_vertex_buffer_object(load);
	load_GL_ARB_vertex_program(load);
	load_GL_ARB_vertex_shader(load);
	load_GL_ARB_vertex_type_2_10_10_10_rev(load);
	load_GL_ARB_viewport_array(load);
	load_GL_ARB_window_pos(load);
	load_GL_ATI_draw_buffers(load);
	load_GL_ATI_element_array(load);
	load_GL_ATI_envmap_bumpmap(load);
	load_GL_ATI_fragment_shader(load);
	load_GL_ATI_map_object_buffer(load);
	load_GL_ATI_pn_triangles(load);
	load_GL_ATI_separate_stencil(load);
	load_GL_ATI_vertex_array_object(load);
	load_GL_ATI_vertex_attrib_array_object(load);
	load_GL_ATI_vertex_streams(load);
	load_GL_EXT_bindable_uniform(load);
	load_GL_EXT_blend_color(load);
	load_GL_EXT_blend_equation_separate(load);
	load_GL_EXT_blend_func_separate(load);
	load_GL_EXT_blend_minmax(load);
	load_GL_EXT_color_subtable(load);
	load_GL_EXT_compiled_vertex_array(load);
	load_GL_EXT_convolution(load);
	load_GL_EXT_coordinate_frame(load);
	load_GL_EXT_copy_texture(load);
	load_GL_EXT_cull_vertex(load);
	load_GL_EXT_debug_label(load);
	load_GL_EXT_debug_marker(load);
	load_GL_EXT_depth_bounds_test(load);
	load_GL_EXT_direct_state_access(load);
	load_GL_EXT_draw_buffers2(load);
	load_GL_EXT_draw_instanced(load);
	load_GL_EXT_draw_range_elements(load);
	load_GL_EXT_fog_coord(load);
	load_GL_EXT_framebuffer_blit(load);
	load_GL_EXT_framebuffer_multisample(load);
	load_GL_EXT_framebuffer_object(load);
	load_GL_EXT_geometry_shader4(load);
	load_GL_EXT_gpu_program_parameters(load);
	load_GL_EXT_gpu_shader4(load);
	load_GL_EXT_histogram(load);
	load_GL_EXT_index_func(load);
	load_GL_EXT_index_material(load);
	load_GL_EXT_light_texture(load);
	load_GL_EXT_multi_draw_arrays(load);
	load_GL_EXT_multisample(load);
	load_GL_EXT_paletted_texture(load);
	load_GL_EXT_pixel_transform(load);
	load_GL_EXT_point_parameters(load);
	load_GL_EXT_polygon_offset(load);
	load_GL_EXT_polygon_offset_clamp(load);
	load_GL_EXT_provoking_vertex(load);
	load_GL_EXT_raster_multisample(load);
	load_GL_EXT_secondary_color(load);
	load_GL_EXT_separate_shader_objects(load);
	load_GL_EXT_shader_image_load_store(load);
	load_GL_EXT_stencil_clear_tag(load);
	load_GL_EXT_stencil_two_side(load);
	load_GL_EXT_subtexture(load);
	load_GL_EXT_texture3D(load);
	load_GL_EXT_texture_array(load);
	load_GL_EXT_texture_buffer_object(load);
	load_GL_EXT_texture_filter_minmax(load);
	load_GL_EXT_texture_integer(load);
	load_GL_EXT_texture_object(load);
	load_GL_EXT_texture_perturb_normal(load);
	load_GL_EXT_timer_query(load);
	load_GL_EXT_transform_feedback(load);
	load_GL_EXT_vertex_array(load);
	load_GL_EXT_vertex_attrib_64bit(load);
	load_GL_EXT_vertex_shader(load);
	load_GL_EXT_vertex_weighting(load);
	load_GL_EXT_window_rectangles(load);
	load_GL_EXT_x11_sync_object(load);
	load_GL_GREMEDY_frame_terminator(load);
	load_GL_GREMEDY_string_marker(load);
	load_GL_HP_image_transform(load);
	load_GL_IBM_multimode_draw_arrays(load);
	load_GL_IBM_static_data(load);
	load_GL_IBM_vertex_array_lists(load);
	load_GL_INGR_blend_func_separate(load);
	load_GL_INTEL_framebuffer_CMAA(load);
	load_GL_INTEL_map_texture(load);
	load_GL_INTEL_parallel_arrays(load);
	load_GL_INTEL_performance_query(load);
	load_GL_KHR_blend_equation_advanced(load);
	load_GL_KHR_debug(load);
	load_GL_KHR_robustness(load);
	load_GL_MESA_resize_buffers(load);
	load_GL_MESA_window_pos(load);
	load_GL_NVX_conditional_render(load);
	load_GL_NV_bindless_multi_draw_indirect(load);
	load_GL_NV_bindless_multi_draw_indirect_count(load);
	load_GL_NV_bindless_texture(load);
	load_GL_NV_blend_equation_advanced(load);
	load_GL_NV_clip_space_w_scaling(load);
	load_GL_NV_command_list(load);
	load_GL_NV_conditional_render(load);
	load_GL_NV_conservative_raster(load);
	load_GL_NV_conservative_raster_dilate(load);
	load_GL_NV_conservative_raster_pre_snap_triangles(load);
	load_GL_NV_copy_image(load);
	load_GL_NV_depth_buffer_float(load);
	load_GL_NV_draw_texture(load);
	load_GL_NV_evaluators(load);
	load_GL_NV_explicit_multisample(load);
	load_GL_NV_fence(load);
	load_GL_NV_fragment_coverage_to_color(load);
	load_GL_NV_fragment_program(load);
	load_GL_NV_framebuffer_mixed_samples(load);
	load_GL_NV_framebuffer_multisample_coverage(load);
	load_GL_NV_geometry_program4(load);
	load_GL_NV_gpu_program4(load);
	load_GL_NV_gpu_program5(load);
	load_GL_NV_gpu_shader5(load);
	load_GL_NV_half_float(load);
	load_GL_NV_internalformat_sample_query(load);
	load_GL_NV_occlusion_query(load);
	load_GL_NV_parameter_buffer_object(load);
	load_GL_NV_path_rendering(load);
	load_GL_NV_pixel_data_range(load);
	load_GL_NV_point_sprite(load);
	load_GL_NV_present_video(load);
	load_GL_NV_primitive_restart(load);
	load_GL_NV_register_combiners(load);
	load_GL_NV_register_combiners2(load);
	load_GL_NV_sample_locations(load);
	load_GL_NV_shader_buffer_load(load);
	load_GL_NV_texture_barrier(load);
	load_GL_NV_texture_multisample(load);
	load_GL_NV_transform_feedback(load);
	load_GL_NV_transform_feedback2(load);
	load_GL_NV_vdpau_interop(load);
	load_GL_NV_vertex_array_range(load);
	load_GL_NV_vertex_attrib_integer_64bit(load);
	load_GL_NV_vertex_buffer_unified_memory(load);
	load_GL_NV_vertex_program(load);
	load_GL_NV_vertex_program4(load);
	load_GL_NV_video_capture(load);
	load_GL_NV_viewport_swizzle(load);
	load_GL_OES_byte_coordinates(load);
	load_GL_OES_fixed_point(load);
	load_GL_OES_query_matrix(load);
	load_GL_OES_single_precision(load);
	load_GL_OVR_multiview(load);
	load_GL_PGI_misc_hints(load);
	load_GL_SGIS_detail_texture(load);
	load_GL_SGIS_fog_function(load);
	load_GL_SGIS_multisample(load);
	load_GL_SGIS_pixel_texture(load);
	load_GL_SGIS_point_parameters(load);
	load_GL_SGIS_sharpen_texture(load);
	load_GL_SGIS_texture4D(load);
	load_GL_SGIS_texture_color_mask(load);
	load_GL_SGIS_texture_filter4(load);
	load_GL_SGIX_async(load);
	load_GL_SGIX_flush_raster(load);
	load_GL_SGIX_fragment_lighting(load);
	load_GL_SGIX_framezoom(load);
	load_GL_SGIX_igloo_interface(load);
	load_GL_SGIX_instruments(load);
	load_GL_SGIX_list_priority(load);
	load_GL_SGIX_pixel_texture(load);
	load_GL_SGIX_polynomial_ffd(load);
	load_GL_SGIX_reference_plane(load);
	load_GL_SGIX_sprite(load);
	load_GL_SGIX_tag_sample_buffer(load);
	load_GL_SGI_color_table(load);
	load_GL_SUNX_constant_data(load);
	load_GL_SUN_global_alpha(load);
	load_GL_SUN_mesh_array(load);
	load_GL_SUN_triangle_list(load);
	load_GL_SUN_vertex(load);
	return GLVersion.major != 0 || GLVersion.minor != 0;
}

#else
#endif
